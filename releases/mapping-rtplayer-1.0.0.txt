com.qiniu.droid.rtplayer.BuildConfig -> com.qiniu.droid.rtplayer.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.lang.String GIT_HASH -> GIT_HASH
    6:6:void <init>() -> <init>
com.qiniu.droid.rtplayer.QNConfiguration -> com.qiniu.droid.rtplayer.QNConfiguration:
    java.util.Map mConfigures -> mConfigures
    java.lang.String CONF_PLAY_STAT -> CONF_PLAY_STAT
    java.lang.String CONF_DEBUG_FILE -> CONF_DEBUG_FILE
    11:13:void <init>() -> <init>
    41:43:void setConfigure(java.lang.String,java.lang.Object) -> setConfigure
    52:52:java.lang.Object getConfigure(java.lang.String) -> getConfigure
com.qiniu.droid.rtplayer.QNError -> com.qiniu.droid.rtplayer.QNError:
    int QN_NETWORK_ERROR -> QN_NETWORK_ERROR
    int QN_PLAY_AUTH_FAILED -> QN_PLAY_AUTH_FAILED
    int QN_PLAY_STREAM_NOT_EXIST -> QN_PLAY_STREAM_NOT_EXIST
    int QN_PLAY_REQUEST_FAILED -> QN_PLAY_REQUEST_FAILED
    int QN_DESCRIPTION_ERROR -> QN_DESCRIPTION_ERROR
    int QN_CONNECTION_ERROR -> QN_CONNECTION_ERROR
    int mCode -> mCode
    java.lang.String mDescription -> mDescription
    52:55:void <init>(int,java.lang.String) -> <init>
com.qiniu.droid.rtplayer.QNError$QNErrorCode -> com.qiniu.droid.rtplayer.QNError$QNErrorCode:
com.qiniu.droid.rtplayer.QNLogLevel -> com.qiniu.droid.rtplayer.QNLogLevel:
    com.qiniu.droid.rtplayer.QNLogLevel VERBOSE -> VERBOSE
    com.qiniu.droid.rtplayer.QNLogLevel INFO -> INFO
    com.qiniu.droid.rtplayer.QNLogLevel WARNING -> WARNING
    com.qiniu.droid.rtplayer.QNLogLevel ERROR -> ERROR
    com.qiniu.droid.rtplayer.QNLogLevel NONE -> NONE
    com.qiniu.droid.rtplayer.QNLogLevel[] $VALUES -> $VALUES
    6:6:com.qiniu.droid.rtplayer.QNLogLevel[] values() -> values
    6:6:com.qiniu.droid.rtplayer.QNLogLevel valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:11:void <clinit>() -> <clinit>
com.qiniu.droid.rtplayer.QNRTPlayer -> com.qiniu.droid.rtplayer.QNRTPlayer:
    int STATE_IDLE -> STATE_IDLE
    int STATE_INIT -> STATE_INIT
    int STATE_READY -> STATE_READY
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_STOP -> STATE_STOP
    int STATE_ERROR -> STATE_ERROR
    int INFO_FIRST_VIDEO_DECODE -> INFO_FIRST_VIDEO_DECODE
    int INFO_FIRST_AUDIO_DECODE -> INFO_FIRST_AUDIO_DECODE
    int INFO_VIDEO_SIZE_CHANGE -> INFO_VIDEO_SIZE_CHANGE
    int INFO_AUDIO_TRACK_RECEIVED -> INFO_AUDIO_TRACK_RECEIVED
    int INFO_VIDEO_TRACK_RECEIVED -> INFO_VIDEO_TRACK_RECEIVED
    int INFO_STATS_UPDATE -> INFO_STATS_UPDATE
    void initPlayer(com.qiniu.droid.rtplayer.QNRTPlayerSetting) -> initPlayer
    void setEventListener(com.qiniu.droid.rtplayer.QNRTPlayer$EventListener) -> setEventListener
    void setSurfaceRenderWindow(com.qiniu.droid.rtplayer.render.QNSurfaceView) -> setSurfaceRenderWindow
    void setTextureRenderWindow(com.qiniu.droid.rtplayer.render.QNTextureView) -> setTextureRenderWindow
    void playUrl(com.qiniu.droid.rtplayer.QNRTPlayerUrl) -> playUrl
    boolean isPlaying() -> isPlaying
    boolean hasVideo() -> hasVideo
    boolean hasAudio() -> hasAudio
    int getPlayerState() -> getPlayerState
    void muteVideo(boolean) -> muteVideo
    void muteAudio(boolean) -> muteAudio
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void stopPlay() -> stopPlay
    void configurePlayer(com.qiniu.droid.rtplayer.QNConfiguration) -> configurePlayer
    com.qiniu.droid.rtplayer.QNConfiguration getConfigure() -> getConfigure
    void releasePlayer() -> releasePlayer
com.qiniu.droid.rtplayer.QNRTPlayer$EventListener -> com.qiniu.droid.rtplayer.QNRTPlayer$EventListener:
    void onPlayerStateChanged(int) -> onPlayerStateChanged
    void onPlayerInfo(int,java.lang.Object) -> onPlayerInfo
    void onPlayerError(com.qiniu.droid.rtplayer.QNError) -> onPlayerError
com.qiniu.droid.rtplayer.QNRTPlayer$PlayerInfo -> com.qiniu.droid.rtplayer.QNRTPlayer$PlayerInfo:
com.qiniu.droid.rtplayer.QNRTPlayer$PlayerState -> com.qiniu.droid.rtplayer.QNRTPlayer$PlayerState:
com.qiniu.droid.rtplayer.QNRTPlayerFactory -> com.qiniu.droid.rtplayer.QNRTPlayerFactory:
    10:10:void <init>() -> <init>
    19:19:com.qiniu.droid.rtplayer.QNRTPlayer createQNRTPlayer(android.content.Context) -> createQNRTPlayer
com.qiniu.droid.rtplayer.QNRTPlayerSetting -> com.qiniu.droid.rtplayer.QNRTPlayerSetting:
    com.qiniu.droid.rtplayer.QNLogLevel mLogLevel -> mLogLevel
    6:6:void <init>() -> <init>
    16:16:com.qiniu.droid.rtplayer.QNLogLevel getLogLevel() -> getLogLevel
    25:26:com.qiniu.droid.rtplayer.QNRTPlayerSetting setLogLevel(com.qiniu.droid.rtplayer.QNLogLevel) -> setLogLevel
com.qiniu.droid.rtplayer.QNRTPlayerStats -> com.qiniu.droid.rtplayer.QNRTPlayerStats:
    int frameRate -> frameRate
    int videoBitrate -> videoBitrate
    int audioBitrate -> audioBitrate
    7:7:void <init>() -> <init>
    25:25:java.lang.String toString() -> toString
com.qiniu.droid.rtplayer.QNRTPlayerUrl -> com.qiniu.droid.rtplayer.QNRTPlayerUrl:
    java.lang.String mURL -> mURL
    boolean mForceReset -> mForceReset
    boolean mHttpPost -> mHttpPost
    6:10:void <init>() -> <init>
    18:18:java.lang.String getURL() -> getURL
    27:28:com.qiniu.droid.rtplayer.QNRTPlayerUrl setURL(java.lang.String) -> setURL
    37:37:boolean isForceReset() -> isForceReset
    46:47:com.qiniu.droid.rtplayer.QNRTPlayerUrl setForceReset(boolean) -> setForceReset
    60:60:boolean isHttpPost() -> isHttpPost
    68:69:com.qiniu.droid.rtplayer.QNRTPlayerUrl setHttpPost(boolean) -> setHttpPost
com.qiniu.droid.rtplayer.QNRenderMode -> com.qiniu.droid.rtplayer.QNRenderMode:
    com.qiniu.droid.rtplayer.QNRenderMode SCALE_ASPECT_FIT -> SCALE_ASPECT_FIT
    com.qiniu.droid.rtplayer.QNRenderMode SCALE_ASPECT_FILL -> SCALE_ASPECT_FILL
    com.qiniu.droid.rtplayer.QNRenderMode SCALE_ASPECT_BALANCED -> SCALE_ASPECT_BALANCED
    com.qiniu.droid.rtplayer.QNRenderMode[] $VALUES -> $VALUES
    6:6:com.qiniu.droid.rtplayer.QNRenderMode[] values() -> values
    6:6:com.qiniu.droid.rtplayer.QNRenderMode valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:22:void <clinit>() -> <clinit>
com.qiniu.droid.rtplayer.QNSize -> com.qiniu.droid.rtplayer.QNSize:
    int width -> width
    int height -> height
    10:13:void <init>(int,int) -> <init>
    17:17:java.lang.String toString() -> toString
    22:26:boolean equals(java.lang.Object) -> equals
com.qiniu.droid.rtplayer.R -> com.qiniu.droid.rtplayer.R:
    10:10:void <init>() -> <init>
com.qiniu.droid.rtplayer.R$string -> com.qiniu.droid.rtplayer.R$string:
    int app_name -> app_name
    13:13:void <init>() -> <init>
    15:15:void <clinit>() -> <clinit>
com.qiniu.droid.rtplayer.core.DefaultQNRTPlayerFactory -> com.qiniu.droid.rtplayer.aISPj7KHQ7.aISPj7KHQ7:
    11:11:com.qiniu.droid.rtplayer.QNRTPlayer createPlayer(android.content.Context) -> a
com.qiniu.droid.rtplayer.core.QNConnection -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Qja3o2vx62:
    android.content.Context mContext -> a
    com.qiniu.droid.rtplayer.QNRTPlayerSetting mSettings -> b
    com.qiniu.droid.rtplayer.core.QNConnectionListener mListener -> c
    com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder mPeerConnectionHolder -> d
    android.os.Handler mTransportHandler -> e
    long mStatsMs -> f
    boolean mReleasing -> g
    57:69:void <init>(android.content.Context,com.qiniu.droid.rtplayer.QNRTPlayerSetting,com.qiniu.droid.rtplayer.core.QNConnectionListener) -> <init>
    72:80:void connectStream(com.qiniu.droid.rtplayer.QNRTPlayerUrl) -> a
    83:84:void setStats(long) -> a
    87:91:void stopStream() -> a
    94:102:void release() -> b
    105:124:boolean waitThreadDone(long) -> b
    96:99:void lambda$release$2() -> c
    89:90:void lambda$stopStream$1() -> d
    74:79:void lambda$connectStream$0(com.qiniu.droid.rtplayer.QNRTPlayerUrl) -> b
    39:39:boolean access$100(com.qiniu.droid.rtplayer.core.QNConnection) -> a
    39:39:long access$200(com.qiniu.droid.rtplayer.core.QNConnection) -> b
    39:39:com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder access$300(com.qiniu.droid.rtplayer.core.QNConnection) -> c
    39:39:android.os.Handler access$400(com.qiniu.droid.rtplayer.core.QNConnection) -> d
    39:39:com.qiniu.droid.rtplayer.core.QNConnectionListener access$500(com.qiniu.droid.rtplayer.core.QNConnection) -> e
    39:39:android.content.Context access$600(com.qiniu.droid.rtplayer.core.QNConnection) -> f
    39:39:com.qiniu.droid.rtplayer.QNRTPlayerSetting access$700(com.qiniu.droid.rtplayer.core.QNConnection) -> g
    39:39:android.content.Context access$602(com.qiniu.droid.rtplayer.core.QNConnection,android.content.Context) -> a
com.qiniu.droid.rtplayer.core.QNConnection$1 -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Qja3o2vx62$1:
    java.lang.Object val$waitDoneLock -> a
    com.qiniu.droid.rtplayer.core.QNConnection this$0 -> b
    106:106:void <init>(com.qiniu.droid.rtplayer.core.QNConnection,java.lang.Object) -> <init>
    109:112:void run() -> run
com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Qja3o2vx62$aISPj7KHQ7:
    org.webrtc.PeerConnectionFactory mPeerConnectionFactory -> a
    org.webrtc.PeerConnection mPeerConnection -> b
    org.webrtc.audio.JavaAudioDeviceModule mAudioDeviceModule -> c
    com.qiniu.droid.rtplayer.core.QNConnectionStats mStats -> d
    long mLastStatTimeMs -> e
    org.webrtc.EglBase mRootEglBase -> f
    boolean mExplicitlyStop -> g
    com.qiniu.droid.rtplayer.core.QNConnection this$0 -> h
    163:172:void <init>(com.qiniu.droid.rtplayer.core.QNConnection) -> <init>
    175:175:org.webrtc.EglBase$Context getEglContext() -> a
    179:198:void initPeerConnectionFactory() -> b
    201:215:boolean createPeerConnection() -> c
    219:222:void stopStream() -> d
    225:237:void release() -> e
    240:246:void disposePeerConnectionInstance() -> f
    249:308:void connectStream(java.lang.String,boolean) -> a
    311:315:org.webrtc.MediaConstraints getMediaConstraints() -> g
    319:342:com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver createOffer(org.webrtc.MediaConstraints) -> a
    346:370:com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver setLocalDescription(org.webrtc.SessionDescription) -> a
    374:398:com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver setRemoteDescription(org.webrtc.SessionDescription) -> b
    403:408:int mapResponseCode(int) -> a
    416:423:java.lang.String assemblePostUrl(java.lang.String,boolean) -> b
    436:447:java.lang.String assembleBody(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    451:503:void getStreamStats() -> h
    508:509:void onSignalingChange(org.webrtc.PeerConnection$SignalingState) -> onSignalingChange
    513:519:void onIceConnectionChange(org.webrtc.PeerConnection$IceConnectionState) -> onIceConnectionChange
    524:524:void onIceConnectionReceivingChange(boolean) -> onIceConnectionReceivingChange
    529:529:void onIceGatheringChange(org.webrtc.PeerConnection$IceGatheringState) -> onIceGatheringChange
    534:534:void onIceCandidate(org.webrtc.IceCandidate) -> onIceCandidate
    539:539:void onIceCandidatesRemoved(org.webrtc.IceCandidate[]) -> onIceCandidatesRemoved
    543:544:void onAddStream(org.webrtc.MediaStream) -> onAddStream
    548:549:void onRemoveStream(org.webrtc.MediaStream) -> onRemoveStream
    553:560:void onAddTrack(org.webrtc.RtpReceiver,org.webrtc.MediaStream[]) -> onAddTrack
    565:565:void onDataChannel(org.webrtc.DataChannel) -> onDataChannel
    570:570:void onRenegotiationNeeded() -> onRenegotiationNeeded
    456:502:void lambda$getStreamStats$0(org.webrtc.RTCStatsReport) -> a
com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder$1 -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Qja3o2vx62$aISPj7KHQ7$1:
    com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver val$result -> a
    java.util.concurrent.CountDownLatch val$countDownLatch -> b
    com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder this$1 -> c
    321:321:void <init>(com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder,com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver,java.util.concurrent.CountDownLatch) -> <init>
    324:326:void onCreateSuccess(org.webrtc.SessionDescription) -> onCreateSuccess
    330:331:void onCreateFailure(java.lang.String) -> onCreateFailure
    335:335:void onSetSuccess() -> onSetSuccess
    339:339:void onSetFailure(java.lang.String) -> onSetFailure
com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder$2 -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Qja3o2vx62$aISPj7KHQ7$2:
    com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver val$resultDeliver -> a
    java.util.concurrent.CountDownLatch val$countDownLatch -> b
    com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder this$1 -> c
    348:348:void <init>(com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder,com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver,java.util.concurrent.CountDownLatch) -> <init>
    351:351:void onCreateSuccess(org.webrtc.SessionDescription) -> onCreateSuccess
    355:355:void onCreateFailure(java.lang.String) -> onCreateFailure
    359:361:void onSetSuccess() -> onSetSuccess
    365:367:void onSetFailure(java.lang.String) -> onSetFailure
com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder$3 -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Qja3o2vx62$aISPj7KHQ7$3:
    com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver val$resultDeliver -> a
    java.util.concurrent.CountDownLatch val$countDownLatch -> b
    com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder this$1 -> c
    376:376:void <init>(com.qiniu.droid.rtplayer.core.QNConnection$PeerConnectionHolder,com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver,java.util.concurrent.CountDownLatch) -> <init>
    379:379:void onCreateSuccess(org.webrtc.SessionDescription) -> onCreateSuccess
    383:383:void onCreateFailure(java.lang.String) -> onCreateFailure
    387:389:void onSetSuccess() -> onSetSuccess
    393:395:void onSetFailure(java.lang.String) -> onSetFailure
com.qiniu.droid.rtplayer.core.QNConnection$StatsTask -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Qja3o2vx62$Qja3o2vx62:
    long STAT_INTERVAL_MS -> a
    com.qiniu.droid.rtplayer.core.QNConnection this$0 -> b
    127:129:void <init>(com.qiniu.droid.rtplayer.core.QNConnection) -> <init>
    133:141:void run() -> run
    127:127:void <init>(com.qiniu.droid.rtplayer.core.QNConnection,com.qiniu.droid.rtplayer.core.QNConnection$1) -> <init>
com.qiniu.droid.rtplayer.core.QNConnectionEvent -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Wyd3OXAZgV:
    int mCode -> a
    com.qiniu.droid.rtplayer.core.QNConnectionEvent$Data mData -> b
    32:35:void <init>(int,com.qiniu.droid.rtplayer.core.QNConnectionEvent$Data) -> <init>
    38:38:com.qiniu.droid.rtplayer.core.QNConnectionEvent$Data getData() -> a
    42:42:int getCode() -> b
com.qiniu.droid.rtplayer.core.QNConnectionEvent$Data -> com.qiniu.droid.rtplayer.aISPj7KHQ7.Wyd3OXAZgV$aISPj7KHQ7:
    java.lang.Object data -> a
    27:29:void <init>(java.lang.Object) -> <init>
com.qiniu.droid.rtplayer.core.QNConnectionListener -> com.qiniu.droid.rtplayer.aISPj7KHQ7.IxDJysLV5r:
    void onConnectionEvent(com.qiniu.droid.rtplayer.core.QNConnectionEvent) -> a
    void onConnectionError(com.qiniu.droid.rtplayer.QNError) -> a
com.qiniu.droid.rtplayer.core.QNConnectionStats -> com.qiniu.droid.rtplayer.aISPj7KHQ7.sUTWEAMAI:
    java.util.Map mLastStatistics -> a
    29:31:void <init>() -> <init>
    34:60:com.qiniu.droid.rtplayer.QNRTPlayerStats updateStatistics(org.webrtc.RTCStats,org.webrtc.RTCStats) -> a
    64:97:com.qiniu.droid.rtplayer.QNRTPlayerStats handleStatistics(org.webrtc.RTCStats,org.webrtc.RTCStats,com.qiniu.droid.rtplayer.core.QNConnectionStats$PlayerRawStats) -> a
    101:108:int getFrameRate(long,long,long) -> a
    112:119:int getBitrate(long,long,long) -> b
    138:146:long getLongValueFromStatsMap(java.util.Map,java.lang.String) -> a
    166:174:java.lang.String getStringValueFromStatsMap(java.util.Map,java.lang.String) -> b
    180:188:java.math.BigInteger getBigIntegerValueFromStatsMap(java.util.Map,java.lang.String) -> c
com.qiniu.droid.rtplayer.core.QNConnectionStats$1 -> com.qiniu.droid.rtplayer.aISPj7KHQ7.sUTWEAMAI$1:
com.qiniu.droid.rtplayer.core.QNConnectionStats$PlayerRawStats -> com.qiniu.droid.rtplayer.aISPj7KHQ7.sUTWEAMAI$aISPj7KHQ7:
    long statsTime -> a
    long videoTransmitBytes -> b
    long audioTransmitBytes -> c
    long videoTransmitFrames -> d
    com.qiniu.droid.rtplayer.core.QNConnectionStats this$0 -> e
    16:16:void <init>(com.qiniu.droid.rtplayer.core.QNConnectionStats) -> <init>
    16:16:void <init>(com.qiniu.droid.rtplayer.core.QNConnectionStats,com.qiniu.droid.rtplayer.core.QNConnectionStats$1) -> <init>
com.qiniu.droid.rtplayer.core.QNRTPlayerImpl -> com.qiniu.droid.rtplayer.aISPj7KHQ7.kl7N8DF4OVS:
    android.content.Context mContext -> a
    com.qiniu.droid.rtplayer.QNRTPlayerSetting mSettings -> b
    com.qiniu.droid.rtplayer.QNRTPlayerUrl mPlayUrl -> c
    com.qiniu.droid.rtplayer.QNRTPlayer$EventListener mEventListener -> d
    int mPlayerState -> e
    org.webrtc.EglBase$Context mEglContext -> f
    com.qiniu.droid.rtplayer.render.QNSurfaceView mSurfaceWindow -> g
    com.qiniu.droid.rtplayer.render.QNTextureView mTextureWindow -> h
    java.lang.Object mResLock -> i
    com.qiniu.droid.rtplayer.core.QNConnection mConnection -> j
    org.webrtc.VideoTrack mVideoTrack -> k
    com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerVideoSink mVideoSink -> l
    org.webrtc.AudioTrack mAudioTrack -> m
    com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerAudioSink mAudioSink -> n
    float mAudioVolume -> o
    com.qiniu.droid.rtplayer.QNConfiguration mConfigures -> p
    android.os.Handler mMainHandler -> q
    com.qiniu.droid.rtplayer.utils.FileLogHelper mFileLog -> r
    34:63:void <init>(android.content.Context) -> <init>
    67:71:void initPlayer(com.qiniu.droid.rtplayer.QNRTPlayerSetting) -> initPlayer
    75:76:void setEventListener(com.qiniu.droid.rtplayer.QNRTPlayer$EventListener) -> setEventListener
    80:85:void setSurfaceRenderWindow(com.qiniu.droid.rtplayer.render.QNSurfaceView) -> setSurfaceRenderWindow
    89:94:void setTextureRenderWindow(com.qiniu.droid.rtplayer.render.QNTextureView) -> setTextureRenderWindow
    98:111:void playUrl(com.qiniu.droid.rtplayer.QNRTPlayerUrl) -> playUrl
    115:115:boolean isPlaying() -> isPlaying
    120:120:boolean hasVideo() -> hasVideo
    125:125:boolean hasAudio() -> hasAudio
    130:130:int getPlayerState() -> getPlayerState
    135:146:void muteVideo(boolean) -> muteVideo
    150:161:void muteAudio(boolean) -> muteAudio
    165:180:void setVolume(float) -> setVolume
    184:184:float getVolume() -> getVolume
    189:214:void configurePlayer(com.qiniu.droid.rtplayer.QNConfiguration) -> configurePlayer
    218:218:com.qiniu.droid.rtplayer.QNConfiguration getConfigure() -> getConfigure
    223:239:void stopPlay() -> stopPlay
    243:261:void releasePlayer() -> releasePlayer
    264:270:void notifyStateChange() -> a
    273:287:java.lang.String readablePlayState(int) -> a
    266:269:void lambda$notifyStateChange$0() -> b
    28:28:android.os.Handler access$100(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> a
    28:28:int access$200(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> b
    28:28:int access$202(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,int) -> a
    28:28:void access$300(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> c
    28:28:com.qiniu.droid.rtplayer.QNRTPlayer$EventListener access$400(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> d
    28:28:com.qiniu.droid.rtplayer.render.QNSurfaceView access$500(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> e
    28:28:com.qiniu.droid.rtplayer.render.QNTextureView access$600(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> f
    28:28:java.lang.Object access$700(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> g
    28:28:org.webrtc.VideoTrack access$802(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,org.webrtc.VideoTrack) -> a
    28:28:com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerVideoSink access$900(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> h
    28:28:com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerVideoSink access$902(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerVideoSink) -> a
    28:28:org.webrtc.VideoTrack access$800(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> i
    28:28:org.webrtc.AudioTrack access$1102(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,org.webrtc.AudioTrack) -> a
    28:28:com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerAudioSink access$1202(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerAudioSink) -> a
    28:28:com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerAudioSink access$1200(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> j
    28:28:org.webrtc.AudioTrack access$1100(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> k
    28:28:org.webrtc.EglBase$Context access$1402(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,org.webrtc.EglBase$Context) -> a
    28:28:org.webrtc.EglBase$Context access$1400(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> l
com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$1 -> com.qiniu.droid.rtplayer.aISPj7KHQ7.kl7N8DF4OVS$1:
com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$ConnectionListenerWrapper -> com.qiniu.droid.rtplayer.aISPj7KHQ7.kl7N8DF4OVS$aISPj7KHQ7:
    com.qiniu.droid.rtplayer.core.QNRTPlayerImpl this$0 -> a
    366:366:void <init>(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> <init>
    369:434:void onConnectionEvent(com.qiniu.droid.rtplayer.core.QNConnectionEvent) -> a
    438:444:void onConnectionError(com.qiniu.droid.rtplayer.QNError) -> a
    440:443:void lambda$onConnectionError$3(com.qiniu.droid.rtplayer.QNError) -> b
    421:424:void lambda$onConnectionEvent$2(com.qiniu.droid.rtplayer.core.QNConnectionEvent) -> b
    401:404:void lambda$onConnectionEvent$1(boolean) -> a
    377:383:void lambda$onConnectionEvent$0() -> a
    366:366:void <init>(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$1) -> <init>
com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerAudioSink -> com.qiniu.droid.rtplayer.aISPj7KHQ7.kl7N8DF4OVS$Qja3o2vx62:
    boolean mIsFirstFrame -> b
    long mLastDataTimestamp -> c
    com.qiniu.droid.rtplayer.core.QNRTPlayerImpl this$0 -> a
    291:293:void <init>(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> <init>
    298:311:void onData(java.nio.ByteBuffer,int,int,int,int) -> onData
    301:304:void lambda$onData$0() -> a
    291:291:void <init>(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$1) -> <init>
com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$RTPlayerVideoSink -> com.qiniu.droid.rtplayer.aISPj7KHQ7.kl7N8DF4OVS$Wyd3OXAZgV:
    boolean mIsFirstFrame -> b
    boolean mEnabled -> c
    long mLastDataTimestamp -> d
    com.qiniu.droid.rtplayer.QNSize mFrameSize -> e
    com.qiniu.droid.rtplayer.core.QNRTPlayerImpl this$0 -> a
    318:320:void <init>(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl) -> <init>
    326:355:void onFrame(org.webrtc.VideoFrame) -> onFrame
    358:359:void setEnable(boolean) -> a
    345:348:void lambda$onFrame$1() -> a
    329:332:void lambda$onFrame$0() -> b
    318:318:void <init>(com.qiniu.droid.rtplayer.core.QNRTPlayerImpl,com.qiniu.droid.rtplayer.core.QNRTPlayerImpl$1) -> <init>
com.qiniu.droid.rtplayer.render.QNSurfaceView -> com.qiniu.droid.rtplayer.render.QNSurfaceView:
    boolean mInitialized -> a
    19:23:void <init>(android.content.Context) -> <init>
    19:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:36:void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents,int[],org.webrtc.RendererCommon$GlDrawer) -> init
    39:40:void setScaleMode(com.qiniu.droid.rtplayer.QNRenderMode) -> setScaleMode
    44:46:void release() -> release
    50:51:void onFrame(org.webrtc.VideoFrame) -> onFrame
com.qiniu.droid.rtplayer.render.QNTextureView -> com.qiniu.droid.rtplayer.render.QNTextureView:
    boolean mInitialized -> a
    19:23:void <init>(android.content.Context) -> <init>
    19:27:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    31:36:void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents,int[],org.webrtc.RendererCommon$GlDrawer) -> init
    39:40:void setScaleMode(com.qiniu.droid.rtplayer.QNRenderMode) -> setScaleMode
    44:46:void release() -> release
    50:51:void onFrame(org.webrtc.VideoFrame) -> onFrame
com.qiniu.droid.rtplayer.utils.FileLogHelper -> com.qiniu.droid.rtplayer.Qja3o2vx62.aISPj7KHQ7:
    java.text.SimpleDateFormat LOG_FILE_DATE_FORMAT -> a
    android.content.Context mContext -> b
    int mPid -> c
    java.lang.String mLogPath -> d
    int mLogFileMaxCount -> e
    java.lang.Object mSync -> f
    boolean mIsLogFileEnabled -> g
    boolean mRelease -> h
    com.qiniu.droid.rtplayer.utils.FileLogHelper$LogDumpThread mDumpThread -> i
    19:29:void <init>() -> <init>
    35:49:void init(android.content.Context) -> a
    52:57:void setLogFileEnabled(boolean) -> a
    64:69:void release() -> a
    19:19:java.lang.String access$100(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> a
    19:19:boolean access$200(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> b
    19:19:boolean access$300(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> c
    19:19:java.text.SimpleDateFormat access$400() -> b
    19:19:int access$600(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> d
    19:19:int access$700(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> e
    19:19:java.lang.Object access$800(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> f
    21:21:void <clinit>() -> <clinit>
com.qiniu.droid.rtplayer.utils.FileLogHelper$1 -> com.qiniu.droid.rtplayer.Qja3o2vx62.aISPj7KHQ7$1:
com.qiniu.droid.rtplayer.utils.FileLogHelper$FileComparator -> com.qiniu.droid.rtplayer.Qja3o2vx62.aISPj7KHQ7$aISPj7KHQ7:
    com.qiniu.droid.rtplayer.utils.FileLogHelper this$0 -> a
    71:71:void <init>(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> <init>
    73:76:int compare(java.io.File,java.io.File) -> a
    71:71:int compare(java.lang.Object,java.lang.Object) -> compare
    71:71:void <init>(com.qiniu.droid.rtplayer.utils.FileLogHelper,com.qiniu.droid.rtplayer.utils.FileLogHelper$1) -> <init>
com.qiniu.droid.rtplayer.utils.FileLogHelper$LogDumpThread -> com.qiniu.droid.rtplayer.Qja3o2vx62.aISPj7KHQ7$Qja3o2vx62:
    com.qiniu.droid.rtplayer.utils.FileLogHelper this$0 -> a
    81:81:void <init>(com.qiniu.droid.rtplayer.utils.FileLogHelper) -> <init>
    83:141:void dumpLog() -> a
    145:158:void run() -> run
    81:81:void <init>(com.qiniu.droid.rtplayer.utils.FileLogHelper,com.qiniu.droid.rtplayer.utils.FileLogHelper$1) -> <init>
com.qiniu.droid.rtplayer.utils.HttpConnection -> com.qiniu.droid.rtplayer.Qja3o2vx62.Qja3o2vx62:
    java.lang.String mMethod -> a
    java.lang.String mUrl -> b
    java.lang.String mMessage -> c
    java.lang.String mContentType -> d
    java.lang.String mContentEncoding -> e
    int mErrorCode -> f
    java.lang.String mErrorMsg -> g
    25:29:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    32:33:void setContentType(java.lang.String) -> a
    43:118:java.lang.String sendHttpMessage(boolean) -> a
    132:132:java.lang.String getErrorMsg() -> a
    136:137:java.lang.String drainStream(java.io.InputStream) -> a
com.qiniu.droid.rtplayer.utils.QNLogging -> com.qiniu.droid.rtplayer.Qja3o2vx62.Wyd3OXAZgV:
    29:32:void i(java.lang.String) -> a
    43:46:void d(java.lang.String) -> b
    56:59:void w(java.lang.String) -> c
    69:72:void e(java.lang.String) -> d
    90:99:java.lang.String prefix() -> a
com.qiniu.droid.rtplayer.utils.QNResult -> com.qiniu.droid.rtplayer.Qja3o2vx62.IxDJysLV5r:
com.qiniu.droid.rtplayer.utils.QNResult$ResultDeliver -> com.qiniu.droid.rtplayer.Qja3o2vx62.IxDJysLV5r$aISPj7KHQ7:
    java.lang.Object data -> a
    8:8:void <init>() -> <init>
org.webrtc.AndroidVideoDecoder -> org.webrtc.AndroidVideoDecoder:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_FORMAT_KEY_STRIDE -> MEDIA_FORMAT_KEY_STRIDE
    java.lang.String MEDIA_FORMAT_KEY_SLICE_HEIGHT -> MEDIA_FORMAT_KEY_SLICE_HEIGHT
    java.lang.String MEDIA_FORMAT_KEY_CROP_LEFT -> MEDIA_FORMAT_KEY_CROP_LEFT
    java.lang.String MEDIA_FORMAT_KEY_CROP_RIGHT -> MEDIA_FORMAT_KEY_CROP_RIGHT
    java.lang.String MEDIA_FORMAT_KEY_CROP_TOP -> MEDIA_FORMAT_KEY_CROP_TOP
    java.lang.String MEDIA_FORMAT_KEY_CROP_BOTTOM -> MEDIA_FORMAT_KEY_CROP_BOTTOM
    int MEDIA_CODEC_RELEASE_TIMEOUT_MS -> MEDIA_CODEC_RELEASE_TIMEOUT_MS
    int DEQUEUE_INPUT_TIMEOUT_US -> DEQUEUE_INPUT_TIMEOUT_US
    int DEQUEUE_OUTPUT_BUFFER_TIMEOUT_US -> DEQUEUE_OUTPUT_BUFFER_TIMEOUT_US
    org.webrtc.MediaCodecWrapperFactory mediaCodecWrapperFactory -> mediaCodecWrapperFactory
    java.lang.String codecName -> codecName
    org.webrtc.VideoCodecType codecType -> codecType
    java.util.concurrent.BlockingDeque frameInfos -> frameInfos
    int colorFormat -> colorFormat
    java.lang.Thread outputThread -> outputThread
    org.webrtc.ThreadUtils$ThreadChecker outputThreadChecker -> outputThreadChecker
    org.webrtc.ThreadUtils$ThreadChecker decoderThreadChecker -> decoderThreadChecker
    boolean running -> running
    java.lang.Exception shutdownException -> shutdownException
    java.lang.Object dimensionLock -> dimensionLock
    int width -> width
    int height -> height
    int stride -> stride
    int sliceHeight -> sliceHeight
    boolean hasDecodedFirstFrame -> hasDecodedFirstFrame
    boolean keyFrameRequired -> keyFrameRequired
    org.webrtc.EglBase$Context sharedContext -> sharedContext
    org.webrtc.SurfaceTextureHelper surfaceTextureHelper -> surfaceTextureHelper
    android.view.Surface surface -> surface
    java.lang.Object renderedTextureMetadataLock -> renderedTextureMetadataLock
    org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata renderedTextureMetadata -> renderedTextureMetadata
    org.webrtc.VideoDecoder$Callback callback -> callback
    org.webrtc.MediaCodecWrapper codec -> codec
    92:146:void <init>(org.webrtc.MediaCodecWrapperFactory,java.lang.String,org.webrtc.VideoCodecType,int,org.webrtc.EglBase$Context) -> <init>
    150:158:org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback) -> initDecode
    163:205:org.webrtc.VideoCodecStatus initDecodeInternal(int,int) -> initDecodeInternal
    210:296:org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo) -> decode
    301:301:boolean getPrefersLateDecoding() -> getPrefersLateDecoding
    306:306:java.lang.String getImplementationName() -> getImplementationName
    314:328:org.webrtc.VideoCodecStatus release() -> release
    333:356:org.webrtc.VideoCodecStatus releaseInternal() -> releaseInternal
    360:365:org.webrtc.VideoCodecStatus reinitDecode(int,int) -> reinitDecode
    369:369:java.lang.Thread createOutputThread() -> createOutputThread
    383:420:void deliverDecodedFrame() -> deliverDecodedFrame
    427:442:void deliverTextureFrame(int,android.media.MediaCodec$BufferInfo,int,java.lang.Integer) -> deliverTextureFrame
    449:462:void onFrame(org.webrtc.VideoFrame) -> onFrame
    468:509:void deliverByteFrame(int,android.media.MediaCodec$BufferInfo,int,java.lang.Integer) -> deliverByteFrame
    514:515:org.webrtc.VideoFrame$Buffer copyNV12ToI420Buffer(java.nio.ByteBuffer,int,int,int,int) -> copyNV12ToI420Buffer
    520:573:org.webrtc.VideoFrame$Buffer copyI420Buffer(java.nio.ByteBuffer,int,int,int,int) -> copyI420Buffer
    577:627:void reformat(android.media.MediaFormat) -> reformat
    630:645:void releaseCodecOnOutputThread() -> releaseCodecOnOutputThread
    648:651:void stopOnOutputThread(java.lang.Exception) -> stopOnOutputThread
    654:659:boolean isSupportedColorFormat(int) -> isSupportedColorFormat
    664:664:org.webrtc.SurfaceTextureHelper createSurfaceTextureHelper() -> createSurfaceTextureHelper
    670:671:void releaseSurface() -> releaseSurface
    675:675:org.webrtc.VideoFrame$I420Buffer allocateI420Buffer(int,int) -> allocateI420Buffer
    681:682:void copyPlane(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> copyPlane
    33:33:org.webrtc.ThreadUtils$ThreadChecker access$002(org.webrtc.AndroidVideoDecoder,org.webrtc.ThreadUtils$ThreadChecker) -> access$002
    33:33:boolean access$100(org.webrtc.AndroidVideoDecoder) -> access$100
    33:33:void access$200(org.webrtc.AndroidVideoDecoder) -> access$200
org.webrtc.AndroidVideoDecoder$1 -> org.webrtc.AndroidVideoDecoder$1:
    org.webrtc.AndroidVideoDecoder this$0 -> this$0
    369:369:void <init>(org.webrtc.AndroidVideoDecoder,java.lang.String) -> <init>
    372:377:void run() -> run
org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata -> org.webrtc.AndroidVideoDecoder$DecodedTextureMetadata:
    long presentationTimestampUs -> presentationTimestampUs
    java.lang.Integer decodeTimeMs -> decodeTimeMs
    115:118:void <init>(long,java.lang.Integer) -> <init>
org.webrtc.AndroidVideoDecoder$FrameInfo -> org.webrtc.AndroidVideoDecoder$FrameInfo:
    long decodeStartTimeMs -> decodeStartTimeMs
    int rotation -> rotation
    66:69:void <init>(long,int) -> <init>
org.webrtc.AudioDecoderFactoryFactory -> org.webrtc.AudioDecoderFactoryFactory:
    long createNativeAudioDecoderFactory() -> createNativeAudioDecoderFactory
org.webrtc.AudioEncoderFactoryFactory -> org.webrtc.AudioEncoderFactoryFactory:
    long createNativeAudioEncoderFactory() -> createNativeAudioEncoderFactory
org.webrtc.AudioProcessingFactory -> org.webrtc.AudioProcessingFactory:
    long createNative() -> createNative
org.webrtc.AudioSink -> org.webrtc.AudioSink:
    void onData(java.nio.ByteBuffer,int,int,int,int) -> onData
org.webrtc.AudioSource -> org.webrtc.AudioSource:
    19:20:void <init>(long) -> <init>
    24:24:long getNativeAudioSource() -> getNativeAudioSource
org.webrtc.AudioTrack -> org.webrtc.AudioTrack:
    16:17:void <init>(long) -> <init>
    23:24:void setVolume(double) -> setVolume
    28:28:long getNativeAudioTrack() -> getNativeAudioTrack
    35:37:void addSink(org.webrtc.AudioSink) -> addSink
    void nativeSetVolume(long,double) -> nativeSetVolume
    void nativeAddSink(long,long) -> nativeAddSink
    long nativeWrapSink(org.webrtc.AudioSink) -> nativeWrapSink
org.webrtc.BaseBitrateAdjuster -> org.webrtc.BaseBitrateAdjuster:
    int targetBitrateBps -> targetBitrateBps
    int targetFps -> targetFps
    14:14:void <init>() -> <init>
    20:22:void setTargets(int,int) -> setTargets
    27:27:void reportEncodedFrame(int) -> reportEncodedFrame
    31:31:int getAdjustedBitrateBps() -> getAdjustedBitrateBps
    36:36:int getCodecConfigFramerate() -> getCodecConfigFramerate
org.webrtc.BitrateAdjuster -> org.webrtc.BitrateAdjuster:
    void setTargets(int,int) -> setTargets
    void reportEncodedFrame(int) -> reportEncodedFrame
    int getAdjustedBitrateBps() -> getAdjustedBitrateBps
    int getCodecConfigFramerate() -> getCodecConfigFramerate
org.webrtc.BuiltinAudioDecoderFactoryFactory -> org.webrtc.BuiltinAudioDecoderFactoryFactory:
    16:16:void <init>() -> <init>
    19:19:long createNativeAudioDecoderFactory() -> createNativeAudioDecoderFactory
    long nativeCreateBuiltinAudioDecoderFactory() -> nativeCreateBuiltinAudioDecoderFactory
org.webrtc.BuiltinAudioEncoderFactoryFactory -> org.webrtc.BuiltinAudioEncoderFactoryFactory:
    16:16:void <init>() -> <init>
    19:19:long createNativeAudioEncoderFactory() -> createNativeAudioEncoderFactory
    long nativeCreateBuiltinAudioEncoderFactory() -> nativeCreateBuiltinAudioEncoderFactory
org.webrtc.CallSessionFileRotatingLogSink -> org.webrtc.CallSessionFileRotatingLogSink:
    long nativeSink -> nativeSink
    17:20:byte[] getLogData(java.lang.String) -> getLogData
    24:29:void <init>(java.lang.String,int,org.webrtc.Logging$Severity) -> <init>
    32:36:void dispose() -> dispose
    long nativeAddSink(java.lang.String,int,int) -> nativeAddSink
    void nativeDeleteSink(long) -> nativeDeleteSink
    byte[] nativeGetLogData(java.lang.String) -> nativeGetLogData
org.webrtc.CalledByNative -> org.webrtc.CalledByNative:
    java.lang.String value() -> value
org.webrtc.CalledByNativeUnchecked -> org.webrtc.CalledByNativeUnchecked:
    java.lang.String value() -> value
org.webrtc.Camera1Capturer -> org.webrtc.Camera1Capturer:
    boolean captureToTexture -> captureToTexture
    boolean needPreviewCallback -> needPreviewCallback
    22:26:void <init>(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler,boolean,boolean) -> <init>
    33:36:void createCameraSession(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int) -> createCameraSession
    16:16:void printStackTrace() -> printStackTrace
    16:16:void setMirror(boolean) -> setMirror
    16:16:java.util.List getZoomRatios() -> getZoomRatios
    16:16:void setZoom(int) -> setZoom
    16:16:int getMinExposureCompensation() -> getMinExposureCompensation
    16:16:int getMaxExposureCompensation() -> getMaxExposureCompensation
    16:16:void setExposureCompensation(int) -> setExposureCompensation
    16:16:void manualFocus(float,float,int,int) -> manualFocus
    16:16:boolean turnLight(boolean) -> turnLight
    16:16:boolean isScreencast() -> isScreencast
    16:16:void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> switchCamera
    16:16:void dispose() -> dispose
    16:16:void changeCaptureFormat(int,int,int) -> changeCaptureFormat
    16:16:void stopCapture() -> stopCapture
    16:16:void startCapture(int,int,int) -> startCapture
    16:16:void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver) -> initialize
    16:16:org.webrtc.CapturerObserver getCapturerObserver() -> getCapturerObserver
    16:16:void setCaptureListener(org.webrtc.CapturerObserver) -> setCaptureListener
org.webrtc.Camera1Enumerator -> org.webrtc.Camera1Enumerator:
    java.lang.String TAG -> TAG
    java.util.List cachedSupportedFormats -> cachedSupportedFormats
    boolean captureToTexture -> captureToTexture
    boolean needPreviewCallback -> needPreviewCallback
    31:32:void <init>() -> <init>
    34:36:void <init>(boolean) -> <init>
    39:40:void setNeedPreviewCallback(boolean) -> setNeedPreviewCallback
    45:56:java.lang.String[] getDeviceNames() -> getDeviceNames
    61:62:boolean isFrontFacing(java.lang.String) -> isFrontFacing
    67:68:boolean isBackFacing(java.lang.String) -> isBackFacing
    73:73:java.util.List getSupportedFormats(java.lang.String) -> getSupportedFormats
    80:80:org.webrtc.CameraVideoCapturer createCapturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler) -> createCapturer
    84:91:android.hardware.Camera$CameraInfo getCameraInfo(int) -> getCameraInfo
    95:101:java.util.List getSupportedFormats(int) -> getSupportedFormats
    105:144:java.util.List enumerateFormats(int) -> enumerateFormats
    149:153:java.util.List convertSizes(java.util.List) -> convertSizes
    158:164:java.util.List convertFramerates(java.util.List) -> convertFramerates
    170:176:int getCameraIndex(java.lang.String) -> getCameraIndex
    182:189:java.lang.String getDeviceName(int) -> getDeviceName
org.webrtc.Camera1Session -> org.webrtc.Camera1Session:
    java.lang.String TAG -> TAG
    int NUMBER_OF_CAPTURE_BUFFERS -> NUMBER_OF_CAPTURE_BUFFERS
    org.webrtc.Histogram camera1StartTimeMsHistogram -> camera1StartTimeMsHistogram
    org.webrtc.Histogram camera1StopTimeMsHistogram -> camera1StopTimeMsHistogram
    org.webrtc.Histogram camera1ResolutionHistogram -> camera1ResolutionHistogram
    boolean sNeedPreviewCallback -> sNeedPreviewCallback
    android.os.Handler cameraThreadHandler -> cameraThreadHandler
    org.webrtc.CameraSession$Events events -> events
    boolean captureToTexture -> captureToTexture
    android.content.Context applicationContext -> applicationContext
    org.webrtc.SurfaceTextureHelper surfaceTextureHelper -> surfaceTextureHelper
    int cameraId -> cameraId
    android.hardware.Camera camera -> camera
    android.hardware.Camera$CameraInfo info -> info
    org.webrtc.CameraEnumerationAndroid$CaptureFormat captureFormat -> captureFormat
    long constructionTimeNs -> constructionTimeNs
    org.webrtc.Camera1Session$SessionState state -> state
    boolean firstFrameReported -> firstFrameReported
    boolean isMirror -> isMirror
    boolean isCameraFrontFacing -> isCameraFrontFacing
    69:124:void create(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,boolean,android.content.Context,org.webrtc.SurfaceTextureHelper,int,int,int,int,boolean) -> create
    129:145:void updateCameraParameters(android.hardware.Camera,android.hardware.Camera$Parameters,org.webrtc.CameraEnumerationAndroid$CaptureFormat,org.webrtc.Size,boolean) -> updateCameraParameters
    150:161:org.webrtc.CameraEnumerationAndroid$CaptureFormat findClosestCaptureFormat(android.hardware.Camera$Parameters,int,int,int) -> findClosestCaptureFormat
    166:167:org.webrtc.Size findClosestPictureSize(android.hardware.Camera$Parameters,int,int) -> findClosestPictureSize
    173:190:void <init>(org.webrtc.CameraSession$Events,boolean,android.content.Context,org.webrtc.SurfaceTextureHelper,int,android.hardware.Camera,android.hardware.Camera$CameraInfo,org.webrtc.CameraEnumerationAndroid$CaptureFormat,long) -> <init>
    194:202:void stop() -> stop
    206:233:boolean turnLight(boolean) -> turnLight
    238:267:void manualFocus(float,float,int,int) -> manualFocus
    271:272:void setMirror(boolean) -> setMirror
    276:292:void setExposureCompensation(int) -> setExposureCompensation
    296:300:int getMaxExposureCompensation() -> getMaxExposureCompensation
    305:309:int getMinExposureCompensation() -> getMinExposureCompensation
    314:327:void setZoom(int) -> setZoom
    332:336:java.util.List getZoomRatios() -> getZoomRatios
    340:349:android.graphics.Rect calculateTapArea(float,float,float,int,int) -> calculateTapArea
    353:353:int clamp(int,int,int) -> clamp
    357:396:void startCapturing() -> startCapturing
    399:415:void stopInternal() -> stopInternal
    418:419:boolean isPortrait() -> isPortrait
    423:474:void listenForTextureFrames() -> listenForTextureFrames
    477:527:void listenForBytebufferFrames() -> listenForBytebufferFrames
    531:540:void verticalFlipData(byte[],byte[],int,int) -> verticalFlipData
    548:576:byte[] horizontalFlipData(byte[],int,int) -> horizontalFlipData
    580:584:int getFrameOrientation() -> getFrameOrientation
    588:591:void checkIsOnCameraThread() -> checkIsOnCameraThread
    424:473:void lambda$listenForTextureFrames$0(org.webrtc.VideoFrame) -> lambda$listenForTextureFrames$0
    30:30:void access$000(org.webrtc.Camera1Session) -> access$000
    30:30:org.webrtc.CameraSession$Events access$100(org.webrtc.Camera1Session) -> access$100
    30:30:void access$200(org.webrtc.Camera1Session) -> access$200
    30:30:android.hardware.Camera access$300(org.webrtc.Camera1Session) -> access$300
    30:30:org.webrtc.Camera1Session$SessionState access$400(org.webrtc.Camera1Session) -> access$400
    30:30:boolean access$500(org.webrtc.Camera1Session) -> access$500
    30:30:long access$600(org.webrtc.Camera1Session) -> access$600
    30:30:org.webrtc.Histogram access$700() -> access$700
    30:30:boolean access$502(org.webrtc.Camera1Session,boolean) -> access$502
    30:30:boolean access$800(org.webrtc.Camera1Session) -> access$800
    30:30:boolean access$900(org.webrtc.Camera1Session) -> access$900
    30:30:boolean access$1000(org.webrtc.Camera1Session) -> access$1000
    30:30:org.webrtc.CameraEnumerationAndroid$CaptureFormat access$1100(org.webrtc.Camera1Session) -> access$1100
    30:30:void access$1200(org.webrtc.Camera1Session,byte[],byte[],int,int) -> access$1200
    30:30:byte[] access$1300(org.webrtc.Camera1Session,byte[],int,int) -> access$1300
    30:30:int access$1400(org.webrtc.Camera1Session) -> access$1400
    30:30:boolean access$1500() -> access$1500
    30:30:android.os.Handler access$1600(org.webrtc.Camera1Session) -> access$1600
    34:39:void <clinit>() -> <clinit>
org.webrtc.Camera1Session$1 -> org.webrtc.Camera1Session$1:
    java.lang.String val$currentFocusMode -> val$currentFocusMode
    org.webrtc.Camera1Session this$0 -> this$0
    259:259:void <init>(org.webrtc.Camera1Session,java.lang.String) -> <init>
    262:265:void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
org.webrtc.Camera1Session$2 -> org.webrtc.Camera1Session$2:
    org.webrtc.Camera1Session this$0 -> this$0
    362:362:void <init>(org.webrtc.Camera1Session) -> <init>
    366:378:void onError(int,android.hardware.Camera) -> onError
org.webrtc.Camera1Session$3 -> org.webrtc.Camera1Session$3:
    org.webrtc.Camera1Session this$0 -> this$0
    477:477:void <init>(org.webrtc.Camera1Session) -> <init>
    480:525:void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
    514:514:void lambda$onPreviewFrame$1(byte[]) -> lambda$onPreviewFrame$1
    515:518:void lambda$onPreviewFrame$0(byte[]) -> lambda$onPreviewFrame$0
org.webrtc.Camera1Session$SessionState -> org.webrtc.Camera1Session$SessionState:
    org.webrtc.Camera1Session$SessionState RUNNING -> RUNNING
    org.webrtc.Camera1Session$SessionState STOPPED -> STOPPED
    org.webrtc.Camera1Session$SessionState[] $VALUES -> $VALUES
    41:41:org.webrtc.Camera1Session$SessionState[] values() -> values
    41:41:org.webrtc.Camera1Session$SessionState valueOf(java.lang.String) -> valueOf
    41:41:void <init>(java.lang.String,int) -> <init>
    41:41:void <clinit>() -> <clinit>
org.webrtc.Camera2Capturer -> org.webrtc.Camera2Capturer:
    android.content.Context context -> context
    android.hardware.camera2.CameraManager cameraManager -> cameraManager
    24:28:void <init>(android.content.Context,java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler) -> <init>
    35:37:void createCameraSession(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int) -> createCameraSession
    18:18:void printStackTrace() -> printStackTrace
    18:18:void setMirror(boolean) -> setMirror
    18:18:java.util.List getZoomRatios() -> getZoomRatios
    18:18:void setZoom(int) -> setZoom
    18:18:int getMinExposureCompensation() -> getMinExposureCompensation
    18:18:int getMaxExposureCompensation() -> getMaxExposureCompensation
    18:18:void setExposureCompensation(int) -> setExposureCompensation
    18:18:void manualFocus(float,float,int,int) -> manualFocus
    18:18:boolean turnLight(boolean) -> turnLight
    18:18:boolean isScreencast() -> isScreencast
    18:18:void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> switchCamera
    18:18:void dispose() -> dispose
    18:18:void changeCaptureFormat(int,int,int) -> changeCaptureFormat
    18:18:void stopCapture() -> stopCapture
    18:18:void startCapture(int,int,int) -> startCapture
    18:18:void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver) -> initialize
    18:18:org.webrtc.CapturerObserver getCapturerObserver() -> getCapturerObserver
    18:18:void setCaptureListener(org.webrtc.CapturerObserver) -> setCaptureListener
org.webrtc.Camera2Enumerator -> org.webrtc.Camera2Enumerator:
    java.lang.String TAG -> TAG
    double NANO_SECONDS_PER_SECOND -> NANO_SECONDS_PER_SECOND
    java.util.Map cachedSupportedFormats -> cachedSupportedFormats
    android.content.Context context -> context
    android.hardware.camera2.CameraManager cameraManager -> cameraManager
    45:48:void <init>(android.content.Context) -> <init>
    53:59:java.lang.String[] getDeviceNames() -> getDeviceNames
    65:68:boolean isFrontFacing(java.lang.String) -> isFrontFacing
    74:77:boolean isBackFacing(java.lang.String) -> isBackFacing
    83:83:java.util.List getSupportedFormats(java.lang.String) -> getSupportedFormats
    89:89:org.webrtc.CameraVideoCapturer createCapturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler) -> createCapturer
    94:100:android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String) -> getCameraCharacteristics
    108:129:boolean isSupported(android.content.Context) -> isSupported
    133:136:int getFpsUnitFactor(android.util.Range[]) -> getFpsUnitFactor
    140:164:java.util.List getSupportedSizes(android.hardware.camera2.CameraCharacteristics) -> getSupportedSizes
    169:170:java.util.List getSupportedFormats(android.content.Context,java.lang.String) -> getSupportedFormats
    174:225:java.util.List getSupportedFormats(android.hardware.camera2.CameraManager,java.lang.String) -> getSupportedFormats
    230:234:java.util.List convertSizes(android.util.Size[]) -> convertSizes
    240:245:java.util.List convertFramerates(android.util.Range[],int) -> convertFramerates
    39:39:void <clinit>() -> <clinit>
org.webrtc.Camera2Session -> org.webrtc.Camera2Session:
    java.lang.String TAG -> TAG
    org.webrtc.Histogram camera2StartTimeMsHistogram -> camera2StartTimeMsHistogram
    org.webrtc.Histogram camera2StopTimeMsHistogram -> camera2StopTimeMsHistogram
    org.webrtc.Histogram camera2ResolutionHistogram -> camera2ResolutionHistogram
    android.os.Handler cameraThreadHandler -> cameraThreadHandler
    org.webrtc.CameraSession$CreateSessionCallback callback -> callback
    org.webrtc.CameraSession$Events events -> events
    android.content.Context applicationContext -> applicationContext
    android.hardware.camera2.CameraManager cameraManager -> cameraManager
    org.webrtc.SurfaceTextureHelper surfaceTextureHelper -> surfaceTextureHelper
    java.lang.String cameraId -> cameraId
    int width -> width
    int height -> height
    int framerate -> framerate
    android.hardware.camera2.CameraCharacteristics cameraCharacteristics -> cameraCharacteristics
    int cameraOrientation -> cameraOrientation
    boolean isCameraFrontFacing -> isCameraFrontFacing
    int fpsUnitFactor -> fpsUnitFactor
    org.webrtc.CameraEnumerationAndroid$CaptureFormat captureFormat -> captureFormat
    android.hardware.camera2.CameraDevice cameraDevice -> cameraDevice
    android.view.Surface surface -> surface
    android.hardware.camera2.CameraCaptureSession captureSession -> captureSession
    org.webrtc.Camera2Session$SessionState state -> state
    boolean firstFrameReported -> firstFrameReported
    boolean isMirror -> isMirror
    long constructionTimeNs -> constructionTimeNs
    305:307:void create(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,android.hardware.camera2.CameraManager,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int) -> create
    74:328:void <init>(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,android.hardware.camera2.CameraManager,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int) -> <init>
    331:346:void start() -> start
    349:373:void findCaptureFormat() -> findCaptureFormat
    376:387:void openCamera() -> openCamera
    391:400:void stop() -> stop
    405:418:boolean turnLight(boolean) -> turnLight
    423:423:void manualFocus(float,float,int,int) -> manualFocus
    428:429:void setMirror(boolean) -> setMirror
    433:434:void setExposureCompensation(int) -> setExposureCompensation
    438:439:int getMaxExposureCompensation() -> getMaxExposureCompensation
    444:445:int getMinExposureCompensation() -> getMinExposureCompensation
    450:451:void setZoom(int) -> setZoom
    456:457:java.util.List getZoomRatios() -> getZoomRatios
    461:480:void stopInternal() -> stopInternal
    483:494:void reportError(java.lang.String) -> reportError
    497:501:int getFrameOrientation() -> getFrameOrientation
    505:508:void checkIsOnCameraThread() -> checkIsOnCameraThread
    36:36:void access$000(org.webrtc.Camera2Session) -> access$000
    36:36:android.hardware.camera2.CameraCaptureSession access$100(org.webrtc.Camera2Session) -> access$100
    36:36:org.webrtc.Camera2Session$SessionState access$200(org.webrtc.Camera2Session) -> access$200
    36:36:org.webrtc.Camera2Session$SessionState access$202(org.webrtc.Camera2Session,org.webrtc.Camera2Session$SessionState) -> access$202
    36:36:void access$300(org.webrtc.Camera2Session) -> access$300
    36:36:org.webrtc.CameraSession$CreateSessionCallback access$400(org.webrtc.Camera2Session) -> access$400
    36:36:org.webrtc.CameraSession$Events access$500(org.webrtc.Camera2Session) -> access$500
    36:36:void access$600(org.webrtc.Camera2Session,java.lang.String) -> access$600
    36:36:android.hardware.camera2.CameraDevice access$702(org.webrtc.Camera2Session,android.hardware.camera2.CameraDevice) -> access$702
    36:36:org.webrtc.CameraEnumerationAndroid$CaptureFormat access$800(org.webrtc.Camera2Session) -> access$800
    36:36:org.webrtc.SurfaceTextureHelper access$900(org.webrtc.Camera2Session) -> access$900
    36:36:android.view.Surface access$1002(org.webrtc.Camera2Session,android.view.Surface) -> access$1002
    36:36:android.view.Surface access$1000(org.webrtc.Camera2Session) -> access$1000
    36:36:android.os.Handler access$1200(org.webrtc.Camera2Session) -> access$1200
    36:36:android.hardware.camera2.CameraCaptureSession access$102(org.webrtc.Camera2Session,android.hardware.camera2.CameraCaptureSession) -> access$102
    36:36:android.hardware.camera2.CameraDevice access$700(org.webrtc.Camera2Session) -> access$700
    36:36:int access$1300(org.webrtc.Camera2Session) -> access$1300
    36:36:android.hardware.camera2.CameraCharacteristics access$1500(org.webrtc.Camera2Session) -> access$1500
    36:36:boolean access$1600(org.webrtc.Camera2Session) -> access$1600
    36:36:boolean access$1602(org.webrtc.Camera2Session,boolean) -> access$1602
    36:36:long access$1700(org.webrtc.Camera2Session) -> access$1700
    36:36:org.webrtc.Histogram access$1800() -> access$1800
    36:36:int access$1900(org.webrtc.Camera2Session) -> access$1900
    36:36:boolean access$2000(org.webrtc.Camera2Session) -> access$2000
    36:36:boolean access$2100(org.webrtc.Camera2Session) -> access$2100
    36:36:int access$2200(org.webrtc.Camera2Session) -> access$2200
    39:44:void <clinit>() -> <clinit>
org.webrtc.Camera2Session$1 -> org.webrtc.Camera2Session$1:
org.webrtc.Camera2Session$CameraCaptureCallback -> org.webrtc.Camera2Session$CameraCaptureCallback:
    293:293:void <init>() -> <init>
    297:298:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    293:293:void <init>(org.webrtc.Camera2Session$1) -> <init>
org.webrtc.Camera2Session$CameraStateCallback -> org.webrtc.Camera2Session$CameraStateCallback:
    org.webrtc.Camera2Session this$0 -> this$0
    81:81:void <init>(org.webrtc.Camera2Session) -> <init>
    83:96:java.lang.String getErrorDescription(int) -> getErrorDescription
    102:111:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    115:117:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    121:135:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
    139:143:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    81:81:void <init>(org.webrtc.Camera2Session,org.webrtc.Camera2Session$1) -> <init>
org.webrtc.Camera2Session$CaptureSessionCallback -> org.webrtc.Camera2Session$CaptureSessionCallback:
    org.webrtc.Camera2Session this$0 -> this$0
    146:146:void <init>(org.webrtc.Camera2Session) -> <init>
    149:152:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    156:243:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    248:276:void chooseStabilizationMode(android.hardware.camera2.CaptureRequest$Builder) -> chooseStabilizationMode
    279:290:void chooseFocusMode(android.hardware.camera2.CaptureRequest$Builder) -> chooseFocusMode
    188:240:void lambda$onConfigured$0(org.webrtc.VideoFrame) -> lambda$onConfigured$0
    146:146:void <init>(org.webrtc.Camera2Session,org.webrtc.Camera2Session$1) -> <init>
org.webrtc.Camera2Session$SessionState -> org.webrtc.Camera2Session$SessionState:
    org.webrtc.Camera2Session$SessionState RUNNING -> RUNNING
    org.webrtc.Camera2Session$SessionState STOPPED -> STOPPED
    org.webrtc.Camera2Session$SessionState[] $VALUES -> $VALUES
    46:46:org.webrtc.Camera2Session$SessionState[] values() -> values
    46:46:org.webrtc.Camera2Session$SessionState valueOf(java.lang.String) -> valueOf
    46:46:void <init>(java.lang.String,int) -> <init>
    46:46:void <clinit>() -> <clinit>
org.webrtc.CameraCapturer -> org.webrtc.CameraCapturer:
    java.lang.String TAG -> TAG
    int MAX_OPEN_CAMERA_ATTEMPTS -> MAX_OPEN_CAMERA_ATTEMPTS
    int OPEN_CAMERA_DELAY_MS -> OPEN_CAMERA_DELAY_MS
    int OPEN_CAMERA_TIMEOUT -> OPEN_CAMERA_TIMEOUT
    org.webrtc.CameraEnumerator cameraEnumerator -> cameraEnumerator
    org.webrtc.CameraVideoCapturer$CameraEventsHandler eventsHandler -> eventsHandler
    android.os.Handler uiThreadHandler -> uiThreadHandler
    org.webrtc.CameraSession$CreateSessionCallback createSessionCallback -> createSessionCallback
    org.webrtc.CameraSession$Events cameraSessionEventsHandler -> cameraSessionEventsHandler
    java.lang.Runnable openCameraTimeoutRunnable -> openCameraTimeoutRunnable
    android.os.Handler cameraThreadHandler -> cameraThreadHandler
    android.content.Context applicationContext -> applicationContext
    org.webrtc.CapturerObserver capturerObserver -> capturerObserver
    org.webrtc.CapturerObserver capturerListener -> capturerListener
    org.webrtc.SurfaceTextureHelper surfaceHelper -> surfaceHelper
    java.lang.Object stateLock -> stateLock
    boolean sessionOpening -> sessionOpening
    org.webrtc.CameraSession currentSession -> currentSession
    java.lang.String cameraName -> cameraName
    int width -> width
    int height -> height
    int framerate -> framerate
    int openAttemptsRemaining -> openAttemptsRemaining
    org.webrtc.CameraCapturer$SwitchState switchState -> switchState
    org.webrtc.CameraVideoCapturer$CameraSwitchHandler switchEventsHandler -> switchEventsHandler
    org.webrtc.CameraVideoCapturer$CameraStatistics cameraStatistics -> cameraStatistics
    boolean firstFrameObserved -> firstFrameObserved
    37:238:void <init>(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler,org.webrtc.CameraEnumerator) -> <init>
    242:243:void setCaptureListener(org.webrtc.CapturerObserver) -> setCaptureListener
    247:247:org.webrtc.CapturerObserver getCapturerObserver() -> getCapturerObserver
    253:258:void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver) -> initialize
    262:281:void startCapture(int,int,int) -> startCapture
    284:292:void createSessionInternal(int) -> createSessionInternal
    296:333:void stopCapture() -> stopCapture
    337:342:void changeCaptureFormat(int,int,int) -> changeCaptureFormat
    346:348:void dispose() -> dispose
    352:359:void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> switchCamera
    363:363:boolean isScreencast() -> isScreencast
    368:377:boolean turnLight(boolean) -> turnLight
    382:390:void manualFocus(float,float,int,int) -> manualFocus
    394:402:void setExposureCompensation(int) -> setExposureCompensation
    406:409:int getMaxExposureCompensation() -> getMaxExposureCompensation
    415:418:int getMinExposureCompensation() -> getMinExposureCompensation
    424:432:void setZoom(int) -> setZoom
    437:440:java.util.List getZoomRatios() -> getZoomRatios
    446:449:void setMirror(boolean) -> setMirror
    452:465:void printStackTrace() -> printStackTrace
    469:473:void reportCameraSwitchError(java.lang.String,org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> reportCameraSwitchError
    476:525:void switchCameraInternal(org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> switchCameraInternal
    528:532:void checkIsOnCameraThread() -> checkIsOnCameraThread
    535:537:java.lang.String getCameraName() -> getCameraName
    void createCameraSession(org.webrtc.CameraSession$CreateSessionCallback,org.webrtc.CameraSession$Events,android.content.Context,org.webrtc.SurfaceTextureHelper,java.lang.String,int,int,int) -> createCameraSession
    21:21:void access$000(org.webrtc.CameraCapturer) -> access$000
    21:21:org.webrtc.CameraCapturer$SwitchState access$100(org.webrtc.CameraCapturer) -> access$100
    21:21:java.lang.Runnable access$200(org.webrtc.CameraCapturer) -> access$200
    21:21:android.os.Handler access$300(org.webrtc.CameraCapturer) -> access$300
    21:21:java.lang.Object access$400(org.webrtc.CameraCapturer) -> access$400
    21:21:org.webrtc.CapturerObserver access$500(org.webrtc.CameraCapturer) -> access$500
    21:21:boolean access$602(org.webrtc.CameraCapturer,boolean) -> access$602
    21:21:org.webrtc.CameraSession access$702(org.webrtc.CameraCapturer,org.webrtc.CameraSession) -> access$702
    21:21:org.webrtc.CapturerObserver access$800(org.webrtc.CameraCapturer) -> access$800
    21:21:org.webrtc.CameraVideoCapturer$CameraStatistics access$902(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraStatistics) -> access$902
    21:21:org.webrtc.SurfaceTextureHelper access$1000(org.webrtc.CameraCapturer) -> access$1000
    21:21:org.webrtc.CameraVideoCapturer$CameraEventsHandler access$1100(org.webrtc.CameraCapturer) -> access$1100
    21:21:boolean access$1202(org.webrtc.CameraCapturer,boolean) -> access$1202
    21:21:org.webrtc.CameraCapturer$SwitchState access$102(org.webrtc.CameraCapturer,org.webrtc.CameraCapturer$SwitchState) -> access$102
    21:21:org.webrtc.CameraVideoCapturer$CameraSwitchHandler access$1300(org.webrtc.CameraCapturer) -> access$1300
    21:21:java.lang.String access$1400(org.webrtc.CameraCapturer) -> access$1400
    21:21:org.webrtc.CameraEnumerator access$1500(org.webrtc.CameraCapturer) -> access$1500
    21:21:org.webrtc.CameraVideoCapturer$CameraSwitchHandler access$1302(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> access$1302
    21:21:void access$1600(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> access$1600
    21:21:int access$1710(org.webrtc.CameraCapturer) -> access$1710
    21:21:int access$1700(org.webrtc.CameraCapturer) -> access$1700
    21:21:void access$1800(org.webrtc.CameraCapturer,int) -> access$1800
    21:21:org.webrtc.CameraSession access$700(org.webrtc.CameraCapturer) -> access$700
    21:21:boolean access$1200(org.webrtc.CameraCapturer) -> access$1200
    21:21:org.webrtc.CameraVideoCapturer$CameraStatistics access$900(org.webrtc.CameraCapturer) -> access$900
    21:21:org.webrtc.CameraSession$CreateSessionCallback access$1900(org.webrtc.CameraCapturer) -> access$1900
    21:21:org.webrtc.CameraSession$Events access$2000(org.webrtc.CameraCapturer) -> access$2000
    21:21:android.content.Context access$2100(org.webrtc.CameraCapturer) -> access$2100
    21:21:int access$2200(org.webrtc.CameraCapturer) -> access$2200
    21:21:int access$2300(org.webrtc.CameraCapturer) -> access$2300
    21:21:int access$2400(org.webrtc.CameraCapturer) -> access$2400
org.webrtc.CameraCapturer$1 -> org.webrtc.CameraCapturer$1:
    org.webrtc.CameraCapturer this$0 -> this$0
    39:39:void <init>(org.webrtc.CameraCapturer) -> <init>
    42:65:void onDone(org.webrtc.CameraSession) -> onDone
    69:99:void onFailure(org.webrtc.CameraSession$FailureType,java.lang.String) -> onFailure
org.webrtc.CameraCapturer$10 -> org.webrtc.CameraCapturer$10:
    int val$value -> val$value
    org.webrtc.CameraCapturer this$0 -> this$0
    395:395:void <init>(org.webrtc.CameraCapturer,int) -> <init>
    398:399:void run() -> run
org.webrtc.CameraCapturer$11 -> org.webrtc.CameraCapturer$11:
    int val$zoomIndex -> val$zoomIndex
    org.webrtc.CameraCapturer this$0 -> this$0
    425:425:void <init>(org.webrtc.CameraCapturer,int) -> <init>
    428:429:void run() -> run
org.webrtc.CameraCapturer$12 -> org.webrtc.CameraCapturer$12:
    org.webrtc.CameraSession val$oldSession -> val$oldSession
    org.webrtc.CameraCapturer this$0 -> this$0
    509:509:void <init>(org.webrtc.CameraCapturer,org.webrtc.CameraSession) -> <init>
    512:513:void run() -> run
org.webrtc.CameraCapturer$2 -> org.webrtc.CameraCapturer$2:
    org.webrtc.CameraCapturer this$0 -> this$0
    103:103:void <init>(org.webrtc.CameraCapturer) -> <init>
    106:114:void onCameraOpening() -> onCameraOpening
    118:127:void onCameraError(org.webrtc.CameraSession,java.lang.String) -> onCameraError
    131:140:void onCameraDisconnected(org.webrtc.CameraSession) -> onCameraDisconnected
    144:152:void onCameraClosed(org.webrtc.CameraSession) -> onCameraClosed
    156:173:void onFrameCaptured(org.webrtc.CameraSession,org.webrtc.VideoFrame) -> onFrameCaptured
org.webrtc.CameraCapturer$3 -> org.webrtc.CameraCapturer$3:
    org.webrtc.CameraCapturer this$0 -> this$0
    176:176:void <init>(org.webrtc.CameraCapturer) -> <init>
    179:180:void run() -> run
org.webrtc.CameraCapturer$4 -> org.webrtc.CameraCapturer$4:
    org.webrtc.CameraCapturer this$0 -> this$0
    208:208:void <init>(org.webrtc.CameraCapturer) -> <init>
    210:210:void onCameraError(java.lang.String) -> onCameraError
    212:212:void onCameraDisconnected() -> onCameraDisconnected
    214:214:void onCameraFreezed(java.lang.String) -> onCameraFreezed
    216:216:void onCameraOpening(java.lang.String) -> onCameraOpening
    218:218:void onFirstFrameAvailable() -> onFirstFrameAvailable
    220:220:void onCameraClosed() -> onCameraClosed
org.webrtc.CameraCapturer$5 -> org.webrtc.CameraCapturer$5:
    org.webrtc.CameraCapturer this$0 -> this$0
    285:285:void <init>(org.webrtc.CameraCapturer) -> <init>
    288:290:void run() -> run
org.webrtc.CameraCapturer$6 -> org.webrtc.CameraCapturer$6:
    org.webrtc.CameraSession val$oldSession -> val$oldSession
    org.webrtc.CameraCapturer this$0 -> this$0
    315:315:void <init>(org.webrtc.CameraCapturer,org.webrtc.CameraSession) -> <init>
    318:322:void run() -> run
org.webrtc.CameraCapturer$7 -> org.webrtc.CameraCapturer$7:
    org.webrtc.CameraVideoCapturer$CameraSwitchHandler val$switchEventsHandler -> val$switchEventsHandler
    org.webrtc.CameraCapturer this$0 -> this$0
    353:353:void <init>(org.webrtc.CameraCapturer,org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> <init>
    356:357:void run() -> run
org.webrtc.CameraCapturer$8 -> org.webrtc.CameraCapturer$8:
    boolean val$isLightOn -> val$isLightOn
    org.webrtc.CameraCapturer this$0 -> this$0
    371:371:void <init>(org.webrtc.CameraCapturer,boolean) -> <init>
    374:375:void run() -> run
org.webrtc.CameraCapturer$9 -> org.webrtc.CameraCapturer$9:
    float val$x -> val$x
    float val$y -> val$y
    int val$previewWidth -> val$previewWidth
    int val$previewHeight -> val$previewHeight
    org.webrtc.CameraCapturer this$0 -> this$0
    383:383:void <init>(org.webrtc.CameraCapturer,float,float,int,int) -> <init>
    386:387:void run() -> run
org.webrtc.CameraCapturer$SwitchState -> org.webrtc.CameraCapturer$SwitchState:
    org.webrtc.CameraCapturer$SwitchState IDLE -> IDLE
    org.webrtc.CameraCapturer$SwitchState PENDING -> PENDING
    org.webrtc.CameraCapturer$SwitchState IN_PROGRESS -> IN_PROGRESS
    org.webrtc.CameraCapturer$SwitchState[] $VALUES -> $VALUES
    22:22:org.webrtc.CameraCapturer$SwitchState[] values() -> values
    22:22:org.webrtc.CameraCapturer$SwitchState valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:25:void <clinit>() -> <clinit>
org.webrtc.CameraEnumerationAndroid -> org.webrtc.CameraEnumerationAndroid:
    java.lang.String TAG -> TAG
    java.util.ArrayList COMMON_RESOLUTIONS -> COMMON_RESOLUTIONS
    java.util.List supportedSizesStatistic -> supportedSizesStatistic
    23:23:void <init>() -> <init>
    159:159:org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange getClosestSupportedFramerateRange(java.util.List,int) -> getClosestSupportedFramerateRange
    194:198:org.webrtc.Size getClosestSupportedSize(java.util.List,int,int) -> getClosestSupportedSize
    208:212:void reportCameraResolution(org.webrtc.Histogram,org.webrtc.Size) -> reportCameraResolution
    26:189:void <clinit>() -> <clinit>
org.webrtc.CameraEnumerationAndroid$1 -> org.webrtc.CameraEnumerationAndroid$1:
    int MAX_FPS_DIFF_THRESHOLD -> MAX_FPS_DIFF_THRESHOLD
    int MAX_FPS_LOW_DIFF_WEIGHT -> MAX_FPS_LOW_DIFF_WEIGHT
    int MAX_FPS_HIGH_DIFF_WEIGHT -> MAX_FPS_HIGH_DIFF_WEIGHT
    int MIN_FPS_THRESHOLD -> MIN_FPS_THRESHOLD
    int MIN_FPS_LOW_VALUE_WEIGHT -> MIN_FPS_LOW_VALUE_WEIGHT
    int MIN_FPS_HIGH_VALUE_WEIGHT -> MIN_FPS_HIGH_VALUE_WEIGHT
    int val$requestedFps -> val$requestedFps
    160:160:void <init>(int) -> <init>
    174:175:int progressivePenalty(int,int,int,int) -> progressivePenalty
    180:184:int diff(org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange) -> diff
    160:160:int diff(java.lang.Object) -> diff
org.webrtc.CameraEnumerationAndroid$2 -> org.webrtc.CameraEnumerationAndroid$2:
    int val$requestedWidth -> val$requestedWidth
    int val$requestedHeight -> val$requestedHeight
    198:198:void <init>(int,int) -> <init>
    201:201:int diff(org.webrtc.Size) -> diff
    198:198:int diff(java.lang.Object) -> diff
org.webrtc.CameraEnumerationAndroid$CaptureFormat -> org.webrtc.CameraEnumerationAndroid$CaptureFormat:
    int width -> width
    int height -> height
    org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange framerate -> framerate
    int imageFormat -> imageFormat
    90:96:void <init>(int,int,int,int) -> <init>
    90:102:void <init>(int,int,org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange) -> <init>
    106:106:int frameSize() -> frameSize
    114:118:int frameSize(int,int,int) -> frameSize
    123:123:java.lang.String toString() -> toString
    128:133:boolean equals(java.lang.Object) -> equals
    138:138:int hashCode() -> hashCode
org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange -> org.webrtc.CameraEnumerationAndroid$CaptureFormat$FramerateRange:
    int min -> min
    int max -> max
    57:60:void <init>(int,int) -> <init>
    64:64:java.lang.String toString() -> toString
    69:73:boolean equals(java.lang.Object) -> equals
    79:79:int hashCode() -> hashCode
org.webrtc.CameraEnumerationAndroid$ClosestComparator -> org.webrtc.CameraEnumerationAndroid$ClosestComparator:
    145:145:void <init>() -> <init>
    int diff(java.lang.Object) -> diff
    151:151:int compare(java.lang.Object,java.lang.Object) -> compare
    145:145:void <init>(org.webrtc.CameraEnumerationAndroid$1) -> <init>
org.webrtc.CameraEnumerator -> org.webrtc.CameraEnumerator:
    java.lang.String[] getDeviceNames() -> getDeviceNames
    boolean isFrontFacing(java.lang.String) -> isFrontFacing
    boolean isBackFacing(java.lang.String) -> isBackFacing
    java.util.List getSupportedFormats(java.lang.String) -> getSupportedFormats
    org.webrtc.CameraVideoCapturer createCapturer(java.lang.String,org.webrtc.CameraVideoCapturer$CameraEventsHandler) -> createCapturer
org.webrtc.CameraSession -> org.webrtc.CameraSession:
    void stop() -> stop
    boolean turnLight(boolean) -> turnLight
    void manualFocus(float,float,int,int) -> manualFocus
    void setMirror(boolean) -> setMirror
    void setExposureCompensation(int) -> setExposureCompensation
    int getMaxExposureCompensation() -> getMaxExposureCompensation
    int getMinExposureCompensation() -> getMinExposureCompensation
    void setZoom(int) -> setZoom
    java.util.List getZoomRatios() -> getZoomRatios
    76:86:int getDeviceOrientation(android.content.Context) -> getDeviceOrientation
    92:107:org.webrtc.VideoFrame$TextureBuffer createTextureBufferWithModifiedTransformMatrix(org.webrtc.TextureBufferImpl,org.webrtc.CameraSession$MirrorFlag,int) -> createTextureBufferWithModifiedTransformMatrix
org.webrtc.CameraSession$CreateSessionCallback -> org.webrtc.CameraSession$CreateSessionCallback:
    void onDone(org.webrtc.CameraSession) -> onDone
    void onFailure(org.webrtc.CameraSession$FailureType,java.lang.String) -> onFailure
org.webrtc.CameraSession$Events -> org.webrtc.CameraSession$Events:
    void onCameraOpening() -> onCameraOpening
    void onCameraError(org.webrtc.CameraSession,java.lang.String) -> onCameraError
    void onCameraDisconnected(org.webrtc.CameraSession) -> onCameraDisconnected
    void onCameraClosed(org.webrtc.CameraSession) -> onCameraClosed
    void onFrameCaptured(org.webrtc.CameraSession,org.webrtc.VideoFrame) -> onFrameCaptured
org.webrtc.CameraSession$FailureType -> org.webrtc.CameraSession$FailureType:
    org.webrtc.CameraSession$FailureType ERROR -> ERROR
    org.webrtc.CameraSession$FailureType DISCONNECTED -> DISCONNECTED
    org.webrtc.CameraSession$FailureType[] $VALUES -> $VALUES
    20:20:org.webrtc.CameraSession$FailureType[] values() -> values
    20:20:org.webrtc.CameraSession$FailureType valueOf(java.lang.String) -> valueOf
    20:20:void <init>(java.lang.String,int) -> <init>
    20:20:void <clinit>() -> <clinit>
org.webrtc.CameraSession$MirrorFlag -> org.webrtc.CameraSession$MirrorFlag:
    org.webrtc.CameraSession$MirrorFlag NONE -> NONE
    org.webrtc.CameraSession$MirrorFlag HORIZONTAL -> HORIZONTAL
    org.webrtc.CameraSession$MirrorFlag VERTICAL -> VERTICAL
    org.webrtc.CameraSession$MirrorFlag HORIZONTAL_VERTICAL -> HORIZONTAL_VERTICAL
    org.webrtc.CameraSession$MirrorFlag[] $VALUES -> $VALUES
    21:21:org.webrtc.CameraSession$MirrorFlag[] values() -> values
    21:21:org.webrtc.CameraSession$MirrorFlag valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:21:void <clinit>() -> <clinit>
org.webrtc.CameraVideoCapturer -> org.webrtc.CameraVideoCapturer:
    void switchCamera(org.webrtc.CameraVideoCapturer$CameraSwitchHandler) -> switchCamera
    void setCaptureListener(org.webrtc.CapturerObserver) -> setCaptureListener
    org.webrtc.CapturerObserver getCapturerObserver() -> getCapturerObserver
    boolean turnLight(boolean) -> turnLight
    void manualFocus(float,float,int,int) -> manualFocus
    void setMirror(boolean) -> setMirror
    void setExposureCompensation(int) -> setExposureCompensation
    int getMaxExposureCompensation() -> getMaxExposureCompensation
    int getMinExposureCompensation() -> getMinExposureCompensation
    void setZoom(int) -> setZoom
    java.util.List getZoomRatios() -> getZoomRatios
    140:140:void addMediaRecorderToCamera(android.media.MediaRecorder,org.webrtc.CameraVideoCapturer$MediaRecorderHandler) -> addMediaRecorderToCamera
    149:149:void removeMediaRecorderFromCamera(org.webrtc.CameraVideoCapturer$MediaRecorderHandler) -> removeMediaRecorderFromCamera
org.webrtc.CameraVideoCapturer$CameraEventsHandler -> org.webrtc.CameraVideoCapturer$CameraEventsHandler:
    void onCameraError(java.lang.String) -> onCameraError
    void onCameraDisconnected() -> onCameraDisconnected
    void onCameraFreezed(java.lang.String) -> onCameraFreezed
    void onCameraOpening(java.lang.String) -> onCameraOpening
    void onFirstFrameAvailable() -> onFirstFrameAvailable
    void onCameraClosed() -> onCameraClosed
org.webrtc.CameraVideoCapturer$CameraStatistics -> org.webrtc.CameraVideoCapturer$CameraStatistics:
    java.lang.String TAG -> TAG
    int CAMERA_OBSERVER_PERIOD_MS -> CAMERA_OBSERVER_PERIOD_MS
    int CAMERA_FREEZE_REPORT_TIMOUT_MS -> CAMERA_FREEZE_REPORT_TIMOUT_MS
    org.webrtc.SurfaceTextureHelper surfaceTextureHelper -> surfaceTextureHelper
    org.webrtc.CameraVideoCapturer$CameraEventsHandler eventsHandler -> eventsHandler
    int frameCount -> frameCount
    int freezePeriodCount -> freezePeriodCount
    java.lang.Runnable cameraObserver -> cameraObserver
    167:203:void <init>(org.webrtc.SurfaceTextureHelper,org.webrtc.CameraVideoCapturer$CameraEventsHandler) -> <init>
    206:209:void checkThread() -> checkThread
    212:214:void addFrame() -> addFrame
    217:218:void release() -> release
    157:157:int access$000(org.webrtc.CameraVideoCapturer$CameraStatistics) -> access$000
    157:157:int access$104(org.webrtc.CameraVideoCapturer$CameraStatistics) -> access$104
    157:157:int access$100(org.webrtc.CameraVideoCapturer$CameraStatistics) -> access$100
    157:157:org.webrtc.CameraVideoCapturer$CameraEventsHandler access$200(org.webrtc.CameraVideoCapturer$CameraStatistics) -> access$200
    157:157:org.webrtc.SurfaceTextureHelper access$300(org.webrtc.CameraVideoCapturer$CameraStatistics) -> access$300
    157:157:int access$102(org.webrtc.CameraVideoCapturer$CameraStatistics,int) -> access$102
    157:157:int access$002(org.webrtc.CameraVideoCapturer$CameraStatistics,int) -> access$002
org.webrtc.CameraVideoCapturer$CameraStatistics$1 -> org.webrtc.CameraVideoCapturer$CameraStatistics$1:
    org.webrtc.CameraVideoCapturer$CameraStatistics this$0 -> this$0
    167:167:void <init>(org.webrtc.CameraVideoCapturer$CameraStatistics) -> <init>
    170:190:void run() -> run
org.webrtc.CameraVideoCapturer$CameraSwitchHandler -> org.webrtc.CameraVideoCapturer$CameraSwitchHandler:
    void onCameraSwitchDone(boolean) -> onCameraSwitchDone
    void onCameraSwitchError(java.lang.String) -> onCameraSwitchError
org.webrtc.CameraVideoCapturer$MediaRecorderHandler -> org.webrtc.CameraVideoCapturer$MediaRecorderHandler:
    void onMediaRecorderSuccess() -> onMediaRecorderSuccess
    void onMediaRecorderError(java.lang.String) -> onMediaRecorderError
org.webrtc.CapturerObserver -> org.webrtc.CapturerObserver:
    void onCapturerStarted(boolean) -> onCapturerStarted
    void onCapturerStoppedInCapturerThread() -> onCapturerStoppedInCapturerThread
    void onCapturerStopped() -> onCapturerStopped
    void onFrameCaptured(org.webrtc.VideoFrame) -> onFrameCaptured
org.webrtc.ContextUtils -> org.webrtc.ContextUtils:
    java.lang.String TAG -> TAG
    android.content.Context applicationContext -> applicationContext
    20:20:void <init>() -> <init>
    30:35:void initialize(android.content.Context) -> initialize
    44:44:android.content.Context getApplicationContext() -> getApplicationContext
org.webrtc.CryptoOptions -> org.webrtc.CryptoOptions:
    org.webrtc.CryptoOptions$Srtp srtp -> srtp
    org.webrtc.CryptoOptions$SFrame sframe -> sframe
    91:95:void <init>(boolean,boolean,boolean,boolean) -> <init>
    98:98:org.webrtc.CryptoOptions$Builder builder() -> builder
    103:103:org.webrtc.CryptoOptions$Srtp getSrtp() -> getSrtp
    108:108:org.webrtc.CryptoOptions$SFrame getSFrame() -> getSFrame
    20:20:void <init>(boolean,boolean,boolean,boolean,org.webrtc.CryptoOptions$1) -> <init>
org.webrtc.CryptoOptions$1 -> org.webrtc.CryptoOptions$1:
org.webrtc.CryptoOptions$Builder -> org.webrtc.CryptoOptions$Builder:
    boolean enableGcmCryptoSuites -> enableGcmCryptoSuites
    boolean enableAes128Sha1_32CryptoCipher -> enableAes128Sha1_32CryptoCipher
    boolean enableEncryptedRtpHeaderExtensions -> enableEncryptedRtpHeaderExtensions
    boolean requireFrameEncryption -> requireFrameEncryption
    117:117:void <init>() -> <init>
    120:121:org.webrtc.CryptoOptions$Builder setEnableGcmCryptoSuites(boolean) -> setEnableGcmCryptoSuites
    125:126:org.webrtc.CryptoOptions$Builder setEnableAes128Sha1_32CryptoCipher(boolean) -> setEnableAes128Sha1_32CryptoCipher
    131:132:org.webrtc.CryptoOptions$Builder setEnableEncryptedRtpHeaderExtensions(boolean) -> setEnableEncryptedRtpHeaderExtensions
    136:137:org.webrtc.CryptoOptions$Builder setRequireFrameEncryption(boolean) -> setRequireFrameEncryption
    141:141:org.webrtc.CryptoOptions createCryptoOptions() -> createCryptoOptions
    111:111:void <init>(org.webrtc.CryptoOptions$1) -> <init>
org.webrtc.CryptoOptions$SFrame -> org.webrtc.CryptoOptions$SFrame:
    boolean requireFrameEncryption -> requireFrameEncryption
    org.webrtc.CryptoOptions this$0 -> this$0
    77:79:void <init>(org.webrtc.CryptoOptions,boolean) -> <init>
    83:83:boolean getRequireFrameEncryption() -> getRequireFrameEncryption
    69:69:void <init>(org.webrtc.CryptoOptions,boolean,org.webrtc.CryptoOptions$1) -> <init>
org.webrtc.CryptoOptions$Srtp -> org.webrtc.CryptoOptions$Srtp:
    boolean enableGcmCryptoSuites -> enableGcmCryptoSuites
    boolean enableAes128Sha1_32CryptoCipher -> enableAes128Sha1_32CryptoCipher
    boolean enableEncryptedRtpHeaderExtensions -> enableEncryptedRtpHeaderExtensions
    org.webrtc.CryptoOptions this$0 -> this$0
    44:48:void <init>(org.webrtc.CryptoOptions,boolean,boolean,boolean) -> <init>
    52:52:boolean getEnableGcmCryptoSuites() -> getEnableGcmCryptoSuites
    57:57:boolean getEnableAes128Sha1_32CryptoCipher() -> getEnableAes128Sha1_32CryptoCipher
    62:62:boolean getEnableEncryptedRtpHeaderExtensions() -> getEnableEncryptedRtpHeaderExtensions
    24:24:void <init>(org.webrtc.CryptoOptions,boolean,boolean,boolean,org.webrtc.CryptoOptions$1) -> <init>
org.webrtc.DataChannel -> org.webrtc.DataChannel:
    long nativeDataChannel -> nativeDataChannel
    long nativeObserver -> nativeObserver
    109:111:void <init>(long) -> <init>
    115:120:void registerObserver(org.webrtc.DataChannel$Observer) -> registerObserver
    124:126:void unregisterObserver() -> unregisterObserver
    129:130:java.lang.String label() -> label
    134:135:int id() -> id
    139:140:org.webrtc.DataChannel$State state() -> state
    149:150:long bufferedAmount() -> bufferedAmount
    155:157:void close() -> close
    161:166:boolean send(org.webrtc.DataChannel$Buffer) -> send
    171:174:void dispose() -> dispose
    178:178:long getNativeDataChannel() -> getNativeDataChannel
    182:185:void checkDataChannelExists() -> checkDataChannelExists
    long nativeRegisterObserver(org.webrtc.DataChannel$Observer) -> nativeRegisterObserver
    void nativeUnregisterObserver(long) -> nativeUnregisterObserver
    java.lang.String nativeLabel() -> nativeLabel
    int nativeId() -> nativeId
    org.webrtc.DataChannel$State nativeState() -> nativeState
    long nativeBufferedAmount() -> nativeBufferedAmount
    void nativeClose() -> nativeClose
    boolean nativeSend(byte[],boolean) -> nativeSend
org.webrtc.DataChannel$Buffer -> org.webrtc.DataChannel$Buffer:
    java.nio.ByteBuffer data -> data
    boolean binary -> binary
    72:75:void <init>(java.nio.ByteBuffer,boolean) -> <init>
org.webrtc.DataChannel$Init -> org.webrtc.DataChannel$Init:
    boolean ordered -> ordered
    int maxRetransmitTimeMs -> maxRetransmitTimeMs
    int maxRetransmits -> maxRetransmits
    java.lang.String protocol -> protocol
    boolean negotiated -> negotiated
    int id -> id
    18:27:void <init>() -> <init>
    31:31:boolean getOrdered() -> getOrdered
    36:36:int getMaxRetransmitTimeMs() -> getMaxRetransmitTimeMs
    41:41:int getMaxRetransmits() -> getMaxRetransmits
    46:46:java.lang.String getProtocol() -> getProtocol
    51:51:boolean getNegotiated() -> getNegotiated
    56:56:int getId() -> getId
org.webrtc.DataChannel$Observer -> org.webrtc.DataChannel$Observer:
    void onBufferedAmountChange(long) -> onBufferedAmountChange
    void onStateChange() -> onStateChange
    void onMessage(org.webrtc.DataChannel$Buffer) -> onMessage
org.webrtc.DataChannel$State -> org.webrtc.DataChannel$State:
    org.webrtc.DataChannel$State CONNECTING -> CONNECTING
    org.webrtc.DataChannel$State OPEN -> OPEN
    org.webrtc.DataChannel$State CLOSING -> CLOSING
    org.webrtc.DataChannel$State CLOSED -> CLOSED
    org.webrtc.DataChannel$State[] $VALUES -> $VALUES
    93:93:org.webrtc.DataChannel$State[] values() -> values
    93:93:org.webrtc.DataChannel$State valueOf(java.lang.String) -> valueOf
    93:93:void <init>(java.lang.String,int) -> <init>
    101:101:org.webrtc.DataChannel$State fromNativeIndex(int) -> fromNativeIndex
    93:97:void <clinit>() -> <clinit>
org.webrtc.DefaultVideoDecoderFactory -> org.webrtc.DefaultVideoDecoderFactory:
    org.webrtc.VideoDecoderFactory hardwareVideoDecoderFactory -> hardwareVideoDecoderFactory
    org.webrtc.VideoDecoderFactory softwareVideoDecoderFactory -> softwareVideoDecoderFactory
    org.webrtc.VideoDecoderFactory platformSoftwareVideoDecoderFactory -> platformSoftwareVideoDecoderFactory
    23:32:void <init>(org.webrtc.EglBase$Context) -> <init>
    23:40:void <init>(org.webrtc.VideoDecoderFactory) -> <init>
    44:54:org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo) -> createDecoder
    59:68:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
org.webrtc.DefaultVideoEncoderFactory -> org.webrtc.DefaultVideoEncoderFactory:
    org.webrtc.VideoEncoderFactory hardwareVideoEncoderFactory -> hardwareVideoEncoderFactory
    org.webrtc.VideoEncoderFactory softwareVideoEncoderFactory -> softwareVideoEncoderFactory
    21:28:void <init>(org.webrtc.EglBase$Context,boolean,boolean) -> <init>
    21:33:void <init>(org.webrtc.VideoEncoderFactory) -> <init>
    38:45:org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo) -> createEncoder
    50:55:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
org.webrtc.DtmfSender -> org.webrtc.DtmfSender:
    long nativeDtmfSender -> nativeDtmfSender
    17:19:void <init>(long) -> <init>
    25:26:boolean canInsertDtmf() -> canInsertDtmf
    47:48:boolean insertDtmf(java.lang.String,int,int) -> insertDtmf
    55:56:java.lang.String tones() -> tones
    64:65:int duration() -> duration
    74:75:int interToneGap() -> interToneGap
    79:82:void dispose() -> dispose
    85:88:void checkDtmfSenderExists() -> checkDtmfSenderExists
    boolean nativeCanInsertDtmf(long) -> nativeCanInsertDtmf
    boolean nativeInsertDtmf(long,java.lang.String,int,int) -> nativeInsertDtmf
    java.lang.String nativeTones(long) -> nativeTones
    int nativeDuration(long) -> nativeDuration
    int nativeInterToneGap(long) -> nativeInterToneGap
org.webrtc.DynamicBitrateAdjuster -> org.webrtc.DynamicBitrateAdjuster:
    double BITRATE_ADJUSTMENT_SEC -> BITRATE_ADJUSTMENT_SEC
    double BITRATE_ADJUSTMENT_MAX_SCALE -> BITRATE_ADJUSTMENT_MAX_SCALE
    int BITRATE_ADJUSTMENT_STEPS -> BITRATE_ADJUSTMENT_STEPS
    double BITS_PER_BYTE -> BITS_PER_BYTE
    double deviationBytes -> deviationBytes
    double timeSinceLastAdjustmentMs -> timeSinceLastAdjustmentMs
    int bitrateAdjustmentScaleExp -> bitrateAdjustmentScaleExp
    18:18:void <init>() -> <init>
    35:40:void setTargets(int,int) -> setTargets
    44:87:void reportEncodedFrame(int) -> reportEncodedFrame
    90:90:double getBitrateAdjustmentScale() -> getBitrateAdjustmentScale
    96:96:int getAdjustedBitrateBps() -> getAdjustedBitrateBps
org.webrtc.EglBase -> org.webrtc.EglBase:
    java.lang.Object lock -> lock
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_RECORDABLE_ANDROID -> EGL_RECORDABLE_ANDROID
    int[] CONFIG_PLAIN -> CONFIG_PLAIN
    int[] CONFIG_RGBA -> CONFIG_RGBA
    int[] CONFIG_PIXEL_BUFFER -> CONFIG_PIXEL_BUFFER
    int[] CONFIG_PIXEL_RGBA_BUFFER -> CONFIG_PIXEL_RGBA_BUFFER
    int[] CONFIG_RECORDABLE -> CONFIG_RECORDABLE
    99:107:org.webrtc.EglBase create(org.webrtc.EglBase$Context,int[]) -> create
    115:115:org.webrtc.EglBase create() -> create
    123:123:org.webrtc.EglBase create(org.webrtc.EglBase$Context) -> create
    128:128:org.webrtc.EglBase10 createEgl10(int[]) -> createEgl10
    136:137:org.webrtc.EglBase10 createEgl10(org.webrtc.EglBase10$Context,int[]) -> createEgl10
    146:146:org.webrtc.EglBase10 createEgl10(javax.microedition.khronos.egl.EGLContext,int[]) -> createEgl10
    151:151:org.webrtc.EglBase14 createEgl14(int[]) -> createEgl14
    159:160:org.webrtc.EglBase14 createEgl14(org.webrtc.EglBase14$Context,int[]) -> createEgl14
    169:169:org.webrtc.EglBase14 createEgl14(android.opengl.EGLContext,int[]) -> createEgl14
    void createSurface(android.view.Surface) -> createSurface
    void createSurface(android.graphics.SurfaceTexture) -> createSurface
    void createDummyPbufferSurface() -> createDummyPbufferSurface
    void createPbufferSurface(int,int) -> createPbufferSurface
    org.webrtc.EglBase$Context getEglBaseContext() -> getEglBaseContext
    boolean hasSurface() -> hasSurface
    int surfaceWidth() -> surfaceWidth
    int surfaceHeight() -> surfaceHeight
    void releaseSurface() -> releaseSurface
    void release() -> release
    void makeCurrent() -> makeCurrent
    void detachCurrent() -> detachCurrent
    void swapBuffers() -> swapBuffers
    void swapBuffers(long) -> swapBuffers
    40:83:void <clinit>() -> <clinit>
org.webrtc.EglBase$Context -> org.webrtc.EglBase$Context:
    long NO_CONTEXT -> NO_CONTEXT
    long getNativeEglContext() -> getNativeEglContext
org.webrtc.EglBase10 -> org.webrtc.EglBase10:
org.webrtc.EglBase10$Context -> org.webrtc.EglBase10$Context:
    javax.microedition.khronos.egl.EGLContext getRawContext() -> getRawContext
org.webrtc.EglBase10Impl -> org.webrtc.EglBase10Impl:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGL10 egl -> egl
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    javax.microedition.khronos.egl.EGLConfig eglConfig -> eglConfig
    javax.microedition.khronos.egl.EGLDisplay eglDisplay -> eglDisplay
    javax.microedition.khronos.egl.EGLSurface eglSurface -> eglSurface
    37:68:void <init>(javax.microedition.khronos.egl.EGLContext,int[]) -> <init>
    138:139:void createSurface(android.view.Surface) -> createSurface
    144:145:void createSurface(android.graphics.SurfaceTexture) -> createSurface
    149:162:void createSurfaceInternal(java.lang.Object) -> createSurfaceInternal
    167:168:void createDummyPbufferSurface() -> createDummyPbufferSurface
    172:182:void createPbufferSurface(int,int) -> createPbufferSurface
    186:186:org.webrtc.EglBase$Context getEglBaseContext() -> getEglBaseContext
    191:191:boolean hasSurface() -> hasSurface
    196:198:int surfaceWidth() -> surfaceWidth
    203:205:int surfaceHeight() -> surfaceHeight
    210:214:void releaseSurface() -> releaseSurface
    217:221:void checkIsNotReleased() -> checkIsNotReleased
    225:233:void release() -> release
    237:247:void makeCurrent() -> makeCurrent
    252:259:void detachCurrent() -> detachCurrent
    263:270:void swapBuffers() -> swapBuffers
    275:276:void swapBuffers(long) -> swapBuffers
    280:290:javax.microedition.khronos.egl.EGLDisplay getEglDisplay() -> getEglDisplay
    295:308:javax.microedition.khronos.egl.EGLConfig getEglConfig(javax.microedition.khronos.egl.EGLDisplay,int[]) -> getEglConfig
    314:327:javax.microedition.khronos.egl.EGLContext createEglContext(javax.microedition.khronos.egl.EGLContext,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createEglContext
org.webrtc.EglBase10Impl$1FakeSurfaceHolder -> org.webrtc.EglBase10Impl$1FakeSurfaceHolder:
    android.view.Surface surface -> surface
    org.webrtc.EglBase10Impl this$0 -> this$0
    80:82:void <init>(org.webrtc.EglBase10Impl,android.view.Surface) -> <init>
    85:85:void addCallback(android.view.SurfaceHolder$Callback) -> addCallback
    88:88:void removeCallback(android.view.SurfaceHolder$Callback) -> removeCallback
    92:92:boolean isCreating() -> isCreating
    97:97:void setType(int) -> setType
    100:100:void setFixedSize(int,int) -> setFixedSize
    103:103:void setSizeFromLayout() -> setSizeFromLayout
    106:106:void setFormat(int) -> setFormat
    109:109:void setKeepScreenOn(boolean) -> setKeepScreenOn
    114:114:android.graphics.Canvas lockCanvas() -> lockCanvas
    120:120:android.graphics.Canvas lockCanvas(android.graphics.Rect) -> lockCanvas
    124:124:void unlockCanvasAndPost(android.graphics.Canvas) -> unlockCanvasAndPost
    129:129:android.graphics.Rect getSurfaceFrame() -> getSurfaceFrame
    134:134:android.view.Surface getSurface() -> getSurface
org.webrtc.EglBase10Impl$Context -> org.webrtc.EglBase10Impl$Context:
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    45:45:javax.microedition.khronos.egl.EGLContext getRawContext() -> getRawContext
    54:54:long getNativeEglContext() -> getNativeEglContext
    57:59:void <init>(javax.microedition.khronos.egl.EGLContext) -> <init>
org.webrtc.EglBase14 -> org.webrtc.EglBase14:
org.webrtc.EglBase14$Context -> org.webrtc.EglBase14$Context:
    android.opengl.EGLContext getRawContext() -> getRawContext
org.webrtc.EglBase14Impl -> org.webrtc.EglBase14Impl:
    java.lang.String TAG -> TAG
    int EGLExt_SDK_VERSION -> EGLExt_SDK_VERSION
    int CURRENT_SDK_VERSION -> CURRENT_SDK_VERSION
    android.opengl.EGLContext eglContext -> eglContext
    android.opengl.EGLConfig eglConfig -> eglConfig
    android.opengl.EGLDisplay eglDisplay -> eglDisplay
    android.opengl.EGLSurface eglSurface -> eglSurface
    44:47:boolean isEGL14Supported() -> isEGL14Supported
    39:77:void <init>(android.opengl.EGLContext,int[]) -> <init>
    82:83:void createSurface(android.view.Surface) -> createSurface
    88:89:void createSurface(android.graphics.SurfaceTexture) -> createSurface
    93:106:void createSurfaceInternal(java.lang.Object) -> createSurfaceInternal
    110:111:void createDummyPbufferSurface() -> createDummyPbufferSurface
    115:125:void createPbufferSurface(int,int) -> createPbufferSurface
    129:129:org.webrtc.EglBase14Impl$Context getEglBaseContext() -> getEglBaseContext
    134:134:boolean hasSurface() -> hasSurface
    139:141:int surfaceWidth() -> surfaceWidth
    146:148:int surfaceHeight() -> surfaceHeight
    153:157:void releaseSurface() -> releaseSurface
    160:164:void checkIsNotReleased() -> checkIsNotReleased
    168:177:void release() -> release
    181:191:void makeCurrent() -> makeCurrent
    196:203:void detachCurrent() -> detachCurrent
    207:214:void swapBuffers() -> swapBuffers
    218:228:void swapBuffers(long) -> swapBuffers
    232:242:android.opengl.EGLDisplay getEglDisplay() -> getEglDisplay
    247:261:android.opengl.EGLConfig getEglConfig(android.opengl.EGLDisplay,int[]) -> getEglConfig
    267:280:android.opengl.EGLContext createEglContext(android.opengl.EGLContext,android.opengl.EGLDisplay,android.opengl.EGLConfig) -> createEglContext
    30:30:org.webrtc.EglBase$Context getEglBaseContext() -> getEglBaseContext
    32:32:int access$000() -> access$000
    35:35:void <clinit>() -> <clinit>
org.webrtc.EglBase14Impl$Context -> org.webrtc.EglBase14Impl$Context:
    android.opengl.EGLContext egl14Context -> egl14Context
    55:55:android.opengl.EGLContext getRawContext() -> getRawContext
    62:63:long getNativeEglContext() -> getNativeEglContext
    66:68:void <init>(android.opengl.EGLContext) -> <init>
org.webrtc.EglRenderer -> org.webrtc.EglRenderer:
    java.lang.String TAG -> TAG
    long LOG_INTERVAL_SEC -> LOG_INTERVAL_SEC
    java.lang.String name -> name
    java.lang.Object handlerLock -> handlerLock
    android.os.Handler renderThreadHandler -> renderThreadHandler
    java.util.ArrayList frameListeners -> frameListeners
    java.lang.Object fpsReductionLock -> fpsReductionLock
    long nextFrameTimeNs -> nextFrameTimeNs
    long minRenderPeriodNs -> minRenderPeriodNs
    org.webrtc.EglBase eglBase -> eglBase
    org.webrtc.VideoFrameDrawer frameDrawer -> frameDrawer
    org.webrtc.RendererCommon$GlDrawer drawer -> drawer
    boolean usePresentationTimeStamp -> usePresentationTimeStamp
    android.graphics.Matrix drawMatrix -> drawMatrix
    java.lang.Object frameLock -> frameLock
    org.webrtc.VideoFrame pendingFrame -> pendingFrame
    java.lang.Object layoutLock -> layoutLock
    float layoutAspectRatio -> layoutAspectRatio
    boolean mirrorHorizontally -> mirrorHorizontally
    boolean mirrorVertically -> mirrorVertically
    java.lang.Object statisticsLock -> statisticsLock
    int framesReceived -> framesReceived
    int framesDropped -> framesDropped
    int framesRendered -> framesRendered
    long statisticsStartTimeNs -> statisticsStartTimeNs
    long renderTimeNs -> renderTimeNs
    long renderSwapBufferTimeNs -> renderSwapBufferTimeNs
    org.webrtc.GlTextureFrameBuffer bitmapTextureFramebuffer -> bitmapTextureFramebuffer
    java.lang.Runnable logStatisticsRunnable -> logStatisticsRunnable
    org.webrtc.EglRenderer$EglSurfaceCreation eglSurfaceCreationRunnable -> eglSurfaceCreationRunnable
    184:185:void <init>(java.lang.String) -> <init>
    110:190:void <init>(java.lang.String,org.webrtc.VideoFrameDrawer) -> <init>
    202:242:void init(org.webrtc.EglBase$Context,int[],org.webrtc.RendererCommon$GlDrawer,boolean) -> init
    251:252:void init(org.webrtc.EglBase$Context,int[],org.webrtc.RendererCommon$GlDrawer) -> init
    255:256:void createEglSurface(android.view.Surface) -> createEglSurface
    259:260:void createEglSurface(android.graphics.SurfaceTexture) -> createEglSurface
    263:265:void createEglSurfaceInternal(java.lang.Object) -> createEglSurfaceInternal
    274:319:void release() -> release
    325:333:void resetStatistics(long) -> resetStatistics
    336:349:void printStackTrace() -> printStackTrace
    355:359:void setMirror(boolean) -> setMirror
    365:369:void setMirrorVertically(boolean) -> setMirrorVertically
    376:380:void setLayoutAspectRatio(float) -> setLayoutAspectRatio
    389:402:void setFpsReduction(float) -> setFpsReduction
    405:406:void disableFpsReduction() -> disableFpsReduction
    409:410:void pauseVideo() -> pauseVideo
    422:423:void addFrameListener(org.webrtc.EglRenderer$FrameListener,float) -> addFrameListener
    436:437:void addFrameListener(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer) -> addFrameListener
    452:457:void addFrameListener(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer,boolean) -> addFrameListener
    467:486:void removeFrameListener(org.webrtc.EglRenderer$FrameListener) -> removeFrameListener
    491:515:void onFrame(org.webrtc.VideoFrame) -> onFrame
    523:538:void releaseEglSurface(java.lang.Runnable) -> releaseEglSurface
    544:549:void postToRenderThread(java.lang.Runnable) -> postToRenderThread
    552:558:void clearSurfaceOnRenderThread(float,float,float,float) -> clearSurfaceOnRenderThread
    564:565:void clearImage() -> clearImage
    571:577:void clearImage(float,float,float,float) -> clearImage
    585:668:void renderFrameOnRenderThread() -> renderFrameOnRenderThread
    671:719:void notifyCallbacks(org.webrtc.VideoFrame,boolean) -> notifyCallbacks
    722:722:java.lang.String averageTimeAsString(long,int) -> averageTimeAsString
    726:744:void logStatistics() -> logStatistics
    747:748:void logD(java.lang.String) -> logD
    751:752:void logW(java.lang.String) -> logW
    575:575:void lambda$clearImage$6(float,float,float,float) -> lambda$clearImage$6
    528:533:void lambda$releaseEglSurface$5(java.lang.Runnable) -> lambda$releaseEglSurface$5
    476:483:void lambda$removeFrameListener$4(java.util.concurrent.CountDownLatch,org.webrtc.EglRenderer$FrameListener) -> lambda$removeFrameListener$4
    453:456:void lambda$addFrameListener$3(org.webrtc.RendererCommon$GlDrawer,org.webrtc.EglRenderer$FrameListener,float,boolean) -> lambda$addFrameListener$3
    304:306:void lambda$release$2(android.os.Looper) -> lambda$release$2
    285:300:void lambda$release$1(java.util.concurrent.CountDownLatch) -> lambda$release$1
    228:235:void lambda$init$0(org.webrtc.EglBase$Context,int[]) -> lambda$init$0
    34:34:org.webrtc.EglBase access$000(org.webrtc.EglRenderer) -> access$000
    34:34:void access$100(org.webrtc.EglRenderer) -> access$100
    34:34:java.lang.Object access$200(org.webrtc.EglRenderer) -> access$200
    34:34:android.os.Handler access$300(org.webrtc.EglRenderer) -> access$300
    34:34:java.lang.Runnable access$400(org.webrtc.EglRenderer) -> access$400
    34:34:android.os.Handler access$302(org.webrtc.EglRenderer,android.os.Handler) -> access$302
org.webrtc.EglRenderer$1 -> org.webrtc.EglRenderer$1:
    org.webrtc.EglRenderer this$0 -> this$0
    163:163:void <init>(org.webrtc.EglRenderer) -> <init>
    166:174:void run() -> run
org.webrtc.EglRenderer$2 -> org.webrtc.EglRenderer$2:
    org.webrtc.EglRenderer this$0 -> this$0
    213:213:void <init>(org.webrtc.EglRenderer) -> <init>
    216:219:void run() -> run
org.webrtc.EglRenderer$EglSurfaceCreation -> org.webrtc.EglRenderer$EglSurfaceCreation:
    java.lang.Object surface -> surface
    org.webrtc.EglRenderer this$0 -> this$0
    55:55:void <init>(org.webrtc.EglRenderer) -> <init>
    61:62:void setSurface(java.lang.Object) -> setSurface
    68:80:void run() -> run
    55:55:void <init>(org.webrtc.EglRenderer,org.webrtc.EglRenderer$1) -> <init>
org.webrtc.EglRenderer$FrameListener -> org.webrtc.EglRenderer$FrameListener:
    void onFrame(android.graphics.Bitmap) -> onFrame
org.webrtc.EglRenderer$FrameListenerAndParams -> org.webrtc.EglRenderer$FrameListenerAndParams:
    org.webrtc.EglRenderer$FrameListener listener -> listener
    float scale -> scale
    org.webrtc.RendererCommon$GlDrawer drawer -> drawer
    boolean applyFpsReduction -> applyFpsReduction
    47:52:void <init>(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer,boolean) -> <init>
org.webrtc.EglRenderer$HandlerWithExceptionCallback -> org.webrtc.EglRenderer$HandlerWithExceptionCallback:
    java.lang.Runnable exceptionCallback -> exceptionCallback
    90:92:void <init>(android.os.Looper,java.lang.Runnable) -> <init>
    97:103:void dispatchMessage(android.os.Message) -> dispatchMessage
org.webrtc.Empty -> org.webrtc.Empty:
    17:17:void <init>() -> <init>
org.webrtc.EncodedImage -> org.webrtc.EncodedImage:
    java.nio.ByteBuffer buffer -> buffer
    int encodedWidth -> encodedWidth
    int encodedHeight -> encodedHeight
    long captureTimeMs -> captureTimeMs
    long captureTimeNs -> captureTimeNs
    org.webrtc.EncodedImage$FrameType frameType -> frameType
    int rotation -> rotation
    boolean completeFrame -> completeFrame
    java.lang.Integer qp -> qp
    int spatialIndex -> spatialIndex
    61:72:void <init>(java.nio.ByteBuffer,int,int,long,org.webrtc.EncodedImage$FrameType,int,boolean,java.lang.Integer,int) -> <init>
    75:75:org.webrtc.EncodedImage$Builder builder() -> builder
    20:20:void <init>(java.nio.ByteBuffer,int,int,long,org.webrtc.EncodedImage$FrameType,int,boolean,java.lang.Integer,int,org.webrtc.EncodedImage$1) -> <init>
org.webrtc.EncodedImage$1 -> org.webrtc.EncodedImage$1:
org.webrtc.EncodedImage$Builder -> org.webrtc.EncodedImage$Builder:
    java.nio.ByteBuffer buffer -> buffer
    int encodedWidth -> encodedWidth
    int encodedHeight -> encodedHeight
    long captureTimeNs -> captureTimeNs
    org.webrtc.EncodedImage$FrameType frameType -> frameType
    int rotation -> rotation
    boolean completeFrame -> completeFrame
    java.lang.Integer qp -> qp
    int spatialIndex -> spatialIndex
    89:89:void <init>() -> <init>
    92:93:org.webrtc.EncodedImage$Builder setBuffer(java.nio.ByteBuffer) -> setBuffer
    97:98:org.webrtc.EncodedImage$Builder setEncodedWidth(int) -> setEncodedWidth
    102:103:org.webrtc.EncodedImage$Builder setEncodedHeight(int) -> setEncodedHeight
    108:109:org.webrtc.EncodedImage$Builder setCaptureTimeMs(long) -> setCaptureTimeMs
    113:114:org.webrtc.EncodedImage$Builder setCaptureTimeNs(long) -> setCaptureTimeNs
    118:119:org.webrtc.EncodedImage$Builder setFrameType(org.webrtc.EncodedImage$FrameType) -> setFrameType
    123:124:org.webrtc.EncodedImage$Builder setRotation(int) -> setRotation
    128:129:org.webrtc.EncodedImage$Builder setCompleteFrame(boolean) -> setCompleteFrame
    133:134:org.webrtc.EncodedImage$Builder setQp(java.lang.Integer) -> setQp
    138:139:org.webrtc.EncodedImage$Builder SetSpatialIndex(int) -> SetSpatialIndex
    143:143:org.webrtc.EncodedImage createEncodedImage() -> createEncodedImage
    78:78:void <init>(org.webrtc.EncodedImage$1) -> <init>
org.webrtc.EncodedImage$FrameType -> org.webrtc.EncodedImage$FrameType:
    org.webrtc.EncodedImage$FrameType EmptyFrame -> EmptyFrame
    org.webrtc.EncodedImage$FrameType VideoFrameKey -> VideoFrameKey
    org.webrtc.EncodedImage$FrameType VideoFrameDelta -> VideoFrameDelta
    int nativeIndex -> nativeIndex
    org.webrtc.EncodedImage$FrameType[] $VALUES -> $VALUES
    22:22:org.webrtc.EncodedImage$FrameType[] values() -> values
    22:22:org.webrtc.EncodedImage$FrameType valueOf(java.lang.String) -> valueOf
    29:31:void <init>(java.lang.String,int,int) -> <init>
    34:34:int getNative() -> getNative
    39:44:org.webrtc.EncodedImage$FrameType fromNativeIndex(int) -> fromNativeIndex
    22:25:void <clinit>() -> <clinit>
org.webrtc.FecControllerFactoryFactoryInterface -> org.webrtc.FecControllerFactoryFactoryInterface:
    long createNative() -> createNative
org.webrtc.FileVideoCapturer -> org.webrtc.FileVideoCapturer:
    java.lang.String TAG -> TAG
    org.webrtc.FileVideoCapturer$VideoReader videoReader -> videoReader
    org.webrtc.CapturerObserver capturerObserver -> capturerObserver
    java.util.Timer timer -> timer
    java.util.TimerTask tickTask -> tickTask
    147:163:void <init>(java.lang.String) -> <init>
    166:169:void tick() -> tick
    174:175:void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver) -> initialize
    179:180:void startCapture(int,int,int) -> startCapture
    184:185:void stopCapture() -> stopCapture
    190:190:void changeCaptureFormat(int,int,int) -> changeCaptureFormat
    194:195:void dispose() -> dispose
    199:199:boolean isScreencast() -> isScreencast
org.webrtc.FileVideoCapturer$1 -> org.webrtc.FileVideoCapturer$1:
    org.webrtc.FileVideoCapturer this$0 -> this$0
    149:149:void <init>(org.webrtc.FileVideoCapturer) -> <init>
    152:153:void run() -> run
org.webrtc.FileVideoCapturer$VideoReader -> org.webrtc.FileVideoCapturer$VideoReader:
    org.webrtc.VideoFrame getNextFrame() -> getNextFrame
    void close() -> close
org.webrtc.FileVideoCapturer$VideoReaderY4M -> org.webrtc.FileVideoCapturer$VideoReaderY4M:
    java.lang.String TAG -> TAG
    java.lang.String Y4M_FRAME_DELIMETER -> Y4M_FRAME_DELIMETER
    int FRAME_DELIMETER_LENGTH -> FRAME_DELIMETER_LENGTH
    int frameWidth -> frameWidth
    int frameHeight -> frameHeight
    long videoStart -> videoStart
    java.io.RandomAccessFile mediaFile -> mediaFile
    java.nio.channels.FileChannel mediaFileChannel -> mediaFileChannel
    46:93:void <init>(java.lang.String) -> <init>
    97:130:org.webrtc.VideoFrame getNextFrame() -> getNextFrame
    137:141:void close() -> close
    37:37:void <clinit>() -> <clinit>
org.webrtc.FrameDecryptor -> org.webrtc.FrameDecryptor:
    long getNativeFrameDecryptor() -> getNativeFrameDecryptor
org.webrtc.FrameDecryptorImpl -> org.webrtc.FrameDecryptorImpl:
    long nativeDecryptor -> nativeDecryptor
    org.webrtc.FrameDecryptorImpl$DecryptorObserver observer -> observer
    55:57:void <init>(org.webrtc.FrameDecryptorImpl$DecryptorObserver) -> <init>
    60:60:org.webrtc.FrameDecryptorImpl$DecryptorObserver getObserver() -> getObserver
    65:65:long getNativeFrameDecryptor() -> getNativeFrameDecryptor
    69:70:void setNativeFrameDecryptor(long) -> setNativeFrameDecryptor
org.webrtc.FrameDecryptorImpl$DecryptorInfo -> org.webrtc.FrameDecryptorImpl$DecryptorInfo:
    java.nio.ByteBuffer encryptedFrame -> encryptedFrame
    int encryptedSize -> encryptedSize
    java.nio.ByteBuffer frame -> frame
    int frameSize -> frameSize
    35:40:void <init>(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int) -> <init>
    44:44:int getFrameSize() -> getFrameSize
org.webrtc.FrameDecryptorImpl$DecryptorObserver -> org.webrtc.FrameDecryptorImpl$DecryptorObserver:
    int Decrypt(org.webrtc.FrameDecryptorImpl$DecryptorInfo) -> Decrypt
    int GetMaxByteSize(int) -> GetMaxByteSize
org.webrtc.FrameEncryptor -> org.webrtc.FrameEncryptor:
    long getNativeFrameEncryptor() -> getNativeFrameEncryptor
org.webrtc.FrameEncryptorImpl -> org.webrtc.FrameEncryptorImpl:
    long nativeEncryptor -> nativeEncryptor
    org.webrtc.FrameEncryptorImpl$EncryptorObserver observer -> observer
    56:58:void <init>(org.webrtc.FrameEncryptorImpl$EncryptorObserver) -> <init>
    61:61:org.webrtc.FrameEncryptorImpl$EncryptorObserver getObserver() -> getObserver
    66:66:long getNativeFrameEncryptor() -> getNativeFrameEncryptor
    70:71:void setNativeFrameEncryptor(long) -> setNativeFrameEncryptor
org.webrtc.FrameEncryptorImpl$EncryptorInfo -> org.webrtc.FrameEncryptorImpl$EncryptorInfo:
    java.nio.ByteBuffer frame -> frame
    int frameSize -> frameSize
    java.nio.ByteBuffer encryptedFrame -> encryptedFrame
    int encryptedSize -> encryptedSize
    36:41:void <init>(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int) -> <init>
    45:45:int getEncryptedSize() -> getEncryptedSize
org.webrtc.FrameEncryptorImpl$EncryptorObserver -> org.webrtc.FrameEncryptorImpl$EncryptorObserver:
    int Encrypt(org.webrtc.FrameEncryptorImpl$EncryptorInfo) -> Encrypt
    int GetMaxByteSize(int) -> GetMaxByteSize
org.webrtc.FramerateBitrateAdjuster -> org.webrtc.FramerateBitrateAdjuster:
    int INITIAL_FPS -> INITIAL_FPS
    17:17:void <init>() -> <init>
    22:29:void setTargets(int,int) -> setTargets
    33:33:int getCodecConfigFramerate() -> getCodecConfigFramerate
org.webrtc.GlGenericDrawer -> org.webrtc.GlGenericDrawer:
    java.lang.String INPUT_VERTEX_COORDINATE_NAME -> INPUT_VERTEX_COORDINATE_NAME
    java.lang.String INPUT_TEXTURE_COORDINATE_NAME -> INPUT_TEXTURE_COORDINATE_NAME
    java.lang.String TEXTURE_MATRIX_NAME -> TEXTURE_MATRIX_NAME
    java.lang.String DEFAULT_VERTEX_SHADER_STRING -> DEFAULT_VERTEX_SHADER_STRING
    java.nio.FloatBuffer FULL_RECTANGLE_BUFFER -> FULL_RECTANGLE_BUFFER
    java.nio.FloatBuffer FULL_RECTANGLE_TEXTURE_BUFFER -> FULL_RECTANGLE_TEXTURE_BUFFER
    java.lang.String genericFragmentSource -> genericFragmentSource
    java.lang.String vertexShader -> vertexShader
    org.webrtc.GlGenericDrawer$ShaderCallbacks shaderCallbacks -> shaderCallbacks
    org.webrtc.GlGenericDrawer$ShaderType currentShaderType -> currentShaderType
    org.webrtc.GlShader currentShader -> currentShader
    int inPosLocation -> inPosLocation
    int inTcLocation -> inTcLocation
    int texMatrixLocation -> texMatrixLocation
    92:123:java.lang.String createFragmentShaderString(java.lang.String,org.webrtc.GlGenericDrawer$ShaderType) -> createFragmentShaderString
    136:137:void <init>(java.lang.String,org.webrtc.GlGenericDrawer$ShaderCallbacks) -> <init>
    140:144:void <init>(java.lang.String,java.lang.String,org.webrtc.GlGenericDrawer$ShaderCallbacks) -> <init>
    148:149:org.webrtc.GlShader createShader(org.webrtc.GlGenericDrawer$ShaderType) -> createShader
    159:169:void drawOes(int,float[],int,int,int,int,int,int) -> drawOes
    178:188:void drawRgb(int,float[],int,int,int,int,int,int) -> drawRgb
    197:212:void drawYuv(int[],float[],int,int,int,int,int,int) -> drawYuv
    217:268:void prepareShader(org.webrtc.GlGenericDrawer$ShaderType,float[],int,int,int,int) -> prepareShader
    275:280:void release() -> release
    75:84:void <clinit>() -> <clinit>
org.webrtc.GlGenericDrawer$ShaderCallbacks -> org.webrtc.GlGenericDrawer$ShaderCallbacks:
    void onNewShader(org.webrtc.GlShader) -> onNewShader
    void onPrepareShader(org.webrtc.GlShader,float[],int,int,int,int) -> onPrepareShader
org.webrtc.GlGenericDrawer$ShaderType -> org.webrtc.GlGenericDrawer$ShaderType:
    org.webrtc.GlGenericDrawer$ShaderType OES -> OES
    org.webrtc.GlGenericDrawer$ShaderType RGB -> RGB
    org.webrtc.GlGenericDrawer$ShaderType YUV -> YUV
    org.webrtc.GlGenericDrawer$ShaderType[] $VALUES -> $VALUES
    39:39:org.webrtc.GlGenericDrawer$ShaderType[] values() -> values
    39:39:org.webrtc.GlGenericDrawer$ShaderType valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:void <clinit>() -> <clinit>
org.webrtc.GlRectDrawer -> org.webrtc.GlRectDrawer:
    java.lang.String FRAGMENT_SHADER -> FRAGMENT_SHADER
    29:30:void <init>() -> <init>
    14:14:void release() -> release
    14:14:void drawYuv(int[],float[],int,int,int,int,int,int) -> drawYuv
    14:14:void drawRgb(int,float[],int,int,int,int,int,int) -> drawRgb
    14:14:void drawOes(int,float[],int,int,int,int,int,int) -> drawOes
org.webrtc.GlRectDrawer$1 -> org.webrtc.GlRectDrawer$1:
org.webrtc.GlRectDrawer$ShaderCallbacks -> org.webrtc.GlRectDrawer$ShaderCallbacks:
    19:19:void <init>() -> <init>
    21:21:void onNewShader(org.webrtc.GlShader) -> onNewShader
    25:25:void onPrepareShader(org.webrtc.GlShader,float[],int,int,int,int) -> onPrepareShader
    19:19:void <init>(org.webrtc.GlRectDrawer$1) -> <init>
org.webrtc.GlShader -> org.webrtc.GlShader:
    java.lang.String TAG -> TAG
    int program -> program
    22:36:int compileShader(int,java.lang.String) -> compileShader
    41:67:void <init>(java.lang.String,java.lang.String) -> <init>
    70:77:int getAttribLocation(java.lang.String) -> getAttribLocation
    85:86:void setVertexAttribArray(java.lang.String,int,java.nio.FloatBuffer) -> setVertexAttribArray
    93:100:void setVertexAttribArray(java.lang.String,int,int,java.nio.FloatBuffer) -> setVertexAttribArray
    103:110:int getUniformLocation(java.lang.String) -> getUniformLocation
    114:119:void useProgram() -> useProgram
    122:128:void release() -> release
org.webrtc.GlTextureFrameBuffer -> org.webrtc.GlTextureFrameBuffer:
    int pixelFormat -> pixelFormat
    int frameBufferId -> frameBufferId
    int textureId -> textureId
    int width -> width
    int height -> height
    32:44:void <init>(int) -> <init>
    52:90:void setSize(int,int) -> setSize
    93:93:int getWidth() -> getWidth
    97:97:int getHeight() -> getHeight
    102:102:int getFrameBufferId() -> getFrameBufferId
    107:107:int getTextureId() -> getTextureId
    115:121:void release() -> release
org.webrtc.GlUtil -> org.webrtc.GlUtil:
    23:23:void <init>() -> <init>
    27:31:void checkNoGLES2Error(java.lang.String) -> checkNoGLES2Error
    35:40:java.nio.FloatBuffer createFloatBuffer(float[]) -> createFloatBuffer
    47:56:int generateTexture(int) -> generateTexture
org.webrtc.H264Utils -> org.webrtc.H264Utils:
    java.lang.String H264_FMTP_PROFILE_LEVEL_ID -> H264_FMTP_PROFILE_LEVEL_ID
    java.lang.String H264_FMTP_LEVEL_ASYMMETRY_ALLOWED -> H264_FMTP_LEVEL_ASYMMETRY_ALLOWED
    java.lang.String H264_FMTP_PACKETIZATION_MODE -> H264_FMTP_PACKETIZATION_MODE
    java.lang.String H264_PROFILE_CONSTRAINED_BASELINE -> H264_PROFILE_CONSTRAINED_BASELINE
    java.lang.String H264_PROFILE_CONSTRAINED_HIGH -> H264_PROFILE_CONSTRAINED_HIGH
    java.lang.String H264_LEVEL_3_1 -> H264_LEVEL_3_1
    java.lang.String H264_CONSTRAINED_HIGH_3_1 -> H264_CONSTRAINED_HIGH_3_1
    java.lang.String H264_CONSTRAINED_BASELINE_3_1 -> H264_CONSTRAINED_BASELINE_3_1
    org.webrtc.VideoCodecInfo DEFAULT_H264_BASELINE_PROFILE_CODEC -> DEFAULT_H264_BASELINE_PROFILE_CODEC
    org.webrtc.VideoCodecInfo DEFAULT_H264_HIGH_PROFILE_CODEC -> DEFAULT_H264_HIGH_PROFILE_CODEC
    17:17:void <init>() -> <init>
    31:37:java.util.Map getDefaultH264Params(boolean) -> getDefaultH264Params
    47:47:boolean isSameH264Profile(java.util.Map,java.util.Map) -> isSameH264Profile
    boolean nativeIsSameH264Profile(java.util.Map,java.util.Map) -> nativeIsSameH264Profile
    40:43:void <clinit>() -> <clinit>
org.webrtc.HardwareVideoDecoderFactory -> org.webrtc.HardwareVideoDecoderFactory:
    org.webrtc.Predicate defaultAllowedPredicate -> defaultAllowedPredicate
    39:40:void <init>() -> <init>
    49:50:void <init>(org.webrtc.EglBase$Context) -> <init>
    62:65:void <init>(org.webrtc.EglBase$Context,org.webrtc.Predicate) -> <init>
    18:18:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    18:18:org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo) -> createDecoder
    19:19:void <clinit>() -> <clinit>
org.webrtc.HardwareVideoDecoderFactory$1 -> org.webrtc.HardwareVideoDecoderFactory$1:
    java.lang.String[] prefixBlacklist -> prefixBlacklist
    20:22:void <init>() -> <init>
    26:32:boolean test(android.media.MediaCodecInfo) -> test
    20:20:boolean test(java.lang.Object) -> test
org.webrtc.HardwareVideoEncoder -> org.webrtc.HardwareVideoEncoder:
    java.lang.String TAG -> TAG
    int VIDEO_ControlRateConstant -> VIDEO_ControlRateConstant
    java.lang.String KEY_BITRATE_MODE -> KEY_BITRATE_MODE
    int VIDEO_AVC_PROFILE_HIGH -> VIDEO_AVC_PROFILE_HIGH
    int VIDEO_AVC_LEVEL_3 -> VIDEO_AVC_LEVEL_3
    int MAX_VIDEO_FRAMERATE -> MAX_VIDEO_FRAMERATE
    int MAX_ENCODER_Q_SIZE -> MAX_ENCODER_Q_SIZE
    int MEDIA_CODEC_RELEASE_TIMEOUT_MS -> MEDIA_CODEC_RELEASE_TIMEOUT_MS
    int DEQUEUE_OUTPUT_BUFFER_TIMEOUT_US -> DEQUEUE_OUTPUT_BUFFER_TIMEOUT_US
    int ENCODER_STALL_FRAMEDROP_THRESHOLD -> ENCODER_STALL_FRAMEDROP_THRESHOLD
    int DYNAMIC_BITRATE_THRESHOLD -> DYNAMIC_BITRATE_THRESHOLD
    org.webrtc.MediaCodecWrapperFactory mediaCodecWrapperFactory -> mediaCodecWrapperFactory
    java.lang.String codecName -> codecName
    org.webrtc.VideoCodecType codecType -> codecType
    java.lang.Integer surfaceColorFormat -> surfaceColorFormat
    java.lang.Integer yuvColorFormat -> yuvColorFormat
    org.webrtc.HardwareVideoEncoder$YuvFormat yuvFormat -> yuvFormat
    java.util.Map params -> params
    int keyFrameIntervalSec -> keyFrameIntervalSec
    long forcedKeyFrameNs -> forcedKeyFrameNs
    org.webrtc.BitrateAdjuster bitrateAdjuster -> bitrateAdjuster
    org.webrtc.EglBase14$Context sharedContext -> sharedContext
    org.webrtc.GlRectDrawer textureDrawer -> textureDrawer
    org.webrtc.VideoFrameDrawer videoFrameDrawer -> videoFrameDrawer
    org.webrtc.ThreadUtils$ThreadChecker encodeThreadChecker -> encodeThreadChecker
    org.webrtc.ThreadUtils$ThreadChecker outputThreadChecker -> outputThreadChecker
    org.webrtc.VideoEncoder$Callback callback -> callback
    boolean automaticResizeOn -> automaticResizeOn
    java.lang.Thread outputThread -> outputThread
    int width -> width
    int height -> height
    int numberOfSimulcastStreams -> numberOfSimulcastStreams
    java.util.List simulcastStreams -> simulcastStreams
    boolean useSurfaceMode -> useSurfaceMode
    int mFrameDrops -> mFrameDrops
    long lastKeyFrameNs -> lastKeyFrameNs
    int adjustedBitrate -> adjustedBitrate
    boolean mNeedResetCodec -> mNeedResetCodec
    boolean running -> running
    java.lang.Exception shutdownException -> shutdownException
    boolean mGlobalUseSurafceMode -> mGlobalUseSurafceMode
    java.util.List streamCodecHolders -> streamCodecHolders
    87:187:void <init>(org.webrtc.MediaCodecWrapperFactory,java.lang.String,org.webrtc.VideoCodecType,java.lang.Integer,java.lang.Integer,java.util.Map,int,int,org.webrtc.BitrateAdjuster,org.webrtc.EglBase14$Context) -> <init>
    191:209:org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback) -> initEncode
    213:229:org.webrtc.VideoCodecStatus initEncodersInternal() -> initEncodersInternal
    233:294:org.webrtc.VideoCodecStatus initEncodeInternal(int) -> initEncodeInternal
    299:338:org.webrtc.VideoCodecStatus release() -> release
    343:430:org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo) -> encode
    434:438:int outputBuildersSize() -> outputBuildersSize
    442:456:org.webrtc.VideoCodecStatus encodeTextureBuffer(int,org.webrtc.VideoFrame) -> encodeTextureBuffer
    461:499:org.webrtc.VideoCodecStatus encodeByteBuffer(int,org.webrtc.VideoFrame,org.webrtc.VideoFrame$Buffer,int) -> encodeByteBuffer
    504:517:org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int) -> setRateAllocation
    522:534:org.webrtc.VideoEncoder$ScalingSettings getScalingSettings() -> getScalingSettings
    539:539:java.lang.String getImplementationName() -> getImplementationName
    543:551:org.webrtc.VideoCodecStatus resetCodec(int,int,boolean) -> resetCodec
    555:556:boolean shouldForceKeyFrame(long) -> shouldForceKeyFrame
    560:577:void requestKeyFrame(long) -> requestKeyFrame
    580:580:java.lang.Thread createOutputThread() -> createOutputThread
    592:595:void deliverEncodedImages() -> deliverEncodedImages
    599:662:void deliverEncodedImage(org.webrtc.HardwareVideoEncoder$StreamCodecHolder) -> deliverEncodedImage
    665:668:void releaseCodecsOnOutputThread() -> releaseCodecsOnOutputThread
    671:686:void releaseCodecOnOutputThread(org.webrtc.MediaCodecWrapper) -> releaseCodecOnOutputThread
    689:697:org.webrtc.VideoCodecStatus updateBitrate(org.webrtc.MediaCodecWrapper,int) -> updateBitrate
    702:702:boolean canUseSurface() -> canUseSurface
    708:711:boolean isSupportDynamicBitrate() -> isSupportDynamicBitrate
    716:716:org.webrtc.VideoCodecStatus fillInputBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer) -> fillInputBuffer
    45:45:boolean access$100(org.webrtc.HardwareVideoEncoder) -> access$100
    45:45:void access$200(org.webrtc.HardwareVideoEncoder) -> access$200
org.webrtc.HardwareVideoEncoder$1 -> org.webrtc.HardwareVideoEncoder$1:
    org.webrtc.HardwareVideoEncoder this$0 -> this$0
    580:580:void <init>(org.webrtc.HardwareVideoEncoder) -> <init>
    583:587:void run() -> run
org.webrtc.HardwareVideoEncoder$StreamCodecHolder -> org.webrtc.HardwareVideoEncoder$StreamCodecHolder:
    int simulcastIdx -> simulcastIdx
    int targetBps -> targetBps
    org.webrtc.VideoFrame downscaledFrame -> downscaledFrame
    org.webrtc.MediaCodecWrapper codec -> codec
    org.webrtc.EglBase14 textureEglBase -> textureEglBase
    android.view.Surface textureInputSurface -> textureInputSurface
    org.webrtc.VideoEncoder$SimulcastStream stream -> stream
    java.nio.ByteBuffer configBuffer -> configBuffer
    java.util.concurrent.BlockingDeque outputBuilders -> outputBuilders
    org.webrtc.HardwareVideoEncoder this$0 -> this$0
    130:150:void <init>(org.webrtc.HardwareVideoEncoder) -> <init>
    130:130:void <init>(org.webrtc.HardwareVideoEncoder,org.webrtc.HardwareVideoEncoder$1) -> <init>
org.webrtc.HardwareVideoEncoder$YuvFormat -> org.webrtc.HardwareVideoEncoder$YuvFormat:
    org.webrtc.HardwareVideoEncoder$YuvFormat I420 -> I420
    org.webrtc.HardwareVideoEncoder$YuvFormat NV12 -> NV12
    org.webrtc.HardwareVideoEncoder$YuvFormat[] $VALUES -> $VALUES
    722:722:org.webrtc.HardwareVideoEncoder$YuvFormat[] values() -> values
    722:722:org.webrtc.HardwareVideoEncoder$YuvFormat valueOf(java.lang.String) -> valueOf
    722:722:void <init>(java.lang.String,int) -> <init>
    org.webrtc.VideoCodecStatus fillBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer) -> fillBuffer
    767:775:org.webrtc.HardwareVideoEncoder$YuvFormat valueOf(int) -> valueOf
    722:722:void <init>(java.lang.String,int,org.webrtc.HardwareVideoEncoder$1) -> <init>
    722:743:void <clinit>() -> <clinit>
org.webrtc.HardwareVideoEncoder$YuvFormat$1 -> org.webrtc.HardwareVideoEncoder$YuvFormat$1:
    723:723:void <init>(java.lang.String,int) -> <init>
    726:740:org.webrtc.VideoCodecStatus fillBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer) -> fillBuffer
org.webrtc.HardwareVideoEncoder$YuvFormat$2 -> org.webrtc.HardwareVideoEncoder$YuvFormat$2:
    743:743:void <init>(java.lang.String,int) -> <init>
    746:760:org.webrtc.VideoCodecStatus fillBuffer(java.nio.ByteBuffer,org.webrtc.VideoFrame$Buffer) -> fillBuffer
org.webrtc.HardwareVideoEncoderFactory -> org.webrtc.HardwareVideoEncoderFactory:
    java.lang.String TAG -> TAG
    int QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_L_MS -> QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_L_MS
    int QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_M_MS -> QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_M_MS
    int QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_N_MS -> QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_N_MS
    java.util.List H264_HW_EXCEPTION_MODELS -> H264_HW_EXCEPTION_MODELS
    org.webrtc.EglBase14$Context sharedContext -> sharedContext
    boolean enableIntelVp8Encoder -> enableIntelVp8Encoder
    boolean enableH264HighProfile -> enableH264HighProfile
    org.webrtc.Predicate codecAllowedPredicate -> codecAllowedPredicate
    60:62:void <init>(org.webrtc.EglBase$Context,boolean,boolean) -> <init>
    75:86:void <init>(org.webrtc.EglBase$Context,boolean,boolean,org.webrtc.Predicate) -> <init>
    90:91:void <init>(boolean,boolean) -> <init>
    97:131:org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo) -> createEncoder
    138:163:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    167:183:android.media.MediaCodecInfo findCodecForType(org.webrtc.VideoCodecType) -> findCodecForType
    188:197:boolean isSupportedCodec(android.media.MediaCodecInfo,org.webrtc.VideoCodecType) -> isSupportedCodec
    203:211:boolean isHardwareSupportedInCurrentSdk(android.media.MediaCodecInfo,org.webrtc.VideoCodecType) -> isHardwareSupportedInCurrentSdk
    215:221:boolean isHardwareSupportedInCurrentSdkVp8(android.media.MediaCodecInfo) -> isHardwareSupportedInCurrentSdkVp8
    226:227:boolean isHardwareSupportedInCurrentSdkVp9(android.media.MediaCodecInfo) -> isHardwareSupportedInCurrentSdkVp9
    234:249:boolean isHardwareSupportedInCurrentSdkH264(android.media.MediaCodecInfo) -> isHardwareSupportedInCurrentSdkH264
    253:256:boolean isMediaCodecAllowed(android.media.MediaCodecInfo) -> isMediaCodecAllowed
    260:267:int getKeyFrameIntervalSec(org.webrtc.VideoCodecType) -> getKeyFrameIntervalSec
    271:282:int getForcedKeyFrameIntervalMs(org.webrtc.VideoCodecType,java.lang.String) -> getForcedKeyFrameIntervalMs
    286:296:org.webrtc.BitrateAdjuster createBitrateAdjuster(org.webrtc.VideoCodecType,java.lang.String) -> createBitrateAdjuster
    300:301:boolean isH264HighProfileSupported(android.media.MediaCodecInfo) -> isH264HighProfileSupported
    42:43:void <clinit>() -> <clinit>
org.webrtc.HardwareVideoEncoderFactory$1 -> org.webrtc.HardwareVideoEncoderFactory$1:
    int[] $SwitchMap$org$webrtc$VideoCodecType -> $SwitchMap$org$webrtc$VideoCodecType
    203:203:void <clinit>() -> <clinit>
org.webrtc.Histogram -> org.webrtc.Histogram:
    long handle -> handle
    25:27:void <init>(long) -> <init>
    30:30:org.webrtc.Histogram createCounts(java.lang.String,int,int,int) -> createCounts
    34:34:org.webrtc.Histogram createEnumeration(java.lang.String,int) -> createEnumeration
    38:39:void addSample(int) -> addSample
    long nativeCreateCounts(java.lang.String,int,int,int) -> nativeCreateCounts
    long nativeCreateEnumeration(java.lang.String,int) -> nativeCreateEnumeration
    void nativeAddSample(long,int) -> nativeAddSample
org.webrtc.IceCandidate -> org.webrtc.IceCandidate:
    java.lang.String sdpMid -> sdpMid
    int sdpMLineIndex -> sdpMLineIndex
    java.lang.String sdp -> sdp
    java.lang.String serverUrl -> serverUrl
    23:28:void <init>(java.lang.String,int,java.lang.String) -> <init>
    31:36:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    40:40:java.lang.String toString() -> toString
    45:45:java.lang.String getSdpMid() -> getSdpMid
    50:50:java.lang.String getSdp() -> getSdp
org.webrtc.JNILogging -> org.webrtc.JNILogging:
    org.webrtc.Loggable loggable -> loggable
    20:22:void <init>(org.webrtc.Loggable) -> <init>
    26:27:void logToInjectable(java.lang.String,java.lang.Integer,java.lang.String) -> logToInjectable
org.webrtc.JavaI420Buffer -> org.webrtc.JavaI420Buffer:
    int width -> width
    int height -> height
    java.nio.ByteBuffer dataY -> dataY
    java.nio.ByteBuffer dataU -> dataU
    java.nio.ByteBuffer dataV -> dataV
    int strideY -> strideY
    int strideU -> strideU
    int strideV -> strideV
    org.webrtc.RefCountDelegate refCountDelegate -> refCountDelegate
    30:40:void <init>(int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.lang.Runnable) -> <init>
    44:49:void checkCapacity(java.nio.ByteBuffer,int,int,int) -> checkCapacity
    55:74:org.webrtc.JavaI420Buffer wrap(int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.lang.Runnable) -> wrap
    80:101:org.webrtc.JavaI420Buffer allocate(int,int) -> allocate
    107:107:int getWidth() -> getWidth
    112:112:int getHeight() -> getHeight
    118:118:java.nio.ByteBuffer getDataY() -> getDataY
    124:124:java.nio.ByteBuffer getDataU() -> getDataU
    130:130:java.nio.ByteBuffer getDataV() -> getDataV
    135:135:int getStrideY() -> getStrideY
    140:140:int getStrideU() -> getStrideU
    145:145:int getStrideV() -> getStrideV
    150:151:org.webrtc.VideoFrame$I420Buffer toI420() -> toI420
    156:157:void retain() -> retain
    161:162:void release() -> release
    167:167:org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int) -> cropAndScale
    172:193:org.webrtc.VideoFrame$Buffer cropAndScaleI420(org.webrtc.VideoFrame$I420Buffer,int,int,int,int,int,int) -> cropAndScaleI420
    void nativeCropAndScaleI420(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> nativeCropAndScaleI420
    102:102:void lambda$allocate$0(java.nio.ByteBuffer) -> lambda$allocate$0
org.webrtc.JniCommon -> org.webrtc.JniCommon:
    16:16:void <init>() -> <init>
    void nativeAddRef(long) -> nativeAddRef
    void nativeReleaseRef(long) -> nativeReleaseRef
    java.nio.ByteBuffer nativeAllocateByteBuffer(int) -> nativeAllocateByteBuffer
    void nativeFreeByteBuffer(java.nio.ByteBuffer) -> nativeFreeByteBuffer
org.webrtc.JniHelper -> org.webrtc.JniHelper:
    20:20:void <init>() -> <init>
    25:27:byte[] getStringBytes(java.lang.String) -> getStringBytes
    34:34:java.lang.Object getStringClass() -> getStringClass
    40:40:java.lang.Object getKey(java.util.Map$Entry) -> getKey
    46:46:java.lang.Object getValue(java.util.Map$Entry) -> getValue
org.webrtc.LibH264Decoder -> org.webrtc.LibH264Decoder:
    7:7:void <init>() -> <init>
    10:10:long createNativeVideoDecoder() -> createNativeVideoDecoder
    long nativeCreateDecoder() -> nativeCreateDecoder
    boolean nativeIsSupported() -> nativeIsSupported
    7:7:java.lang.String getImplementationName() -> getImplementationName
    7:7:boolean getPrefersLateDecoding() -> getPrefersLateDecoding
    7:7:org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo) -> decode
    7:7:org.webrtc.VideoCodecStatus release() -> release
    7:7:org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback) -> initDecode
org.webrtc.LibH264Encoder -> org.webrtc.LibH264Encoder:
    7:7:void <init>() -> <init>
    10:10:long createNativeVideoEncoder() -> createNativeVideoEncoder
    long nativeCreateEncoder() -> nativeCreateEncoder
    17:17:boolean isHardwareEncoder() -> isHardwareEncoder
    boolean nativeIsSupported() -> nativeIsSupported
    7:7:java.lang.String getImplementationName() -> getImplementationName
    7:7:org.webrtc.VideoEncoder$ScalingSettings getScalingSettings() -> getScalingSettings
    7:7:org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int) -> setRateAllocation
    7:7:org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo) -> encode
    7:7:org.webrtc.VideoCodecStatus release() -> release
    7:7:org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback) -> initEncode
org.webrtc.LibvpxVp8Decoder -> org.webrtc.LibvpxVp8Decoder:
    13:13:void <init>() -> <init>
    16:16:long createNativeVideoDecoder() -> createNativeVideoDecoder
    long nativeCreateDecoder() -> nativeCreateDecoder
    13:13:java.lang.String getImplementationName() -> getImplementationName
    13:13:boolean getPrefersLateDecoding() -> getPrefersLateDecoding
    13:13:org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo) -> decode
    13:13:org.webrtc.VideoCodecStatus release() -> release
    13:13:org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback) -> initDecode
org.webrtc.LibvpxVp8Encoder -> org.webrtc.LibvpxVp8Encoder:
    13:13:void <init>() -> <init>
    16:16:long createNativeVideoEncoder() -> createNativeVideoEncoder
    long nativeCreateEncoder() -> nativeCreateEncoder
    23:23:boolean isHardwareEncoder() -> isHardwareEncoder
    13:13:java.lang.String getImplementationName() -> getImplementationName
    13:13:org.webrtc.VideoEncoder$ScalingSettings getScalingSettings() -> getScalingSettings
    13:13:org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int) -> setRateAllocation
    13:13:org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo) -> encode
    13:13:org.webrtc.VideoCodecStatus release() -> release
    13:13:org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback) -> initEncode
org.webrtc.LibvpxVp9Decoder -> org.webrtc.LibvpxVp9Decoder:
    13:13:void <init>() -> <init>
    16:16:long createNativeVideoDecoder() -> createNativeVideoDecoder
    long nativeCreateDecoder() -> nativeCreateDecoder
    boolean nativeIsSupported() -> nativeIsSupported
    13:13:java.lang.String getImplementationName() -> getImplementationName
    13:13:boolean getPrefersLateDecoding() -> getPrefersLateDecoding
    13:13:org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo) -> decode
    13:13:org.webrtc.VideoCodecStatus release() -> release
    13:13:org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback) -> initDecode
org.webrtc.LibvpxVp9Encoder -> org.webrtc.LibvpxVp9Encoder:
    13:13:void <init>() -> <init>
    16:16:long createNativeVideoEncoder() -> createNativeVideoEncoder
    long nativeCreateEncoder() -> nativeCreateEncoder
    23:23:boolean isHardwareEncoder() -> isHardwareEncoder
    boolean nativeIsSupported() -> nativeIsSupported
    13:13:java.lang.String getImplementationName() -> getImplementationName
    13:13:org.webrtc.VideoEncoder$ScalingSettings getScalingSettings() -> getScalingSettings
    13:13:org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int) -> setRateAllocation
    13:13:org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo) -> encode
    13:13:org.webrtc.VideoCodecStatus release() -> release
    13:13:org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback) -> initEncode
org.webrtc.Loggable -> org.webrtc.Loggable:
    void onLogMessage(java.lang.String,org.webrtc.Logging$Severity,java.lang.String) -> onLogMessage
org.webrtc.Logging -> org.webrtc.Logging:
    java.util.logging.Logger fallbackLogger -> fallbackLogger
    boolean loggingEnabled -> loggingEnabled
    org.webrtc.Loggable loggable -> loggable
    org.webrtc.Logging$Severity loggableSeverity -> loggableSeverity
    42:42:void <init>() -> <init>
    49:51:java.util.logging.Logger createFallbackLogger() -> createFallbackLogger
    55:59:void injectLoggable(org.webrtc.Loggable,org.webrtc.Logging$Severity) -> injectLoggable
    62:63:void deleteInjectedLoggable() -> deleteInjectedLoggable
    94:95:void enableLogThreads() -> enableLogThreads
    98:99:void enableLogTimeStamps() -> enableLogTimeStamps
    103:103:void enableTracing(java.lang.String,java.util.EnumSet) -> enableTracing
    111:118:void enableLogToDebugOutput(org.webrtc.Logging$Severity) -> enableLogToDebugOutput
    121:156:void log(org.webrtc.Logging$Severity,java.lang.String,java.lang.String) -> log
    159:160:void i(java.lang.String,java.lang.String) -> i
    163:164:void d(java.lang.String,java.lang.String) -> d
    167:168:void e(java.lang.String,java.lang.String) -> e
    171:172:void w(java.lang.String,java.lang.String) -> w
    175:178:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    181:184:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    187:188:void v(java.lang.String,java.lang.String) -> v
    191:198:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    void nativeEnableLogToDebugOutput(int) -> nativeEnableLogToDebugOutput
    void nativeEnableLogThreads() -> nativeEnableLogThreads
    void nativeEnableLogTimeStamps() -> nativeEnableLogTimeStamps
    void nativeLog(int,java.lang.String,java.lang.String) -> nativeLog
    43:43:void <clinit>() -> <clinit>
org.webrtc.Logging$1 -> org.webrtc.Logging$1:
    int[] $SwitchMap$org$webrtc$Logging$Severity -> $SwitchMap$org$webrtc$Logging$Severity
    141:141:void <clinit>() -> <clinit>
org.webrtc.Logging$Severity -> org.webrtc.Logging$Severity:
    org.webrtc.Logging$Severity LS_VERBOSE -> LS_VERBOSE
    org.webrtc.Logging$Severity LS_INFO -> LS_INFO
    org.webrtc.Logging$Severity LS_WARNING -> LS_WARNING
    org.webrtc.Logging$Severity LS_ERROR -> LS_ERROR
    org.webrtc.Logging$Severity LS_NONE -> LS_NONE
    org.webrtc.Logging$Severity[] $VALUES -> $VALUES
    91:91:org.webrtc.Logging$Severity[] values() -> values
    91:91:org.webrtc.Logging$Severity valueOf(java.lang.String) -> valueOf
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:void <clinit>() -> <clinit>
org.webrtc.Logging$TraceLevel -> org.webrtc.Logging$TraceLevel:
    org.webrtc.Logging$TraceLevel TRACE_NONE -> TRACE_NONE
    org.webrtc.Logging$TraceLevel TRACE_STATEINFO -> TRACE_STATEINFO
    org.webrtc.Logging$TraceLevel TRACE_WARNING -> TRACE_WARNING
    org.webrtc.Logging$TraceLevel TRACE_ERROR -> TRACE_ERROR
    org.webrtc.Logging$TraceLevel TRACE_CRITICAL -> TRACE_CRITICAL
    org.webrtc.Logging$TraceLevel TRACE_APICALL -> TRACE_APICALL
    org.webrtc.Logging$TraceLevel TRACE_DEFAULT -> TRACE_DEFAULT
    org.webrtc.Logging$TraceLevel TRACE_MODULECALL -> TRACE_MODULECALL
    org.webrtc.Logging$TraceLevel TRACE_MEMORY -> TRACE_MEMORY
    org.webrtc.Logging$TraceLevel TRACE_TIMER -> TRACE_TIMER
    org.webrtc.Logging$TraceLevel TRACE_STREAM -> TRACE_STREAM
    org.webrtc.Logging$TraceLevel TRACE_DEBUG -> TRACE_DEBUG
    org.webrtc.Logging$TraceLevel TRACE_INFO -> TRACE_INFO
    org.webrtc.Logging$TraceLevel TRACE_TERSEINFO -> TRACE_TERSEINFO
    org.webrtc.Logging$TraceLevel TRACE_ALL -> TRACE_ALL
    int level -> level
    org.webrtc.Logging$TraceLevel[] $VALUES -> $VALUES
    66:66:org.webrtc.Logging$TraceLevel[] values() -> values
    66:66:org.webrtc.Logging$TraceLevel valueOf(java.lang.String) -> valueOf
    85:87:void <init>(java.lang.String,int,int) -> <init>
    66:82:void <clinit>() -> <clinit>
org.webrtc.MediaCodecUtils -> org.webrtc.MediaCodecUtils:
    java.lang.String TAG -> TAG
    java.lang.String EXYNOS_PREFIX -> EXYNOS_PREFIX
    java.lang.String INTEL_PREFIX -> INTEL_PREFIX
    java.lang.String NVIDIA_PREFIX -> NVIDIA_PREFIX
    java.lang.String QCOM_PREFIX -> QCOM_PREFIX
    java.lang.String MTK_PREFIX -> MTK_PREFIX
    java.lang.String HISI_PREFIX -> HISI_PREFIX
    java.lang.String IMG_PREFIX -> IMG_PREFIX
    java.lang.String[] SOFTWARE_IMPLEMENTATION_PREFIXES -> SOFTWARE_IMPLEMENTATION_PREFIXES
    int COLOR_QCOM_FORMATYVU420PackedSemiPlanar32m4ka -> COLOR_QCOM_FORMATYVU420PackedSemiPlanar32m4ka
    int COLOR_QCOM_FORMATYVU420PackedSemiPlanar16m4ka -> COLOR_QCOM_FORMATYVU420PackedSemiPlanar16m4ka
    int COLOR_QCOM_FORMATYVU420PackedSemiPlanar64x32Tile2m8ka -> COLOR_QCOM_FORMATYVU420PackedSemiPlanar64x32Tile2m8ka
    int COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m -> COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m
    int[] DECODER_COLOR_FORMATS -> DECODER_COLOR_FORMATS
    int[] ENCODER_COLOR_FORMATS -> ENCODER_COLOR_FORMATS
    int[] TEXTURE_COLOR_FORMATS -> TEXTURE_COLOR_FORMATS
    65:68:int[] getTextureColorFormats() -> getTextureColorFormats
    74:81:java.lang.Integer selectColorFormat(int[],android.media.MediaCodecInfo$CodecCapabilities) -> selectColorFormat
    85:90:boolean codecSupportsType(android.media.MediaCodecInfo,org.webrtc.VideoCodecType) -> codecSupportsType
    94:101:java.util.Map getCodecProperties(org.webrtc.VideoCodecType,boolean) -> getCodecProperties
    105:107:void <init>() -> <init>
    36:62:void <clinit>() -> <clinit>
org.webrtc.MediaCodecUtils$1 -> org.webrtc.MediaCodecUtils$1:
    int[] $SwitchMap$org$webrtc$VideoCodecType -> $SwitchMap$org$webrtc$VideoCodecType
    94:94:void <clinit>() -> <clinit>
org.webrtc.MediaCodecVideoDecoder -> org.webrtc.MediaCodecVideoDecoder:
    java.lang.String TAG -> TAG
    long MAX_DECODE_TIME_MS -> MAX_DECODE_TIME_MS
    java.lang.String FORMAT_KEY_STRIDE -> FORMAT_KEY_STRIDE
    java.lang.String FORMAT_KEY_SLICE_HEIGHT -> FORMAT_KEY_SLICE_HEIGHT
    java.lang.String FORMAT_KEY_CROP_LEFT -> FORMAT_KEY_CROP_LEFT
    java.lang.String FORMAT_KEY_CROP_RIGHT -> FORMAT_KEY_CROP_RIGHT
    java.lang.String FORMAT_KEY_CROP_TOP -> FORMAT_KEY_CROP_TOP
    java.lang.String FORMAT_KEY_CROP_BOTTOM -> FORMAT_KEY_CROP_BOTTOM
    int DEQUEUE_INPUT_TIMEOUT -> DEQUEUE_INPUT_TIMEOUT
    int MEDIA_CODEC_RELEASE_TIMEOUT_MS -> MEDIA_CODEC_RELEASE_TIMEOUT_MS
    int MAX_QUEUED_OUTPUTBUFFERS -> MAX_QUEUED_OUTPUTBUFFERS
    org.webrtc.MediaCodecVideoDecoder runningInstance -> runningInstance
    org.webrtc.MediaCodecVideoDecoder$MediaCodecVideoDecoderErrorCallback errorCallback -> errorCallback
    int codecErrors -> codecErrors
    java.util.Set hwDecoderDisabledTypes -> hwDecoderDisabledTypes
    org.webrtc.EglBase eglBase -> eglBase
    java.lang.Thread mediaCodecThread -> mediaCodecThread
    android.media.MediaCodec mediaCodec -> mediaCodec
    java.nio.ByteBuffer[] inputBuffers -> inputBuffers
    java.nio.ByteBuffer[] outputBuffers -> outputBuffers
    java.lang.String VP8_MIME_TYPE -> VP8_MIME_TYPE
    java.lang.String VP9_MIME_TYPE -> VP9_MIME_TYPE
    java.lang.String H264_MIME_TYPE -> H264_MIME_TYPE
    java.lang.String[] supportedVp9HwCodecPrefixes -> supportedVp9HwCodecPrefixes
    java.lang.String supportedQcomH264HighProfileHwCodecPrefix -> supportedQcomH264HighProfileHwCodecPrefix
    java.lang.String supportedExynosH264HighProfileHwCodecPrefix -> supportedExynosH264HighProfileHwCodecPrefix
    java.lang.String supportedMediaTekH264HighProfileHwCodecPrefix -> supportedMediaTekH264HighProfileHwCodecPrefix
    int COLOR_QCOM_FORMATYVU420PackedSemiPlanar32m4ka -> COLOR_QCOM_FORMATYVU420PackedSemiPlanar32m4ka
    int COLOR_QCOM_FORMATYVU420PackedSemiPlanar16m4ka -> COLOR_QCOM_FORMATYVU420PackedSemiPlanar16m4ka
    int COLOR_QCOM_FORMATYVU420PackedSemiPlanar64x32Tile2m8ka -> COLOR_QCOM_FORMATYVU420PackedSemiPlanar64x32Tile2m8ka
    int COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m -> COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m
    java.util.List supportedColorList -> supportedColorList
    int colorFormat -> colorFormat
    int width -> width
    int height -> height
    int stride -> stride
    int sliceHeight -> sliceHeight
    boolean hasDecodedFirstFrame -> hasDecodedFirstFrame
    java.util.Queue decodeStartTimeMs -> decodeStartTimeMs
    org.webrtc.MediaCodecVideoDecoder$TextureListener textureListener -> textureListener
    int droppedFrames -> droppedFrames
    android.view.Surface surface -> surface
    java.util.Queue dequeuedSurfaceOutputBuffers -> dequeuedSurfaceOutputBuffers
    54:54:org.webrtc.VideoDecoderFactory createFactory() -> createFactory
    175:184:java.lang.String[] supportedVp8HwCodecPrefixes() -> supportedVp8HwCodecPrefixes
    190:198:java.lang.String[] supportedH264HwCodecPrefixes() -> supportedH264HwCodecPrefixes
    244:249:void setEglContext(org.webrtc.EglBase$Context) -> setEglContext
    253:257:void disposeEglContext() -> disposeEglContext
    260:260:boolean useSurface() -> useSurface
    264:266:void setErrorCallback(org.webrtc.MediaCodecVideoDecoder$MediaCodecVideoDecoderErrorCallback) -> setErrorCallback
    271:273:void disableVp8HwCodec() -> disableVp8HwCodec
    276:278:void disableVp9HwCodec() -> disableVp9HwCodec
    281:283:void disableH264HwCodec() -> disableH264HwCodec
    287:288:boolean isVp8HwSupported() -> isVp8HwSupported
    292:293:boolean isVp9HwSupported() -> isVp9HwSupported
    297:298:boolean isH264HwSupported() -> isH264HwSupported
    302:324:boolean isH264HighProfileHwSupported() -> isH264HighProfileHwSupported
    328:337:void printStackTrace() -> printStackTrace
    351:412:org.webrtc.MediaCodecVideoDecoder$DecoderProperties findDecoder(java.lang.String,java.lang.String[]) -> findDecoder
    226:416:void <init>() -> <init>
    419:423:void checkOnMediaCodecThread() -> checkOnMediaCodecThread
    427:498:boolean initDecode(org.webrtc.MediaCodecVideoDecoder$VideoCodecType,int,int) -> initDecode
    506:522:void reset(int,int) -> reset
    526:567:void release() -> release
    573:578:int dequeueInputBuffer() -> dequeueInputBuffer
    585:595:boolean queueInputBuffer(int,int,long,long,long) -> queueInputBuffer
    829:906:org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer dequeueOutputBuffer(int) -> dequeueOutputBuffer
    916:959:org.webrtc.MediaCodecVideoDecoder$DecodedTextureBuffer dequeueTextureBuffer(int) -> dequeueTextureBuffer
    963:970:void MaybeRenderDecodedTextureBuffer() -> MaybeRenderDecodedTextureBuffer
    980:985:void returnDecodedOutputBuffer(int) -> returnDecodedOutputBuffer
    989:989:java.nio.ByteBuffer[] getInputBuffers() -> getInputBuffers
    994:994:java.nio.ByteBuffer[] getOutputBuffers() -> getOutputBuffers
    999:999:int getColorFormat() -> getColorFormat
    1004:1004:int getWidth() -> getWidth
    1009:1009:int getHeight() -> getHeight
    1014:1014:int getStride() -> getStride
    1019:1019:int getSliceHeight() -> getSliceHeight
    long nativeCreateDecoder(java.lang.String,boolean) -> nativeCreateDecoder
    41:41:long access$000(java.lang.String,boolean) -> access$000
    41:41:android.media.MediaCodec access$100(org.webrtc.MediaCodecVideoDecoder) -> access$100
    163:218:void <clinit>() -> <clinit>
org.webrtc.MediaCodecVideoDecoder$1 -> org.webrtc.MediaCodecVideoDecoder$1:
    java.util.concurrent.CountDownLatch val$releaseDone -> val$releaseDone
    org.webrtc.MediaCodecVideoDecoder this$0 -> this$0
    533:533:void <init>(org.webrtc.MediaCodecVideoDecoder,java.util.concurrent.CountDownLatch) -> <init>
    537:545:void run() -> run
org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer -> org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer:
    int index -> index
    int offset -> offset
    int size -> size
    long presentationTimeStampMs -> presentationTimeStampMs
    long timeStampMs -> timeStampMs
    long ntpTimeStampMs -> ntpTimeStampMs
    long decodeTimeMs -> decodeTimeMs
    long endDecodeTimeMs -> endDecodeTimeMs
    616:625:void <init>(int,int,int,long,long,long,long,long) -> <init>
    643:643:int getIndex() -> getIndex
    648:648:int getOffset() -> getOffset
    653:653:int getSize() -> getSize
    658:658:long getPresentationTimestampMs() -> getPresentationTimestampMs
    663:663:long getTimestampMs() -> getTimestampMs
    668:668:long getNtpTimestampMs() -> getNtpTimestampMs
    673:673:long getDecodeTimeMs() -> getDecodeTimeMs
    614:614:long access$200(org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer) -> access$200
    614:614:long access$300(org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer) -> access$300
    614:614:long access$400(org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer) -> access$400
    614:614:long access$500(org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer) -> access$500
    614:614:long access$600(org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer) -> access$600
    614:614:int access$1000(org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer) -> access$1000
org.webrtc.MediaCodecVideoDecoder$DecodedTextureBuffer -> org.webrtc.MediaCodecVideoDecoder$DecodedTextureBuffer:
    org.webrtc.VideoFrame$Buffer videoFrameBuffer -> videoFrameBuffer
    long presentationTimeStampMs -> presentationTimeStampMs
    long timeStampMs -> timeStampMs
    long ntpTimeStampMs -> ntpTimeStampMs
    long decodeTimeMs -> decodeTimeMs
    long frameDelayMs -> frameDelayMs
    697:704:void <init>(org.webrtc.VideoFrame$Buffer,long,long,long,long,long) -> <init>
    708:708:org.webrtc.VideoFrame$Buffer getVideoFrameBuffer() -> getVideoFrameBuffer
    713:713:long getPresentationTimestampMs() -> getPresentationTimestampMs
    718:718:long getTimeStampMs() -> getTimeStampMs
    723:723:long getNtpTimestampMs() -> getNtpTimestampMs
    728:728:long getDecodeTimeMs() -> getDecodeTimeMs
    733:733:long getFrameDelayMs() -> getFrameDelayMs
org.webrtc.MediaCodecVideoDecoder$DecoderProperties -> org.webrtc.MediaCodecVideoDecoder$DecoderProperties:
    java.lang.String codecName -> codecName
    int colorFormat -> colorFormat
    341:344:void <init>(java.lang.String,int) -> <init>
org.webrtc.MediaCodecVideoDecoder$HwDecoderFactory -> org.webrtc.MediaCodecVideoDecoder$HwDecoderFactory:
    org.webrtc.VideoCodecInfo[] supportedHardwareCodecs -> supportedHardwareCodecs
    58:104:void <init>() -> <init>
    60:65:boolean isSameCodec(org.webrtc.VideoCodecInfo,org.webrtc.VideoCodecInfo) -> isSameCodec
    70:75:boolean isCodecSupported(org.webrtc.VideoCodecInfo[],org.webrtc.VideoCodecInfo) -> isCodecSupported
    79:101:org.webrtc.VideoCodecInfo[] getSupportedHardwareCodecs() -> getSupportedHardwareCodecs
    108:108:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    114:119:org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo) -> createDecoder
org.webrtc.MediaCodecVideoDecoder$HwDecoderFactory$1 -> org.webrtc.MediaCodecVideoDecoder$HwDecoderFactory$1:
    org.webrtc.VideoCodecInfo val$codec -> val$codec
    org.webrtc.MediaCodecVideoDecoder$HwDecoderFactory this$0 -> this$0
    119:119:void <init>(org.webrtc.MediaCodecVideoDecoder$HwDecoderFactory,org.webrtc.VideoCodecInfo) -> <init>
    122:122:long createNativeVideoDecoder() -> createNativeVideoDecoder
org.webrtc.MediaCodecVideoDecoder$MediaCodecVideoDecoderErrorCallback -> org.webrtc.MediaCodecVideoDecoder$MediaCodecVideoDecoderErrorCallback:
    void onMediaCodecVideoDecoderCriticalError(int) -> onMediaCodecVideoDecoderCriticalError
org.webrtc.MediaCodecVideoDecoder$TextureListener -> org.webrtc.MediaCodecVideoDecoder$TextureListener:
    org.webrtc.SurfaceTextureHelper surfaceTextureHelper -> surfaceTextureHelper
    java.lang.Object newFrameLock -> newFrameLock
    org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer bufferToRender -> bufferToRender
    org.webrtc.MediaCodecVideoDecoder$DecodedTextureBuffer renderedBuffer -> renderedBuffer
    org.webrtc.MediaCodecVideoDecoder this$0 -> this$0
    741:750:void <init>(org.webrtc.MediaCodecVideoDecoder,org.webrtc.SurfaceTextureHelper) -> <init>
    753:758:void addBufferToRender(org.webrtc.MediaCodecVideoDecoder$DecodedOutputBuffer) -> addBufferToRender
    761:763:boolean isWaitingForTexture() -> isWaitingForTexture
    767:768:void setSize(int,int) -> setSize
    773:787:void onFrame(org.webrtc.VideoFrame) -> onFrame
    793:805:org.webrtc.MediaCodecVideoDecoder$DecodedTextureBuffer dequeueTextureBuffer(int) -> dequeueTextureBuffer
    812:820:void release() -> release
org.webrtc.MediaCodecVideoDecoder$TimeStamps -> org.webrtc.MediaCodecVideoDecoder$TimeStamps:
    long decodeStartTimeMs -> decodeStartTimeMs
    long timeStampMs -> timeStampMs
    long ntpTimeStampMs -> ntpTimeStampMs
    600:604:void <init>(long,long,long) -> <init>
    599:599:long access$700(org.webrtc.MediaCodecVideoDecoder$TimeStamps) -> access$700
    599:599:long access$800(org.webrtc.MediaCodecVideoDecoder$TimeStamps) -> access$800
    599:599:long access$900(org.webrtc.MediaCodecVideoDecoder$TimeStamps) -> access$900
org.webrtc.MediaCodecVideoDecoder$VideoCodecType -> org.webrtc.MediaCodecVideoDecoder$VideoCodecType:
    org.webrtc.MediaCodecVideoDecoder$VideoCodecType VIDEO_CODEC_UNKNOWN -> VIDEO_CODEC_UNKNOWN
    org.webrtc.MediaCodecVideoDecoder$VideoCodecType VIDEO_CODEC_VP8 -> VIDEO_CODEC_VP8
    org.webrtc.MediaCodecVideoDecoder$VideoCodecType VIDEO_CODEC_VP9 -> VIDEO_CODEC_VP9
    org.webrtc.MediaCodecVideoDecoder$VideoCodecType VIDEO_CODEC_H264 -> VIDEO_CODEC_H264
    org.webrtc.MediaCodecVideoDecoder$VideoCodecType[] $VALUES -> $VALUES
    139:139:org.webrtc.MediaCodecVideoDecoder$VideoCodecType[] values() -> values
    139:139:org.webrtc.MediaCodecVideoDecoder$VideoCodecType valueOf(java.lang.String) -> valueOf
    139:139:void <init>(java.lang.String,int) -> <init>
    147:147:org.webrtc.MediaCodecVideoDecoder$VideoCodecType fromNativeIndex(int) -> fromNativeIndex
    139:143:void <clinit>() -> <clinit>
org.webrtc.MediaCodecVideoDecoderFactory -> org.webrtc.MediaCodecVideoDecoderFactory:
    java.lang.String TAG -> TAG
    org.webrtc.EglBase$Context sharedContext -> sharedContext
    org.webrtc.Predicate codecAllowedPredicate -> codecAllowedPredicate
    42:45:void <init>(org.webrtc.EglBase$Context,org.webrtc.Predicate) -> <init>
    50:59:org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo) -> createDecoder
    65:83:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    88:109:android.media.MediaCodecInfo findCodecForType(org.webrtc.VideoCodecType) -> findCodecForType
    114:124:boolean isSupportedCodec(android.media.MediaCodecInfo,org.webrtc.VideoCodecType) -> isSupportedCodec
    128:131:boolean isCodecAllowed(android.media.MediaCodecInfo) -> isCodecAllowed
    135:144:boolean isH264HighProfileSupported(android.media.MediaCodecInfo) -> isH264HighProfileSupported
org.webrtc.MediaCodecVideoEncoder -> org.webrtc.MediaCodecVideoEncoder:
    java.lang.String TAG -> TAG
    int MEDIA_CODEC_RELEASE_TIMEOUT_MS -> MEDIA_CODEC_RELEASE_TIMEOUT_MS
    int DEQUEUE_TIMEOUT -> DEQUEUE_TIMEOUT
    int BITRATE_ADJUSTMENT_FPS -> BITRATE_ADJUSTMENT_FPS
    int MAXIMUM_INITIAL_FPS -> MAXIMUM_INITIAL_FPS
    double BITRATE_CORRECTION_SEC -> BITRATE_CORRECTION_SEC
    double BITRATE_CORRECTION_MAX_SCALE -> BITRATE_CORRECTION_MAX_SCALE
    int BITRATE_CORRECTION_STEPS -> BITRATE_CORRECTION_STEPS
    long QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_L_MS -> QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_L_MS
    long QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_M_MS -> QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_M_MS
    long QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_N_MS -> QCOM_VP8_KEY_FRAME_INTERVAL_ANDROID_N_MS
    org.webrtc.MediaCodecVideoEncoder runningInstance -> runningInstance
    org.webrtc.MediaCodecVideoEncoder$MediaCodecVideoEncoderErrorCallback errorCallback -> errorCallback
    int codecErrors -> codecErrors
    java.util.Set hwEncoderDisabledTypes -> hwEncoderDisabledTypes
    org.webrtc.EglBase staticEglBase -> staticEglBase
    java.lang.Thread mediaCodecThread -> mediaCodecThread
    android.media.MediaCodec mediaCodec -> mediaCodec
    java.nio.ByteBuffer[] outputBuffers -> outputBuffers
    org.webrtc.EglBase14 eglBase -> eglBase
    int profile -> profile
    int width -> width
    int height -> height
    android.view.Surface inputSurface -> inputSurface
    org.webrtc.GlRectDrawer drawer -> drawer
    java.lang.String VP8_MIME_TYPE -> VP8_MIME_TYPE
    java.lang.String VP9_MIME_TYPE -> VP9_MIME_TYPE
    java.lang.String H264_MIME_TYPE -> H264_MIME_TYPE
    int VIDEO_AVCProfileHigh -> VIDEO_AVCProfileHigh
    int VIDEO_AVCLevel3 -> VIDEO_AVCLevel3
    boolean encodeQualityMode -> encodeQualityMode
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties qcomVp8HwProperties -> qcomVp8HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties exynosVp8HwProperties -> exynosVp8HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties intelVp8HwProperties -> intelVp8HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties qcomVp9HwProperties -> qcomVp9HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties exynosVp9HwProperties -> exynosVp9HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties[] vp9HwList -> vp9HwList
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties qcomH264HwProperties -> qcomH264HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties exynosH264HwProperties -> exynosH264HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties mediatekH264HwProperties -> mediatekH264HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties hisiH264HwProperties -> hisiH264HwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties exynosH264HighProfileHwProperties -> exynosH264HighProfileHwProperties
    org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties[] h264HighProfileHwList -> h264HighProfileHwList
    java.lang.String[] H264_HW_EXCEPTION_MODELS -> H264_HW_EXCEPTION_MODELS
    int VIDEO_ControlRateQuality -> VIDEO_ControlRateQuality
    int VIDEO_ControlRateConstant -> VIDEO_ControlRateConstant
    int COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m -> COLOR_QCOM_FORMATYUV420PackedSemiPlanar32m
    int[] supportedColorList -> supportedColorList
    int[] supportedSurfaceColorList -> supportedSurfaceColorList
    org.webrtc.MediaCodecVideoEncoder$VideoCodecType type -> type
    int colorFormat -> colorFormat
    org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType bitrateAdjustmentType -> bitrateAdjustmentType
    double bitrateAccumulator -> bitrateAccumulator
    double bitrateAccumulatorMax -> bitrateAccumulatorMax
    double bitrateObservationTimeMs -> bitrateObservationTimeMs
    int bitrateAdjustmentScaleExp -> bitrateAdjustmentScaleExp
    int targetBitrateBps -> targetBitrateBps
    int targetFps -> targetFps
    long forcedKeyFrameMs -> forcedKeyFrameMs
    long lastKeyFrameMs -> lastKeyFrameMs
    java.nio.ByteBuffer configData -> configData
    56:56:org.webrtc.VideoEncoderFactory createFactory() -> createFactory
    247:252:void setEglContext(org.webrtc.EglBase$Context) -> setEglContext
    256:260:void disposeEglContext() -> disposeEglContext
    264:264:org.webrtc.EglBase$Context getEglContext() -> getEglContext
    275:281:org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties[] vp8HwList() -> vp8HwList
    302:307:org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties[] h264HwList() -> h264HwList
    357:358:void setEncodeQualityMode() -> setEncodeQualityMode
    368:370:void setErrorCallback(org.webrtc.MediaCodecVideoEncoder$MediaCodecVideoEncoderErrorCallback) -> setErrorCallback
    375:377:void disableVp8HwCodec() -> disableVp8HwCodec
    380:382:void disableVp9HwCodec() -> disableVp9HwCodec
    385:387:void disableH264HwCodec() -> disableH264HwCodec
    391:392:boolean isVp8HwSupported() -> isVp8HwSupported
    396:399:org.webrtc.MediaCodecVideoEncoder$EncoderProperties vp8HwEncoderProperties() -> vp8HwEncoderProperties
    404:405:boolean isVp9HwSupported() -> isVp9HwSupported
    409:410:boolean isH264HwSupported() -> isH264HwSupported
    414:415:boolean isH264HighProfileHwSupported() -> isH264HighProfileHwSupported
    419:420:boolean isVp8HwSupportedUsingTextures() -> isVp8HwSupportedUsingTextures
    424:425:boolean isVp9HwSupportedUsingTextures() -> isVp9HwSupportedUsingTextures
    429:430:boolean isH264HwSupportedUsingTextures() -> isH264HwSupportedUsingTextures
    450:532:org.webrtc.MediaCodecVideoEncoder$EncoderProperties findHwEncoder(java.lang.String,org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties[],int[]) -> findHwEncoder
    340:536:void <init>() -> <init>
    539:543:void checkOnMediaCodecThread() -> checkOnMediaCodecThread
    546:555:void printStackTrace() -> printStackTrace
    561:563:android.media.MediaCodec createByCodecName(java.lang.String) -> createByCodecName
    570:690:boolean initEncode(org.webrtc.MediaCodecVideoEncoder$VideoCodecType,int,int,int,int,int,boolean) -> initEncode
    695:697:java.nio.ByteBuffer[] getInputBuffers() -> getInputBuffers
    701:725:void checkKeyFrameRequired(boolean,long) -> checkKeyFrameRequired
    730:737:boolean encodeBuffer(boolean,int,int,long) -> encodeBuffer
    747:790:boolean encodeFrame(long,boolean,org.webrtc.VideoFrame,int,long) -> encodeFrame
    796:874:void release() -> release
    878:913:boolean setRates(int,int) -> setRates
    921:926:int dequeueInputBuffer() -> dequeueInputBuffer
    971:1035:org.webrtc.MediaCodecVideoEncoder$OutputBufferInfo dequeueOutputBuffer() -> dequeueOutputBuffer
    1040:1040:double getBitrateScale(int) -> getBitrateScale
    1045:1088:void reportEncodedFrame(int) -> reportEncodedFrame
    1094:1100:boolean releaseOutputBuffer(int) -> releaseOutputBuffer
    1106:1106:int getColorFormat() -> getColorFormat
    1111:1111:boolean isTextureBuffer(org.webrtc.VideoFrame$Buffer) -> isTextureBuffer
    void nativeFillInputBuffer(long,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int) -> nativeFillInputBuffer
    long nativeCreateEncoder(org.webrtc.VideoCodecInfo,boolean) -> nativeCreateEncoder
    43:43:org.webrtc.EglBase access$000() -> access$000
    43:43:long access$100(org.webrtc.VideoCodecInfo,boolean) -> access$100
    43:43:android.media.MediaCodec access$200(org.webrtc.MediaCodecVideoEncoder) -> access$200
    171:335:void <clinit>() -> <clinit>
org.webrtc.MediaCodecVideoEncoder$1 -> org.webrtc.MediaCodecVideoEncoder$1:
    org.webrtc.MediaCodecVideoEncoder$1CaughtException val$caughtException -> val$caughtException
    java.util.concurrent.CountDownLatch val$releaseDone -> val$releaseDone
    org.webrtc.MediaCodecVideoEncoder this$0 -> this$0
    810:810:void <init>(org.webrtc.MediaCodecVideoEncoder,org.webrtc.MediaCodecVideoEncoder$1CaughtException,java.util.concurrent.CountDownLatch) -> <init>
    813:828:void run() -> run
org.webrtc.MediaCodecVideoEncoder$1CaughtException -> org.webrtc.MediaCodecVideoEncoder$1CaughtException:
    java.lang.Exception e -> e
    org.webrtc.MediaCodecVideoEncoder this$0 -> this$0
    799:799:void <init>(org.webrtc.MediaCodecVideoEncoder) -> <init>
org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType -> org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType:
    org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType NO_ADJUSTMENT -> NO_ADJUSTMENT
    org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType FRAMERATE_ADJUSTMENT -> FRAMERATE_ADJUSTMENT
    org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType DYNAMIC_ADJUSTMENT -> DYNAMIC_ADJUSTMENT
    org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType[] $VALUES -> $VALUES
    193:193:org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType[] values() -> values
    193:193:org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType valueOf(java.lang.String) -> valueOf
    193:193:void <init>(java.lang.String,int) -> <init>
    193:202:void <clinit>() -> <clinit>
org.webrtc.MediaCodecVideoEncoder$EncoderProperties -> org.webrtc.MediaCodecVideoEncoder$EncoderProperties:
    java.lang.String codecName -> codecName
    int colorFormat -> colorFormat
    org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType bitrateAdjustmentType -> bitrateAdjustmentType
    436:440:void <init>(java.lang.String,int,org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType) -> <init>
org.webrtc.MediaCodecVideoEncoder$H264Profile -> org.webrtc.MediaCodecVideoEncoder$H264Profile:
    org.webrtc.MediaCodecVideoEncoder$H264Profile CONSTRAINED_BASELINE -> CONSTRAINED_BASELINE
    org.webrtc.MediaCodecVideoEncoder$H264Profile BASELINE -> BASELINE
    org.webrtc.MediaCodecVideoEncoder$H264Profile MAIN -> MAIN
    org.webrtc.MediaCodecVideoEncoder$H264Profile CONSTRAINED_HIGH -> CONSTRAINED_HIGH
    org.webrtc.MediaCodecVideoEncoder$H264Profile HIGH -> HIGH
    int value -> value
    org.webrtc.MediaCodecVideoEncoder$H264Profile[] $VALUES -> $VALUES
    206:206:org.webrtc.MediaCodecVideoEncoder$H264Profile[] values() -> values
    206:206:org.webrtc.MediaCodecVideoEncoder$H264Profile valueOf(java.lang.String) -> valueOf
    215:217:void <init>(java.lang.String,int,int) -> <init>
    220:220:int getValue() -> getValue
    206:211:void <clinit>() -> <clinit>
org.webrtc.MediaCodecVideoEncoder$HwEncoderFactory -> org.webrtc.MediaCodecVideoEncoder$HwEncoderFactory:
    org.webrtc.VideoCodecInfo[] supportedHardwareCodecs -> supportedHardwareCodecs
    60:108:void <init>() -> <init>
    62:67:boolean isSameCodec(org.webrtc.VideoCodecInfo,org.webrtc.VideoCodecInfo) -> isSameCodec
    72:77:boolean isCodecSupported(org.webrtc.VideoCodecInfo[],org.webrtc.VideoCodecInfo) -> isCodecSupported
    81:105:org.webrtc.VideoCodecInfo[] getSupportedHardwareCodecs() -> getSupportedHardwareCodecs
    112:112:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    118:123:org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo) -> createEncoder
org.webrtc.MediaCodecVideoEncoder$HwEncoderFactory$1 -> org.webrtc.MediaCodecVideoEncoder$HwEncoderFactory$1:
    org.webrtc.VideoCodecInfo val$info -> val$info
    org.webrtc.MediaCodecVideoEncoder$HwEncoderFactory this$0 -> this$0
    123:123:void <init>(org.webrtc.MediaCodecVideoEncoder$HwEncoderFactory,org.webrtc.VideoCodecInfo) -> <init>
    126:127:long createNativeVideoEncoder() -> createNativeVideoEncoder
    132:132:boolean isHardwareEncoder() -> isHardwareEncoder
org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties -> org.webrtc.MediaCodecVideoEncoder$MediaCodecProperties:
    java.lang.String codecPrefix -> codecPrefix
    int minSdk -> minSdk
    org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType bitrateAdjustmentType -> bitrateAdjustmentType
    235:239:void <init>(java.lang.String,int,org.webrtc.MediaCodecVideoEncoder$BitrateAdjustmentType) -> <init>
org.webrtc.MediaCodecVideoEncoder$MediaCodecVideoEncoderErrorCallback -> org.webrtc.MediaCodecVideoEncoder$MediaCodecVideoEncoderErrorCallback:
    void onMediaCodecVideoEncoderCriticalError(int) -> onMediaCodecVideoEncoderCriticalError
org.webrtc.MediaCodecVideoEncoder$OutputBufferInfo -> org.webrtc.MediaCodecVideoEncoder$OutputBufferInfo:
    int index -> index
    java.nio.ByteBuffer buffer -> buffer
    boolean isKeyFrame -> isKeyFrame
    long presentationTimestampUs -> presentationTimestampUs
    933:938:void <init>(int,java.nio.ByteBuffer,boolean,long) -> <init>
    947:947:int getIndex() -> getIndex
    952:952:java.nio.ByteBuffer getBuffer() -> getBuffer
    957:957:boolean isKeyFrame() -> isKeyFrame
    962:962:long getPresentationTimestampUs() -> getPresentationTimestampUs
org.webrtc.MediaCodecVideoEncoder$VideoCodecType -> org.webrtc.MediaCodecVideoEncoder$VideoCodecType:
    org.webrtc.MediaCodecVideoEncoder$VideoCodecType VIDEO_CODEC_UNKNOWN -> VIDEO_CODEC_UNKNOWN
    org.webrtc.MediaCodecVideoEncoder$VideoCodecType VIDEO_CODEC_VP8 -> VIDEO_CODEC_VP8
    org.webrtc.MediaCodecVideoEncoder$VideoCodecType VIDEO_CODEC_VP9 -> VIDEO_CODEC_VP9
    org.webrtc.MediaCodecVideoEncoder$VideoCodecType VIDEO_CODEC_H264 -> VIDEO_CODEC_H264
    org.webrtc.MediaCodecVideoEncoder$VideoCodecType[] $VALUES -> $VALUES
    139:139:org.webrtc.MediaCodecVideoEncoder$VideoCodecType[] values() -> values
    139:139:org.webrtc.MediaCodecVideoEncoder$VideoCodecType valueOf(java.lang.String) -> valueOf
    139:139:void <init>(java.lang.String,int) -> <init>
    147:147:org.webrtc.MediaCodecVideoEncoder$VideoCodecType fromNativeIndex(int) -> fromNativeIndex
    139:143:void <clinit>() -> <clinit>
org.webrtc.MediaCodecWrapper -> org.webrtc.MediaCodecWrapper:
    void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int) -> configure
    void start() -> start
    void flush() -> flush
    void stop() -> stop
    void release() -> release
    int dequeueInputBuffer(long) -> dequeueInputBuffer
    void queueInputBuffer(int,int,int,long,int) -> queueInputBuffer
    int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long) -> dequeueOutputBuffer
    void releaseOutputBuffer(int,boolean) -> releaseOutputBuffer
    android.media.MediaFormat getOutputFormat() -> getOutputFormat
    java.nio.ByteBuffer[] getInputBuffers() -> getInputBuffers
    java.nio.ByteBuffer[] getOutputBuffers() -> getOutputBuffers
    android.view.Surface createInputSurface() -> createInputSurface
    void setParameters(android.os.Bundle) -> setParameters
org.webrtc.MediaCodecWrapperFactory -> org.webrtc.MediaCodecWrapperFactory:
    org.webrtc.MediaCodecWrapper createByCodecName(java.lang.String) -> createByCodecName
org.webrtc.MediaCodecWrapperFactoryImpl -> org.webrtc.MediaCodecWrapperFactoryImpl:
    27:27:void <init>() -> <init>
    111:111:org.webrtc.MediaCodecWrapper createByCodecName(java.lang.String) -> createByCodecName
org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl -> org.webrtc.MediaCodecWrapperFactoryImpl$MediaCodecWrapperImpl:
    android.media.MediaCodec mediaCodec -> mediaCodec
    31:33:void <init>(android.media.MediaCodec) -> <init>
    37:38:void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int) -> configure
    42:43:void start() -> start
    47:48:void flush() -> flush
    52:53:void stop() -> stop
    57:58:void release() -> release
    62:62:int dequeueInputBuffer(long) -> dequeueInputBuffer
    68:69:void queueInputBuffer(int,int,int,long,int) -> queueInputBuffer
    73:73:int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long) -> dequeueOutputBuffer
    78:79:void releaseOutputBuffer(int,boolean) -> releaseOutputBuffer
    83:83:android.media.MediaFormat getOutputFormat() -> getOutputFormat
    88:88:java.nio.ByteBuffer[] getInputBuffers() -> getInputBuffers
    93:93:java.nio.ByteBuffer[] getOutputBuffers() -> getOutputBuffers
    99:99:android.view.Surface createInputSurface() -> createInputSurface
    105:106:void setParameters(android.os.Bundle) -> setParameters
org.webrtc.MediaConstraints -> org.webrtc.MediaConstraints:
    java.util.List mandatory -> mandatory
    java.util.List optional -> optional
    68:71:void <init>() -> <init>
    74:81:java.lang.String stringifyKeyValuePairList(java.util.List) -> stringifyKeyValuePairList
    86:87:java.lang.String toString() -> toString
    91:98:java.lang.String stringifyKeyValuePairListForJson(java.util.List) -> stringifyKeyValuePairListForJson
    102:103:java.lang.String toJsonString() -> toJsonString
    108:108:java.util.List getMandatory() -> getMandatory
    113:113:java.util.List getOptional() -> getOptional
org.webrtc.MediaConstraints$KeyValuePair -> org.webrtc.MediaConstraints$KeyValuePair:
    java.lang.String key -> key
    java.lang.String value -> value
    27:30:void <init>(java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String getKey() -> getKey
    39:39:java.lang.String getValue() -> getValue
    44:44:java.lang.String toString() -> toString
    49:56:boolean equals(java.lang.Object) -> equals
    61:61:int hashCode() -> hashCode
    23:23:java.lang.String access$000(org.webrtc.MediaConstraints$KeyValuePair) -> access$000
    23:23:java.lang.String access$100(org.webrtc.MediaConstraints$KeyValuePair) -> access$100
org.webrtc.MediaSource -> org.webrtc.MediaSource:
    long nativeSource -> nativeSource
    30:32:void <init>(long) -> <init>
    35:36:org.webrtc.MediaSource$State state() -> state
    40:43:void dispose() -> dispose
    47:48:long getNativeMediaSource() -> getNativeMediaSource
    52:55:void checkMediaSourceExists() -> checkMediaSourceExists
    org.webrtc.MediaSource$State nativeGetState(long) -> nativeGetState
org.webrtc.MediaSource$State -> org.webrtc.MediaSource$State:
    org.webrtc.MediaSource$State INITIALIZING -> INITIALIZING
    org.webrtc.MediaSource$State LIVE -> LIVE
    org.webrtc.MediaSource$State ENDED -> ENDED
    org.webrtc.MediaSource$State MUTED -> MUTED
    org.webrtc.MediaSource$State[] $VALUES -> $VALUES
    16:16:org.webrtc.MediaSource$State[] values() -> values
    16:16:org.webrtc.MediaSource$State valueOf(java.lang.String) -> valueOf
    16:16:void <init>(java.lang.String,int) -> <init>
    24:24:org.webrtc.MediaSource$State fromNativeIndex(int) -> fromNativeIndex
    16:20:void <clinit>() -> <clinit>
org.webrtc.MediaStream -> org.webrtc.MediaStream:
    java.lang.String TAG -> TAG
    java.util.List audioTracks -> audioTracks
    java.util.List videoTracks -> videoTracks
    java.util.List preservedVideoTracks -> preservedVideoTracks
    long nativeStream -> nativeStream
    21:29:void <init>(long) -> <init>
    32:37:boolean addTrack(org.webrtc.AudioTrack) -> addTrack
    41:46:boolean addTrack(org.webrtc.VideoTrack) -> addTrack
    53:58:boolean addPreservedTrack(org.webrtc.VideoTrack) -> addPreservedTrack
    62:64:boolean removeTrack(org.webrtc.AudioTrack) -> removeTrack
    68:71:boolean removeTrack(org.webrtc.VideoTrack) -> removeTrack
    76:94:void dispose() -> dispose
    97:98:java.lang.String getId() -> getId
    103:103:java.lang.String toString() -> toString
    108:109:void addNativeAudioTrack(long) -> addNativeAudioTrack
    113:114:void addNativeVideoTrack(long) -> addNativeVideoTrack
    118:119:void removeAudioTrack(long) -> removeAudioTrack
    123:124:void removeVideoTrack(long) -> removeVideoTrack
    128:129:long getNativeMediaStream() -> getNativeMediaStream
    133:136:void checkMediaStreamExists() -> checkMediaStreamExists
    140:150:void removeMediaStreamTrack(java.util.List,long) -> removeMediaStreamTrack
    boolean nativeAddAudioTrackToNativeStream(long,long) -> nativeAddAudioTrackToNativeStream
    boolean nativeAddVideoTrackToNativeStream(long,long) -> nativeAddVideoTrackToNativeStream
    boolean nativeRemoveAudioTrack(long,long) -> nativeRemoveAudioTrack
    boolean nativeRemoveVideoTrack(long,long) -> nativeRemoveVideoTrack
    java.lang.String nativeGetId(long) -> nativeGetId
org.webrtc.MediaStreamTrack -> org.webrtc.MediaStreamTrack:
    java.lang.String AUDIO_TRACK_KIND -> AUDIO_TRACK_KIND
    java.lang.String VIDEO_TRACK_KIND -> VIDEO_TRACK_KIND
    long nativeTrack -> nativeTrack
    60:69:org.webrtc.MediaStreamTrack createMediaStreamTrack(long) -> createMediaStreamTrack
    75:80:void <init>(long) -> <init>
    83:84:java.lang.String id() -> id
    88:89:java.lang.String kind() -> kind
    93:94:boolean enabled() -> enabled
    98:99:boolean setEnabled(boolean) -> setEnabled
    103:104:org.webrtc.MediaStreamTrack$State state() -> state
    108:111:void dispose() -> dispose
    114:115:long getNativeMediaStreamTrack() -> getNativeMediaStreamTrack
    119:122:void checkMediaStreamTrackExists() -> checkMediaStreamTrackExists
    java.lang.String nativeGetId(long) -> nativeGetId
    java.lang.String nativeGetKind(long) -> nativeGetKind
    boolean nativeGetEnabled(long) -> nativeGetEnabled
    boolean nativeSetEnabled(long,boolean) -> nativeSetEnabled
    org.webrtc.MediaStreamTrack$State nativeGetState(long) -> nativeGetState
org.webrtc.MediaStreamTrack$MediaType -> org.webrtc.MediaStreamTrack$MediaType:
    org.webrtc.MediaStreamTrack$MediaType MEDIA_TYPE_AUDIO -> MEDIA_TYPE_AUDIO
    org.webrtc.MediaStreamTrack$MediaType MEDIA_TYPE_VIDEO -> MEDIA_TYPE_VIDEO
    int nativeIndex -> nativeIndex
    org.webrtc.MediaStreamTrack$MediaType[] $VALUES -> $VALUES
    32:32:org.webrtc.MediaStreamTrack$MediaType[] values() -> values
    32:32:org.webrtc.MediaStreamTrack$MediaType valueOf(java.lang.String) -> valueOf
    38:40:void <init>(java.lang.String,int,int) -> <init>
    44:44:int getNative() -> getNative
    49:54:org.webrtc.MediaStreamTrack$MediaType fromNativeIndex(int) -> fromNativeIndex
    32:34:void <clinit>() -> <clinit>
org.webrtc.MediaStreamTrack$State -> org.webrtc.MediaStreamTrack$State:
    org.webrtc.MediaStreamTrack$State LIVE -> LIVE
    org.webrtc.MediaStreamTrack$State ENDED -> ENDED
    org.webrtc.MediaStreamTrack$State[] $VALUES -> $VALUES
    21:21:org.webrtc.MediaStreamTrack$State[] values() -> values
    21:21:org.webrtc.MediaStreamTrack$State valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    27:27:org.webrtc.MediaStreamTrack$State fromNativeIndex(int) -> fromNativeIndex
    21:23:void <clinit>() -> <clinit>
org.webrtc.MediaTransportFactoryFactory -> org.webrtc.MediaTransportFactoryFactory:
    long createNativeMediaTransportFactory() -> createNativeMediaTransportFactory
org.webrtc.Metrics -> org.webrtc.Metrics:
    java.lang.String TAG -> TAG
    java.util.Map map -> map
    34:38:void <init>() -> <init>
    65:66:void add(java.lang.String,org.webrtc.Metrics$HistogramInfo) -> add
    71:72:void enable() -> enable
    76:76:org.webrtc.Metrics getAndReset() -> getAndReset
    void nativeEnable() -> nativeEnable
    org.webrtc.Metrics nativeGetAndReset() -> nativeGetAndReset
org.webrtc.Metrics$HistogramInfo -> org.webrtc.Metrics$HistogramInfo:
    int min -> min
    int max -> max
    int bucketCount -> bucketCount
    java.util.Map samples -> samples
    47:55:void <init>(int,int,int) -> <init>
    59:60:void addSample(int,int) -> addSample
org.webrtc.NV12Buffer -> org.webrtc.NV12Buffer:
    int width -> width
    int height -> height
    int stride -> stride
    int sliceHeight -> sliceHeight
    java.nio.ByteBuffer buffer -> buffer
    org.webrtc.RefCountDelegate refCountDelegate -> refCountDelegate
    25:32:void <init>(int,int,int,int,java.nio.ByteBuffer,java.lang.Runnable) -> <init>
    36:36:int getWidth() -> getWidth
    41:41:int getHeight() -> getHeight
    46:46:org.webrtc.VideoFrame$I420Buffer toI420() -> toI420
    51:52:void retain() -> retain
    56:57:void release() -> release
    62:66:org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int) -> cropAndScale
    void nativeCropAndScale(int,int,int,int,int,int,java.nio.ByteBuffer,int,int,int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int) -> nativeCropAndScale
org.webrtc.NV21Buffer -> org.webrtc.NV21Buffer:
    byte[] data -> data
    int width -> width
    int height -> height
    org.webrtc.RefCountDelegate refCountDelegate -> refCountDelegate
    23:28:void <init>(byte[],int,int,java.lang.Runnable) -> <init>
    32:32:int getWidth() -> getWidth
    36:36:byte[] getData() -> getData
    41:41:int getHeight() -> getHeight
    47:47:org.webrtc.VideoFrame$I420Buffer toI420() -> toI420
    53:54:void retain() -> retain
    58:59:void release() -> release
    64:68:org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int) -> cropAndScale
    void nativeCropAndScale(int,int,int,int,int,int,byte[],int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int) -> nativeCropAndScale
org.webrtc.NativeAndroidVideoTrackSource -> org.webrtc.NativeAndroidVideoTrackSource:
    long nativeAndroidVideoTrackSource -> nativeAndroidVideoTrackSource
    29:31:void <init>(long) -> <init>
    38:39:void setState(boolean) -> setState
    49:50:org.webrtc.VideoProcessor$FrameAdaptationParameters adaptFrame(org.webrtc.VideoFrame) -> adaptFrame
    58:60:void onFrameCaptured(org.webrtc.VideoFrame) -> onFrameCaptured
    70:73:void adaptOutputFormat(org.webrtc.VideoSource$AspectRatio,java.lang.Integer,org.webrtc.VideoSource$AspectRatio,java.lang.Integer,java.lang.Integer) -> adaptOutputFormat
    79:79:org.webrtc.VideoProcessor$FrameAdaptationParameters createFrameAdaptationParameters(int,int,int,int,int,int,long,boolean) -> createFrameAdaptationParameters
    void nativeSetState(long,boolean) -> nativeSetState
    void nativeAdaptOutputFormat(long,int,int,java.lang.Integer,int,int,java.lang.Integer,java.lang.Integer) -> nativeAdaptOutputFormat
    org.webrtc.VideoProcessor$FrameAdaptationParameters nativeAdaptFrame(long,int,int,int,long) -> nativeAdaptFrame
    void nativeOnFrameCaptured(long,int,long,org.webrtc.VideoFrame$Buffer) -> nativeOnFrameCaptured
org.webrtc.NativeCapturerObserver -> org.webrtc.NativeCapturerObserver:
    org.webrtc.NativeAndroidVideoTrackSource nativeAndroidVideoTrackSource -> nativeAndroidVideoTrackSource
    23:25:void <init>(long) -> <init>
    29:30:void onCapturerStarted(boolean) -> onCapturerStarted
    34:34:void onCapturerStoppedInCapturerThread() -> onCapturerStoppedInCapturerThread
    38:39:void onCapturerStopped() -> onCapturerStopped
    43:56:void onFrameCaptured(org.webrtc.VideoFrame) -> onFrameCaptured
org.webrtc.NativeLibrary -> org.webrtc.NativeLibrary:
    java.lang.String TAG -> TAG
    java.lang.Object lock -> lock
    boolean libraryLoaded -> libraryLoaded
    13:13:void <init>() -> <init>
    38:46:void initialize(org.webrtc.NativeLibraryLoader,java.lang.String) -> initialize
    50:52:boolean isLoaded() -> isLoaded
    13:13:java.lang.String access$000() -> access$000
    14:30:void <clinit>() -> <clinit>
org.webrtc.NativeLibrary$DefaultLoader -> org.webrtc.NativeLibrary$DefaultLoader:
    16:16:void <init>() -> <init>
    19:26:boolean load(java.lang.String) -> load
org.webrtc.NativeLibraryLoader -> org.webrtc.NativeLibraryLoader:
    boolean load(java.lang.String) -> load
org.webrtc.NativePeerConnectionFactory -> org.webrtc.NativePeerConnectionFactory:
    long createNativePeerConnection() -> createNativePeerConnection
org.webrtc.NetworkMonitor -> org.webrtc.NetworkMonitor:
    java.lang.String TAG -> TAG
    java.util.ArrayList nativeNetworkObservers -> nativeNetworkObservers
    java.util.ArrayList networkObservers -> networkObservers
    java.lang.Object autoDetectLock -> autoDetectLock
    org.webrtc.NetworkMonitorAutoDetect autoDetect -> autoDetect
    int numObservers -> numObservers
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType currentConnectionType -> currentConnectionType
    51:64:void <init>() -> <init>
    68:68:void init(android.content.Context) -> init
    73:73:org.webrtc.NetworkMonitor getInstance() -> getInstance
    77:80:void assertIsTrue(boolean) -> assertIsTrue
    88:96:void startMonitoring(android.content.Context) -> startMonitoring
    101:102:void startMonitoring() -> startMonitoring
    111:123:void startMonitoring(android.content.Context,long) -> startMonitoring
    127:133:void stopMonitoring() -> stopMonitoring
    137:142:void stopMonitoring(long) -> stopMonitoring
    147:149:boolean networkBindingSupported() -> networkBindingSupported
    154:154:int androidSdkInt() -> androidSdkInt
    158:158:org.webrtc.NetworkMonitorAutoDetect$ConnectionType getCurrentConnectionType() -> getCurrentConnectionType
    162:164:long getCurrentDefaultNetId() -> getCurrentDefaultNetId
    168:168:org.webrtc.NetworkMonitorAutoDetect createAutoDetect(android.content.Context) -> createAutoDetect
    190:192:void updateCurrentConnectionType(org.webrtc.NetworkMonitorAutoDetect$ConnectionType) -> updateCurrentConnectionType
    197:209:void notifyObserversOfConnectionTypeChange(org.webrtc.NetworkMonitorAutoDetect$ConnectionType) -> notifyObserversOfConnectionTypeChange
    213:217:void notifyObserversOfNetworkConnect(org.webrtc.NetworkMonitorAutoDetect$NetworkInformation) -> notifyObserversOfNetworkConnect
    220:224:void notifyObserversOfNetworkDisconnect(long) -> notifyObserversOfNetworkDisconnect
    228:239:void updateObserverActiveNetworkList(long) -> updateObserverActiveNetworkList
    242:244:java.util.List getNativeNetworkObserversSync() -> getNativeNetworkObserversSync
    254:255:void addNetworkObserver(org.webrtc.NetworkMonitor$NetworkObserver) -> addNetworkObserver
    258:261:void addObserver(org.webrtc.NetworkMonitor$NetworkObserver) -> addObserver
    270:271:void removeNetworkObserver(org.webrtc.NetworkMonitor$NetworkObserver) -> removeNetworkObserver
    274:277:void removeObserver(org.webrtc.NetworkMonitor$NetworkObserver) -> removeObserver
    282:283:boolean isOnline() -> isOnline
    void nativeNotifyConnectionTypeChanged(long) -> nativeNotifyConnectionTypeChanged
    void nativeNotifyOfNetworkConnect(long,org.webrtc.NetworkMonitorAutoDetect$NetworkInformation) -> nativeNotifyOfNetworkConnect
    void nativeNotifyOfNetworkDisconnect(long,long) -> nativeNotifyOfNetworkDisconnect
    void nativeNotifyOfActiveNetworkList(long,org.webrtc.NetworkMonitorAutoDetect$NetworkInformation[]) -> nativeNotifyOfActiveNetworkList
    297:299:org.webrtc.NetworkMonitorAutoDetect getNetworkMonitorAutoDetect() -> getNetworkMonitorAutoDetect
    304:306:int getNumObservers() -> getNumObservers
    311:313:org.webrtc.NetworkMonitorAutoDetect createAndSetAutoDetectForTest(android.content.Context) -> createAndSetAutoDetectForTest
    30:30:void <init>(org.webrtc.NetworkMonitor$1) -> <init>
    30:30:void access$100(org.webrtc.NetworkMonitor,org.webrtc.NetworkMonitorAutoDetect$ConnectionType) -> access$100
    30:30:void access$200(org.webrtc.NetworkMonitor,org.webrtc.NetworkMonitorAutoDetect$NetworkInformation) -> access$200
    30:30:void access$300(org.webrtc.NetworkMonitor,long) -> access$300
org.webrtc.NetworkMonitor$1 -> org.webrtc.NetworkMonitor$1:
    org.webrtc.NetworkMonitor this$0 -> this$0
    168:168:void <init>(org.webrtc.NetworkMonitor) -> <init>
    173:174:void onConnectionTypeChanged(org.webrtc.NetworkMonitorAutoDetect$ConnectionType) -> onConnectionTypeChanged
    178:179:void onNetworkConnect(org.webrtc.NetworkMonitorAutoDetect$NetworkInformation) -> onNetworkConnect
    183:184:void onNetworkDisconnect(long) -> onNetworkDisconnect
org.webrtc.NetworkMonitor$InstanceHolder -> org.webrtc.NetworkMonitor$InstanceHolder:
    org.webrtc.NetworkMonitor instance -> instance
    41:41:void <init>() -> <init>
    43:43:void <clinit>() -> <clinit>
org.webrtc.NetworkMonitor$NetworkObserver -> org.webrtc.NetworkMonitor$NetworkObserver:
    void onConnectionTypeChanged(org.webrtc.NetworkMonitorAutoDetect$ConnectionType) -> onConnectionTypeChanged
org.webrtc.NetworkMonitorAutoDetect -> org.webrtc.NetworkMonitorAutoDetect:
    long INVALID_NET_ID -> INVALID_NET_ID
    java.lang.String TAG -> TAG
    org.webrtc.NetworkMonitorAutoDetect$Observer observer -> observer
    android.content.IntentFilter intentFilter -> intentFilter
    android.content.Context context -> context
    android.net.ConnectivityManager$NetworkCallback mobileNetworkCallback -> mobileNetworkCallback
    android.net.ConnectivityManager$NetworkCallback allNetworkCallback -> allNetworkCallback
    org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate connectivityManagerDelegate -> connectivityManagerDelegate
    org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate wifiManagerDelegate -> wifiManagerDelegate
    org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate wifiDirectManagerDelegate -> wifiDirectManagerDelegate
    boolean isRegistered -> isRegistered
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType connectionType -> connectionType
    java.lang.String wifiSSID -> wifiSSID
    643:676:void <init>(org.webrtc.NetworkMonitorAutoDetect$Observer,android.content.Context) -> <init>
    679:679:boolean supportNetworkCallback() -> supportNetworkCallback
    686:687:void setConnectivityManagerDelegateForTests(org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate) -> setConnectivityManagerDelegateForTests
    693:694:void setWifiManagerDelegateForTests(org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate) -> setWifiManagerDelegateForTests
    701:701:boolean isReceiverRegisteredForTesting() -> isReceiverRegisteredForTesting
    706:716:java.util.List getActiveNetworkList() -> getActiveNetworkList
    720:730:void destroy() -> destroy
    736:741:void registerReceiver() -> registerReceiver
    747:752:void unregisterReceiver() -> unregisterReceiver
    755:755:org.webrtc.NetworkMonitorAutoDetect$NetworkState getCurrentNetworkState() -> getCurrentNetworkState
    765:765:long getDefaultNetId() -> getDefaultNetId
    770:810:org.webrtc.NetworkMonitorAutoDetect$ConnectionType getConnectionType(boolean,int,int) -> getConnectionType
    815:816:org.webrtc.NetworkMonitorAutoDetect$ConnectionType getConnectionType(org.webrtc.NetworkMonitorAutoDetect$NetworkState) -> getConnectionType
    820:825:org.webrtc.NetworkMonitorAutoDetect$ConnectionType getUnderlyingConnectionTypeForVpn(org.webrtc.NetworkMonitorAutoDetect$NetworkState) -> getUnderlyingConnectionTypeForVpn
    829:831:java.lang.String getWifiSSID(org.webrtc.NetworkMonitorAutoDetect$NetworkState) -> getWifiSSID
    837:841:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    844:853:void connectionTypeChanged(org.webrtc.NetworkMonitorAutoDetect$NetworkState) -> connectionTypeChanged
    862:868:long networkToNetId(android.net.Network) -> networkToNetId
    48:48:long access$000(android.net.Network) -> access$000
    48:48:org.webrtc.NetworkMonitorAutoDetect$Observer access$100(org.webrtc.NetworkMonitorAutoDetect) -> access$100
    48:48:org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate access$200(org.webrtc.NetworkMonitorAutoDetect) -> access$200
    48:48:org.webrtc.NetworkMonitorAutoDetect$ConnectionType access$400(org.webrtc.NetworkMonitorAutoDetect$NetworkState) -> access$400
org.webrtc.NetworkMonitorAutoDetect$1 -> org.webrtc.NetworkMonitorAutoDetect$1:
org.webrtc.NetworkMonitorAutoDetect$ConnectionType -> org.webrtc.NetworkMonitorAutoDetect$ConnectionType:
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_UNKNOWN -> CONNECTION_UNKNOWN
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_ETHERNET -> CONNECTION_ETHERNET
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_WIFI -> CONNECTION_WIFI
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_4G -> CONNECTION_4G
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_3G -> CONNECTION_3G
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_2G -> CONNECTION_2G
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_UNKNOWN_CELLULAR -> CONNECTION_UNKNOWN_CELLULAR
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_BLUETOOTH -> CONNECTION_BLUETOOTH
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_VPN -> CONNECTION_VPN
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType CONNECTION_NONE -> CONNECTION_NONE
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType[] $VALUES -> $VALUES
    49:49:org.webrtc.NetworkMonitorAutoDetect$ConnectionType[] values() -> values
    49:49:org.webrtc.NetworkMonitorAutoDetect$ConnectionType valueOf(java.lang.String) -> valueOf
    49:49:void <init>(java.lang.String,int) -> <init>
    49:59:void <clinit>() -> <clinit>
org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate -> org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate:
    android.net.ConnectivityManager connectivityManager -> connectivityManager
    218:221:void <init>(android.content.Context) -> <init>
    224:227:void <init>() -> <init>
    234:237:org.webrtc.NetworkMonitorAutoDetect$NetworkState getNetworkState() -> getNetworkState
    246:310:org.webrtc.NetworkMonitorAutoDetect$NetworkState getNetworkState(android.net.Network) -> getNetworkState
    319:322:org.webrtc.NetworkMonitorAutoDetect$NetworkState getNetworkState(android.net.NetworkInfo) -> getNetworkState
    331:334:android.net.Network[] getAllNetworks() -> getAllNetworks
    339:349:java.util.List getActiveNetworkList() -> getActiveNetworkList
    359:392:long getDefaultNetId() -> getDefaultNetId
    397:436:org.webrtc.NetworkMonitorAutoDetect$NetworkInformation networkToInfo(android.net.Network) -> networkToInfo
    445:450:boolean hasInternetCapability(android.net.Network) -> hasInternetCapability
    456:461:void registerNetworkCallback(android.net.ConnectivityManager$NetworkCallback) -> registerNetworkCallback
    466:470:void requestMobileNetwork(android.net.ConnectivityManager$NetworkCallback) -> requestMobileNetwork
    474:480:org.webrtc.NetworkMonitorAutoDetect$IPAddress[] getIPAddresses(android.net.LinkProperties) -> getIPAddresses
    485:489:void releaseCallback(android.net.ConnectivityManager$NetworkCallback) -> releaseCallback
    492:492:boolean supportNetworkCallback() -> supportNetworkCallback
    211:211:org.webrtc.NetworkMonitorAutoDetect$NetworkInformation access$300(org.webrtc.NetworkMonitorAutoDetect$ConnectivityManagerDelegate,android.net.Network) -> access$300
org.webrtc.NetworkMonitorAutoDetect$IPAddress -> org.webrtc.NetworkMonitorAutoDetect$IPAddress:
    byte[] address -> address
    64:66:void <init>(byte[]) -> <init>
    70:70:byte[] getAddress() -> getAddress
org.webrtc.NetworkMonitorAutoDetect$NetworkInformation -> org.webrtc.NetworkMonitorAutoDetect$NetworkInformation:
    java.lang.String name -> name
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType type -> type
    org.webrtc.NetworkMonitorAutoDetect$ConnectionType underlyingTypeForVpn -> underlyingTypeForVpn
    long handle -> handle
    org.webrtc.NetworkMonitorAutoDetect$IPAddress[] ipAddresses -> ipAddresses
    83:89:void <init>(java.lang.String,org.webrtc.NetworkMonitorAutoDetect$ConnectionType,org.webrtc.NetworkMonitorAutoDetect$ConnectionType,long,org.webrtc.NetworkMonitorAutoDetect$IPAddress[]) -> <init>
    93:93:org.webrtc.NetworkMonitorAutoDetect$IPAddress[] getIpAddresses() -> getIpAddresses
    98:98:org.webrtc.NetworkMonitorAutoDetect$ConnectionType getConnectionType() -> getConnectionType
    103:103:org.webrtc.NetworkMonitorAutoDetect$ConnectionType getUnderlyingConnectionTypeForVpn() -> getUnderlyingConnectionTypeForVpn
    108:108:long getHandle() -> getHandle
    113:113:java.lang.String getName() -> getName
org.webrtc.NetworkMonitorAutoDetect$NetworkState -> org.webrtc.NetworkMonitorAutoDetect$NetworkState:
    boolean connected -> connected
    int type -> type
    int subtype -> subtype
    int underlyingNetworkTypeForVpn -> underlyingNetworkTypeForVpn
    int underlyingNetworkSubtypeForVpn -> underlyingNetworkSubtypeForVpn
    131:137:void <init>(boolean,int,int,int,int) -> <init>
    140:140:boolean isConnected() -> isConnected
    144:144:int getNetworkType() -> getNetworkType
    148:148:int getNetworkSubType() -> getNetworkSubType
    152:152:int getUnderlyingNetworkTypeForVpn() -> getUnderlyingNetworkTypeForVpn
    156:156:int getUnderlyingNetworkSubtypeForVpn() -> getUnderlyingNetworkSubtypeForVpn
org.webrtc.NetworkMonitorAutoDetect$Observer -> org.webrtc.NetworkMonitorAutoDetect$Observer:
    void onConnectionTypeChanged(org.webrtc.NetworkMonitorAutoDetect$ConnectionType) -> onConnectionTypeChanged
    void onNetworkConnect(org.webrtc.NetworkMonitorAutoDetect$NetworkInformation) -> onNetworkConnect
    void onNetworkDisconnect(long) -> onNetworkDisconnect
org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback -> org.webrtc.NetworkMonitorAutoDetect$SimpleNetworkCallback:
    org.webrtc.NetworkMonitorAutoDetect this$0 -> this$0
    165:165:void <init>(org.webrtc.NetworkMonitorAutoDetect) -> <init>
    168:170:void onAvailable(android.net.Network) -> onAvailable
    176:178:void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities) -> onCapabilitiesChanged
    184:186:void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties) -> onLinkPropertiesChanged
    192:194:void onLosing(android.net.Network,int) -> onLosing
    198:200:void onLost(android.net.Network) -> onLost
    203:207:void onNetworkChanged(android.net.Network) -> onNetworkChanged
    165:165:void <init>(org.webrtc.NetworkMonitorAutoDetect,org.webrtc.NetworkMonitorAutoDetect$1) -> <init>
org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate -> org.webrtc.NetworkMonitorAutoDetect$WifiDirectManagerDelegate:
    int WIFI_P2P_NETWORK_HANDLE -> WIFI_P2P_NETWORK_HANDLE
    android.content.Context context -> context
    org.webrtc.NetworkMonitorAutoDetect$Observer observer -> observer
    org.webrtc.NetworkMonitorAutoDetect$NetworkInformation wifiP2pNetworkInfo -> wifiP2pNetworkInfo
    536:543:void <init>(org.webrtc.NetworkMonitorAutoDetect$Observer,android.content.Context) -> <init>
    549:556:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    560:561:void release() -> release
    564:568:java.util.List getActiveNetworkList() -> getActiveNetworkList
    573:595:void onWifiP2pGroupChange(android.net.wifi.p2p.WifiP2pGroup) -> onWifiP2pGroupChange
    599:603:void onWifiP2pStateChange(int) -> onWifiP2pStateChange
org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate -> org.webrtc.NetworkMonitorAutoDetect$WifiManagerDelegate:
    android.content.Context context -> context
    499:501:void <init>(android.content.Context) -> <init>
    504:507:void <init>() -> <init>
    510:521:java.lang.String getWifiSSID() -> getWifiSSID
org.webrtc.NetworkStatePredictorFactoryFactory -> org.webrtc.NetworkStatePredictorFactoryFactory:
    long createNativeNetworkStatePredictorFactory() -> createNativeNetworkStatePredictorFactory
org.webrtc.PeerConnection -> org.webrtc.PeerConnection:
    java.util.List localStreams -> localStreams
    long nativePeerConnection -> nativePeerConnection
    java.util.List senders -> senders
    java.util.List receivers -> receivers
    java.util.List transceivers -> transceivers
    801:802:void <init>(org.webrtc.NativePeerConnectionFactory) -> <init>
    790:806:void <init>(long) -> <init>
    810:810:org.webrtc.SessionDescription getLocalDescription() -> getLocalDescription
    814:814:org.webrtc.SessionDescription getRemoteDescription() -> getRemoteDescription
    818:818:org.webrtc.RtcCertificatePem getCertificate() -> getCertificate
    822:822:org.webrtc.DataChannel createDataChannel(java.lang.String,org.webrtc.DataChannel$Init) -> createDataChannel
    826:827:void createOffer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints) -> createOffer
    830:831:void createAnswer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints) -> createAnswer
    834:835:void setLocalDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription) -> setLocalDescription
    838:839:void setRemoteDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription) -> setRemoteDescription
    849:850:void setAudioPlayout(boolean) -> setAudioPlayout
    860:861:void setAudioRecording(boolean) -> setAudioRecording
    864:864:boolean setConfiguration(org.webrtc.PeerConnection$RTCConfiguration) -> setConfiguration
    868:868:boolean addIceCandidate(org.webrtc.IceCandidate) -> addIceCandidate
    872:872:boolean removeIceCandidates(org.webrtc.IceCandidate[]) -> removeIceCandidates
    881:886:boolean addStream(org.webrtc.MediaStream) -> addStream
    895:897:void removeStream(org.webrtc.MediaStream) -> removeStream
    940:944:org.webrtc.RtpSender createSender(java.lang.String,java.lang.String) -> createSender
    953:957:java.util.List getSenders() -> getSenders
    966:970:java.util.List getReceivers() -> getReceivers
    980:984:java.util.List getTransceivers() -> getTransceivers
    998:998:org.webrtc.RtpSender addTrack(org.webrtc.MediaStreamTrack) -> addTrack
    1002:1010:org.webrtc.RtpSender addTrack(org.webrtc.MediaStreamTrack,java.util.List) -> addTrack
    1019:1022:boolean removeTrack(org.webrtc.RtpSender) -> removeTrack
    1051:1051:org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack) -> addTransceiver
    1056:1068:org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack,org.webrtc.RtpTransceiver$RtpTransceiverInit) -> addTransceiver
    1072:1072:org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack$MediaType) -> addTransceiver
    1077:1088:org.webrtc.RtpTransceiver addTransceiver(org.webrtc.MediaStreamTrack$MediaType,org.webrtc.RtpTransceiver$RtpTransceiverInit) -> addTransceiver
    1094:1094:boolean getStats(org.webrtc.StatsObserver,org.webrtc.MediaStreamTrack) -> getStats
    1102:1103:void getStats(org.webrtc.RTCStatsCollectorCallback) -> getStats
    1110:1110:boolean setBitrate(java.lang.Integer,java.lang.Integer,java.lang.Integer) -> setBitrate
    1123:1123:boolean startRtcEventLog(int,int) -> startRtcEventLog
    1131:1132:void stopRtcEventLog() -> stopRtcEventLog
    1137:1137:org.webrtc.PeerConnection$SignalingState signalingState() -> signalingState
    1141:1141:org.webrtc.PeerConnection$IceConnectionState iceConnectionState() -> iceConnectionState
    1145:1145:org.webrtc.PeerConnection$PeerConnectionState connectionState() -> connectionState
    1149:1149:org.webrtc.PeerConnection$IceGatheringState iceGatheringState() -> iceGatheringState
    1153:1154:void close() -> close
    1173:1192:void dispose() -> dispose
    1196:1196:long getNativePeerConnection() -> getNativePeerConnection
    1201:1201:long getNativeOwnedPeerConnection() -> getNativeOwnedPeerConnection
    1205:1205:long createNativePeerConnectionObserver(org.webrtc.PeerConnection$Observer) -> createNativePeerConnectionObserver
    long nativeGetNativePeerConnection() -> nativeGetNativePeerConnection
    org.webrtc.SessionDescription nativeGetLocalDescription() -> nativeGetLocalDescription
    org.webrtc.SessionDescription nativeGetRemoteDescription() -> nativeGetRemoteDescription
    org.webrtc.RtcCertificatePem nativeGetCertificate() -> nativeGetCertificate
    org.webrtc.DataChannel nativeCreateDataChannel(java.lang.String,org.webrtc.DataChannel$Init) -> nativeCreateDataChannel
    void nativeCreateOffer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints) -> nativeCreateOffer
    void nativeCreateAnswer(org.webrtc.SdpObserver,org.webrtc.MediaConstraints) -> nativeCreateAnswer
    void nativeSetLocalDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription) -> nativeSetLocalDescription
    void nativeSetRemoteDescription(org.webrtc.SdpObserver,org.webrtc.SessionDescription) -> nativeSetRemoteDescription
    void nativeSetAudioPlayout(boolean) -> nativeSetAudioPlayout
    void nativeSetAudioRecording(boolean) -> nativeSetAudioRecording
    boolean nativeSetBitrate(java.lang.Integer,java.lang.Integer,java.lang.Integer) -> nativeSetBitrate
    org.webrtc.PeerConnection$SignalingState nativeSignalingState() -> nativeSignalingState
    org.webrtc.PeerConnection$IceConnectionState nativeIceConnectionState() -> nativeIceConnectionState
    org.webrtc.PeerConnection$PeerConnectionState nativeConnectionState() -> nativeConnectionState
    org.webrtc.PeerConnection$IceGatheringState nativeIceGatheringState() -> nativeIceGatheringState
    void nativeClose() -> nativeClose
    long nativeCreatePeerConnectionObserver(org.webrtc.PeerConnection$Observer) -> nativeCreatePeerConnectionObserver
    void nativeFreeOwnedPeerConnection(long) -> nativeFreeOwnedPeerConnection
    boolean nativeSetConfiguration(org.webrtc.PeerConnection$RTCConfiguration) -> nativeSetConfiguration
    boolean nativeAddIceCandidate(java.lang.String,int,java.lang.String) -> nativeAddIceCandidate
    boolean nativeRemoveIceCandidates(org.webrtc.IceCandidate[]) -> nativeRemoveIceCandidates
    boolean nativeAddLocalStream(long) -> nativeAddLocalStream
    void nativeRemoveLocalStream(long) -> nativeRemoveLocalStream
    boolean nativeOldGetStats(org.webrtc.StatsObserver,long) -> nativeOldGetStats
    void nativeNewGetStats(org.webrtc.RTCStatsCollectorCallback) -> nativeNewGetStats
    org.webrtc.RtpSender nativeCreateSender(java.lang.String,java.lang.String) -> nativeCreateSender
    java.util.List nativeGetSenders() -> nativeGetSenders
    java.util.List nativeGetReceivers() -> nativeGetReceivers
    java.util.List nativeGetTransceivers() -> nativeGetTransceivers
    org.webrtc.RtpSender nativeAddTrack(long,java.util.List) -> nativeAddTrack
    boolean nativeRemoveTrack(long) -> nativeRemoveTrack
    org.webrtc.RtpTransceiver nativeAddTransceiverWithTrack(long,org.webrtc.RtpTransceiver$RtpTransceiverInit) -> nativeAddTransceiverWithTrack
    org.webrtc.RtpTransceiver nativeAddTransceiverOfType(org.webrtc.MediaStreamTrack$MediaType,org.webrtc.RtpTransceiver$RtpTransceiverInit) -> nativeAddTransceiverOfType
    boolean nativeStartRtcEventLog(int,int) -> nativeStartRtcEventLog
    void nativeStopRtcEventLog() -> nativeStopRtcEventLog
org.webrtc.PeerConnection$1 -> org.webrtc.PeerConnection$1:
org.webrtc.PeerConnection$AdapterType -> org.webrtc.PeerConnection$AdapterType:
    org.webrtc.PeerConnection$AdapterType UNKNOWN -> UNKNOWN
    org.webrtc.PeerConnection$AdapterType ETHERNET -> ETHERNET
    org.webrtc.PeerConnection$AdapterType WIFI -> WIFI
    org.webrtc.PeerConnection$AdapterType CELLULAR -> CELLULAR
    org.webrtc.PeerConnection$AdapterType VPN -> VPN
    org.webrtc.PeerConnection$AdapterType LOOPBACK -> LOOPBACK
    org.webrtc.PeerConnection$AdapterType[] $VALUES -> $VALUES
    367:367:org.webrtc.PeerConnection$AdapterType[] values() -> values
    367:367:org.webrtc.PeerConnection$AdapterType valueOf(java.lang.String) -> valueOf
    367:367:void <init>(java.lang.String,int) -> <init>
    367:373:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$BundlePolicy -> org.webrtc.PeerConnection$BundlePolicy:
    org.webrtc.PeerConnection$BundlePolicy BALANCED -> BALANCED
    org.webrtc.PeerConnection$BundlePolicy MAXBUNDLE -> MAXBUNDLE
    org.webrtc.PeerConnection$BundlePolicy MAXCOMPAT -> MAXCOMPAT
    org.webrtc.PeerConnection$BundlePolicy[] $VALUES -> $VALUES
    355:355:org.webrtc.PeerConnection$BundlePolicy[] values() -> values
    355:355:org.webrtc.PeerConnection$BundlePolicy valueOf(java.lang.String) -> valueOf
    355:355:void <init>(java.lang.String,int) -> <init>
    355:355:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$CandidateNetworkPolicy -> org.webrtc.PeerConnection$CandidateNetworkPolicy:
    org.webrtc.PeerConnection$CandidateNetworkPolicy ALL -> ALL
    org.webrtc.PeerConnection$CandidateNetworkPolicy LOW_COST -> LOW_COST
    org.webrtc.PeerConnection$CandidateNetworkPolicy[] $VALUES -> $VALUES
    364:364:org.webrtc.PeerConnection$CandidateNetworkPolicy[] values() -> values
    364:364:org.webrtc.PeerConnection$CandidateNetworkPolicy valueOf(java.lang.String) -> valueOf
    364:364:void <init>(java.lang.String,int) -> <init>
    364:364:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$ContinualGatheringPolicy -> org.webrtc.PeerConnection$ContinualGatheringPolicy:
    org.webrtc.PeerConnection$ContinualGatheringPolicy GATHER_ONCE -> GATHER_ONCE
    org.webrtc.PeerConnection$ContinualGatheringPolicy GATHER_CONTINUALLY -> GATHER_CONTINUALLY
    org.webrtc.PeerConnection$ContinualGatheringPolicy[] $VALUES -> $VALUES
    380:380:org.webrtc.PeerConnection$ContinualGatheringPolicy[] values() -> values
    380:380:org.webrtc.PeerConnection$ContinualGatheringPolicy valueOf(java.lang.String) -> valueOf
    380:380:void <init>(java.lang.String,int) -> <init>
    380:380:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$IceConnectionState -> org.webrtc.PeerConnection$IceConnectionState:
    org.webrtc.PeerConnection$IceConnectionState NEW -> NEW
    org.webrtc.PeerConnection$IceConnectionState CHECKING -> CHECKING
    org.webrtc.PeerConnection$IceConnectionState CONNECTED -> CONNECTED
    org.webrtc.PeerConnection$IceConnectionState COMPLETED -> COMPLETED
    org.webrtc.PeerConnection$IceConnectionState FAILED -> FAILED
    org.webrtc.PeerConnection$IceConnectionState DISCONNECTED -> DISCONNECTED
    org.webrtc.PeerConnection$IceConnectionState CLOSED -> CLOSED
    org.webrtc.PeerConnection$IceConnectionState[] $VALUES -> $VALUES
    42:42:org.webrtc.PeerConnection$IceConnectionState[] values() -> values
    42:42:org.webrtc.PeerConnection$IceConnectionState valueOf(java.lang.String) -> valueOf
    42:42:void <init>(java.lang.String,int) -> <init>
    53:53:org.webrtc.PeerConnection$IceConnectionState fromNativeIndex(int) -> fromNativeIndex
    42:49:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$IceGatheringState -> org.webrtc.PeerConnection$IceGatheringState:
    org.webrtc.PeerConnection$IceGatheringState NEW -> NEW
    org.webrtc.PeerConnection$IceGatheringState GATHERING -> GATHERING
    org.webrtc.PeerConnection$IceGatheringState COMPLETE -> COMPLETE
    org.webrtc.PeerConnection$IceGatheringState[] $VALUES -> $VALUES
    30:30:org.webrtc.PeerConnection$IceGatheringState[] values() -> values
    30:30:org.webrtc.PeerConnection$IceGatheringState valueOf(java.lang.String) -> valueOf
    30:30:void <init>(java.lang.String,int) -> <init>
    37:37:org.webrtc.PeerConnection$IceGatheringState fromNativeIndex(int) -> fromNativeIndex
    30:33:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$IceServer -> org.webrtc.PeerConnection$IceServer:
    java.lang.String uri -> uri
    java.util.List urls -> urls
    java.lang.String username -> username
    java.lang.String password -> password
    org.webrtc.PeerConnection$TlsCertPolicy tlsCertPolicy -> tlsCertPolicy
    java.lang.String hostname -> hostname
    java.util.List tlsAlpnProtocols -> tlsAlpnProtocols
    java.util.List tlsEllipticCurves -> tlsEllipticCurves
    170:171:void <init>(java.lang.String) -> <init>
    175:176:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    180:181:void <init>(java.lang.String,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy) -> <init>
    186:188:void <init>(java.lang.String,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy,java.lang.String) -> <init>
    192:218:void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy,java.lang.String,java.util.List,java.util.List) -> <init>
    222:222:java.lang.String toString() -> toString
    228:241:boolean equals(java.lang.Object) -> equals
    246:248:int hashCode() -> hashCode
    252:252:org.webrtc.PeerConnection$IceServer$Builder builder(java.lang.String) -> builder
    256:256:org.webrtc.PeerConnection$IceServer$Builder builder(java.util.List) -> builder
    314:314:java.util.List getUrls() -> getUrls
    320:320:java.lang.String getUsername() -> getUsername
    326:326:java.lang.String getPassword() -> getPassword
    331:331:org.webrtc.PeerConnection$TlsCertPolicy getTlsCertPolicy() -> getTlsCertPolicy
    337:337:java.lang.String getHostname() -> getHostname
    342:342:java.util.List getTlsAlpnProtocols() -> getTlsAlpnProtocols
    347:347:java.util.List getTlsEllipticCurves() -> getTlsEllipticCurves
    144:144:void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String,org.webrtc.PeerConnection$TlsCertPolicy,java.lang.String,java.util.List,java.util.List,org.webrtc.PeerConnection$1) -> <init>
org.webrtc.PeerConnection$IceServer$Builder -> org.webrtc.PeerConnection$IceServer$Builder:
    java.util.List urls -> urls
    java.lang.String username -> username
    java.lang.String password -> password
    org.webrtc.PeerConnection$TlsCertPolicy tlsCertPolicy -> tlsCertPolicy
    java.lang.String hostname -> hostname
    java.util.List tlsAlpnProtocols -> tlsAlpnProtocols
    java.util.List tlsEllipticCurves -> tlsEllipticCurves
    261:273:void <init>(java.util.List) -> <init>
    276:277:org.webrtc.PeerConnection$IceServer$Builder setUsername(java.lang.String) -> setUsername
    281:282:org.webrtc.PeerConnection$IceServer$Builder setPassword(java.lang.String) -> setPassword
    286:287:org.webrtc.PeerConnection$IceServer$Builder setTlsCertPolicy(org.webrtc.PeerConnection$TlsCertPolicy) -> setTlsCertPolicy
    291:292:org.webrtc.PeerConnection$IceServer$Builder setHostname(java.lang.String) -> setHostname
    296:297:org.webrtc.PeerConnection$IceServer$Builder setTlsAlpnProtocols(java.util.List) -> setTlsAlpnProtocols
    301:302:org.webrtc.PeerConnection$IceServer$Builder setTlsEllipticCurves(java.util.List) -> setTlsEllipticCurves
    306:306:org.webrtc.PeerConnection$IceServer createIceServer() -> createIceServer
    259:259:void <init>(java.util.List,org.webrtc.PeerConnection$1) -> <init>
org.webrtc.PeerConnection$IceTransportsType -> org.webrtc.PeerConnection$IceTransportsType:
    org.webrtc.PeerConnection$IceTransportsType NONE -> NONE
    org.webrtc.PeerConnection$IceTransportsType RELAY -> RELAY
    org.webrtc.PeerConnection$IceTransportsType NOHOST -> NOHOST
    org.webrtc.PeerConnection$IceTransportsType ALL -> ALL
    org.webrtc.PeerConnection$IceTransportsType[] $VALUES -> $VALUES
    352:352:org.webrtc.PeerConnection$IceTransportsType[] values() -> values
    352:352:org.webrtc.PeerConnection$IceTransportsType valueOf(java.lang.String) -> valueOf
    352:352:void <init>(java.lang.String,int) -> <init>
    352:352:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$IntervalRange -> org.webrtc.PeerConnection$IntervalRange:
    int min -> min
    int max -> max
    387:390:void <init>(int,int) -> <init>
    394:394:int getMin() -> getMin
    399:399:int getMax() -> getMax
org.webrtc.PeerConnection$KeyType -> org.webrtc.PeerConnection$KeyType:
    org.webrtc.PeerConnection$KeyType RSA -> RSA
    org.webrtc.PeerConnection$KeyType ECDSA -> ECDSA
    org.webrtc.PeerConnection$KeyType[] $VALUES -> $VALUES
    377:377:org.webrtc.PeerConnection$KeyType[] values() -> values
    377:377:org.webrtc.PeerConnection$KeyType valueOf(java.lang.String) -> valueOf
    377:377:void <init>(java.lang.String,int) -> <init>
    377:377:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$Observer -> org.webrtc.PeerConnection$Observer:
    void onSignalingChange(org.webrtc.PeerConnection$SignalingState) -> onSignalingChange
    void onIceConnectionChange(org.webrtc.PeerConnection$IceConnectionState) -> onIceConnectionChange
    103:103:void onConnectionChange(org.webrtc.PeerConnection$PeerConnectionState) -> onConnectionChange
    void onIceConnectionReceivingChange(boolean) -> onIceConnectionReceivingChange
    void onIceGatheringChange(org.webrtc.PeerConnection$IceGatheringState) -> onIceGatheringChange
    void onIceCandidate(org.webrtc.IceCandidate) -> onIceCandidate
    void onIceCandidatesRemoved(org.webrtc.IceCandidate[]) -> onIceCandidatesRemoved
    void onAddStream(org.webrtc.MediaStream) -> onAddStream
    void onRemoveStream(org.webrtc.MediaStream) -> onRemoveStream
    void onDataChannel(org.webrtc.DataChannel) -> onDataChannel
    void onRenegotiationNeeded() -> onRenegotiationNeeded
    void onAddTrack(org.webrtc.RtpReceiver,org.webrtc.MediaStream[]) -> onAddTrack
    140:140:void onTrack(org.webrtc.RtpTransceiver) -> onTrack
org.webrtc.PeerConnection$PeerConnectionState -> org.webrtc.PeerConnection$PeerConnectionState:
    org.webrtc.PeerConnection$PeerConnectionState NEW -> NEW
    org.webrtc.PeerConnection$PeerConnectionState CONNECTING -> CONNECTING
    org.webrtc.PeerConnection$PeerConnectionState CONNECTED -> CONNECTED
    org.webrtc.PeerConnection$PeerConnectionState DISCONNECTED -> DISCONNECTED
    org.webrtc.PeerConnection$PeerConnectionState FAILED -> FAILED
    org.webrtc.PeerConnection$PeerConnectionState CLOSED -> CLOSED
    org.webrtc.PeerConnection$PeerConnectionState[] $VALUES -> $VALUES
    58:58:org.webrtc.PeerConnection$PeerConnectionState[] values() -> values
    58:58:org.webrtc.PeerConnection$PeerConnectionState valueOf(java.lang.String) -> valueOf
    58:58:void <init>(java.lang.String,int) -> <init>
    68:68:org.webrtc.PeerConnection$PeerConnectionState fromNativeIndex(int) -> fromNativeIndex
    58:64:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$RTCConfiguration -> org.webrtc.PeerConnection$RTCConfiguration:
    org.webrtc.PeerConnection$IceTransportsType iceTransportsType -> iceTransportsType
    java.util.List iceServers -> iceServers
    org.webrtc.PeerConnection$BundlePolicy bundlePolicy -> bundlePolicy
    org.webrtc.RtcCertificatePem certificate -> certificate
    org.webrtc.PeerConnection$RtcpMuxPolicy rtcpMuxPolicy -> rtcpMuxPolicy
    org.webrtc.PeerConnection$TcpCandidatePolicy tcpCandidatePolicy -> tcpCandidatePolicy
    org.webrtc.PeerConnection$CandidateNetworkPolicy candidateNetworkPolicy -> candidateNetworkPolicy
    int audioJitterBufferMaxPackets -> audioJitterBufferMaxPackets
    boolean audioJitterBufferFastAccelerate -> audioJitterBufferFastAccelerate
    int iceConnectionReceivingTimeout -> iceConnectionReceivingTimeout
    int iceBackupCandidatePairPingInterval -> iceBackupCandidatePairPingInterval
    org.webrtc.PeerConnection$KeyType keyType -> keyType
    org.webrtc.PeerConnection$ContinualGatheringPolicy continualGatheringPolicy -> continualGatheringPolicy
    int iceCandidatePoolSize -> iceCandidatePoolSize
    boolean pruneTurnPorts -> pruneTurnPorts
    boolean presumeWritableWhenFullyRelayed -> presumeWritableWhenFullyRelayed
    java.lang.Integer iceCheckIntervalStrongConnectivityMs -> iceCheckIntervalStrongConnectivityMs
    java.lang.Integer iceCheckIntervalWeakConnectivityMs -> iceCheckIntervalWeakConnectivityMs
    java.lang.Integer iceCheckMinInterval -> iceCheckMinInterval
    java.lang.Integer iceUnwritableTimeMs -> iceUnwritableTimeMs
    java.lang.Integer iceUnwritableMinChecks -> iceUnwritableMinChecks
    java.lang.Integer stunCandidateKeepaliveIntervalMs -> stunCandidateKeepaliveIntervalMs
    boolean disableIPv6OnWifi -> disableIPv6OnWifi
    int maxIPv6Networks -> maxIPv6Networks
    org.webrtc.PeerConnection$IntervalRange iceRegatherIntervalRange -> iceRegatherIntervalRange
    boolean disableIpv6 -> disableIpv6
    boolean enableDscp -> enableDscp
    boolean enableCpuOveruseDetection -> enableCpuOveruseDetection
    boolean enableRtpDataChannel -> enableRtpDataChannel
    boolean suspendBelowMinBitrate -> suspendBelowMinBitrate
    java.lang.Integer screencastMinBitrate -> screencastMinBitrate
    java.lang.Boolean combinedAudioVideoBwe -> combinedAudioVideoBwe
    java.lang.Boolean enableDtlsSrtp -> enableDtlsSrtp
    org.webrtc.PeerConnection$AdapterType networkPreference -> networkPreference
    org.webrtc.PeerConnection$SdpSemantics sdpSemantics -> sdpSemantics
    org.webrtc.TurnCustomizer turnCustomizer -> turnCustomizer
    boolean activeResetSrtpParams -> activeResetSrtpParams
    boolean useMediaTransport -> useMediaTransport
    boolean useMediaTransportForDataChannels -> useMediaTransportForDataChannels
    org.webrtc.CryptoOptions cryptoOptions -> cryptoOptions
    535:574:void <init>(java.util.List) -> <init>
    578:578:org.webrtc.PeerConnection$IceTransportsType getIceTransportsType() -> getIceTransportsType
    583:583:java.util.List getIceServers() -> getIceServers
    588:588:org.webrtc.PeerConnection$BundlePolicy getBundlePolicy() -> getBundlePolicy
    594:594:org.webrtc.RtcCertificatePem getCertificate() -> getCertificate
    599:599:org.webrtc.PeerConnection$RtcpMuxPolicy getRtcpMuxPolicy() -> getRtcpMuxPolicy
    604:604:org.webrtc.PeerConnection$TcpCandidatePolicy getTcpCandidatePolicy() -> getTcpCandidatePolicy
    609:609:org.webrtc.PeerConnection$CandidateNetworkPolicy getCandidateNetworkPolicy() -> getCandidateNetworkPolicy
    614:614:int getAudioJitterBufferMaxPackets() -> getAudioJitterBufferMaxPackets
    619:619:boolean getAudioJitterBufferFastAccelerate() -> getAudioJitterBufferFastAccelerate
    624:624:int getIceConnectionReceivingTimeout() -> getIceConnectionReceivingTimeout
    629:629:int getIceBackupCandidatePairPingInterval() -> getIceBackupCandidatePairPingInterval
    634:634:org.webrtc.PeerConnection$KeyType getKeyType() -> getKeyType
    639:639:org.webrtc.PeerConnection$ContinualGatheringPolicy getContinualGatheringPolicy() -> getContinualGatheringPolicy
    644:644:int getIceCandidatePoolSize() -> getIceCandidatePoolSize
    649:649:boolean getPruneTurnPorts() -> getPruneTurnPorts
    654:654:boolean getPresumeWritableWhenFullyRelayed() -> getPresumeWritableWhenFullyRelayed
    660:660:java.lang.Integer getIceCheckIntervalStrongConnectivity() -> getIceCheckIntervalStrongConnectivity
    666:666:java.lang.Integer getIceCheckIntervalWeakConnectivity() -> getIceCheckIntervalWeakConnectivity
    672:672:java.lang.Integer getIceCheckMinInterval() -> getIceCheckMinInterval
    678:678:java.lang.Integer getIceUnwritableTimeout() -> getIceUnwritableTimeout
    684:684:java.lang.Integer getIceUnwritableMinChecks() -> getIceUnwritableMinChecks
    690:690:java.lang.Integer getStunCandidateKeepaliveInterval() -> getStunCandidateKeepaliveInterval
    695:695:boolean getDisableIPv6OnWifi() -> getDisableIPv6OnWifi
    700:700:int getMaxIPv6Networks() -> getMaxIPv6Networks
    706:706:org.webrtc.PeerConnection$IntervalRange getIceRegatherIntervalRange() -> getIceRegatherIntervalRange
    712:712:org.webrtc.TurnCustomizer getTurnCustomizer() -> getTurnCustomizer
    717:717:boolean getDisableIpv6() -> getDisableIpv6
    722:722:boolean getEnableDscp() -> getEnableDscp
    727:727:boolean getEnableCpuOveruseDetection() -> getEnableCpuOveruseDetection
    732:732:boolean getEnableRtpDataChannel() -> getEnableRtpDataChannel
    737:737:boolean getSuspendBelowMinBitrate() -> getSuspendBelowMinBitrate
    743:743:java.lang.Integer getScreencastMinBitrate() -> getScreencastMinBitrate
    749:749:java.lang.Boolean getCombinedAudioVideoBwe() -> getCombinedAudioVideoBwe
    755:755:java.lang.Boolean getEnableDtlsSrtp() -> getEnableDtlsSrtp
    760:760:org.webrtc.PeerConnection$AdapterType getNetworkPreference() -> getNetworkPreference
    765:765:org.webrtc.PeerConnection$SdpSemantics getSdpSemantics() -> getSdpSemantics
    770:770:boolean getActiveResetSrtpParams() -> getActiveResetSrtpParams
    775:775:boolean getUseMediaTransport() -> getUseMediaTransport
    780:780:boolean getUseMediaTransportForDataChannels() -> getUseMediaTransportForDataChannels
    786:786:org.webrtc.CryptoOptions getCryptoOptions() -> getCryptoOptions
org.webrtc.PeerConnection$RtcpMuxPolicy -> org.webrtc.PeerConnection$RtcpMuxPolicy:
    org.webrtc.PeerConnection$RtcpMuxPolicy NEGOTIATE -> NEGOTIATE
    org.webrtc.PeerConnection$RtcpMuxPolicy REQUIRE -> REQUIRE
    org.webrtc.PeerConnection$RtcpMuxPolicy[] $VALUES -> $VALUES
    358:358:org.webrtc.PeerConnection$RtcpMuxPolicy[] values() -> values
    358:358:org.webrtc.PeerConnection$RtcpMuxPolicy valueOf(java.lang.String) -> valueOf
    358:358:void <init>(java.lang.String,int) -> <init>
    358:358:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$SdpSemantics -> org.webrtc.PeerConnection$SdpSemantics:
    org.webrtc.PeerConnection$SdpSemantics PLAN_B -> PLAN_B
    org.webrtc.PeerConnection$SdpSemantics UNIFIED_PLAN -> UNIFIED_PLAN
    org.webrtc.PeerConnection$SdpSemantics[] $VALUES -> $VALUES
    428:428:org.webrtc.PeerConnection$SdpSemantics[] values() -> values
    428:428:org.webrtc.PeerConnection$SdpSemantics valueOf(java.lang.String) -> valueOf
    428:428:void <init>(java.lang.String,int) -> <init>
    428:428:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$SignalingState -> org.webrtc.PeerConnection$SignalingState:
    org.webrtc.PeerConnection$SignalingState STABLE -> STABLE
    org.webrtc.PeerConnection$SignalingState HAVE_LOCAL_OFFER -> HAVE_LOCAL_OFFER
    org.webrtc.PeerConnection$SignalingState HAVE_LOCAL_PRANSWER -> HAVE_LOCAL_PRANSWER
    org.webrtc.PeerConnection$SignalingState HAVE_REMOTE_OFFER -> HAVE_REMOTE_OFFER
    org.webrtc.PeerConnection$SignalingState HAVE_REMOTE_PRANSWER -> HAVE_REMOTE_PRANSWER
    org.webrtc.PeerConnection$SignalingState CLOSED -> CLOSED
    org.webrtc.PeerConnection$SignalingState[] $VALUES -> $VALUES
    79:79:org.webrtc.PeerConnection$SignalingState[] values() -> values
    79:79:org.webrtc.PeerConnection$SignalingState valueOf(java.lang.String) -> valueOf
    79:79:void <init>(java.lang.String,int) -> <init>
    89:89:org.webrtc.PeerConnection$SignalingState fromNativeIndex(int) -> fromNativeIndex
    79:85:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$TcpCandidatePolicy -> org.webrtc.PeerConnection$TcpCandidatePolicy:
    org.webrtc.PeerConnection$TcpCandidatePolicy ENABLED -> ENABLED
    org.webrtc.PeerConnection$TcpCandidatePolicy DISABLED -> DISABLED
    org.webrtc.PeerConnection$TcpCandidatePolicy[] $VALUES -> $VALUES
    361:361:org.webrtc.PeerConnection$TcpCandidatePolicy[] values() -> values
    361:361:org.webrtc.PeerConnection$TcpCandidatePolicy valueOf(java.lang.String) -> valueOf
    361:361:void <init>(java.lang.String,int) -> <init>
    361:361:void <clinit>() -> <clinit>
org.webrtc.PeerConnection$TlsCertPolicy -> org.webrtc.PeerConnection$TlsCertPolicy:
    org.webrtc.PeerConnection$TlsCertPolicy TLS_CERT_POLICY_SECURE -> TLS_CERT_POLICY_SECURE
    org.webrtc.PeerConnection$TlsCertPolicy TLS_CERT_POLICY_INSECURE_NO_CHECK -> TLS_CERT_POLICY_INSECURE_NO_CHECK
    org.webrtc.PeerConnection$TlsCertPolicy[] $VALUES -> $VALUES
    73:73:org.webrtc.PeerConnection$TlsCertPolicy[] values() -> values
    73:73:org.webrtc.PeerConnection$TlsCertPolicy valueOf(java.lang.String) -> valueOf
    73:73:void <init>(java.lang.String,int) -> <init>
    73:75:void <clinit>() -> <clinit>
org.webrtc.PeerConnectionDependencies -> org.webrtc.PeerConnectionDependencies:
    org.webrtc.PeerConnection$Observer observer -> observer
    org.webrtc.SSLCertificateVerifier sslCertificateVerifier -> sslCertificateVerifier
    48:48:org.webrtc.PeerConnectionDependencies$Builder builder(org.webrtc.PeerConnection$Observer) -> builder
    52:52:org.webrtc.PeerConnection$Observer getObserver() -> getObserver
    57:57:org.webrtc.SSLCertificateVerifier getSSLCertificateVerifier() -> getSSLCertificateVerifier
    61:64:void <init>(org.webrtc.PeerConnection$Observer,org.webrtc.SSLCertificateVerifier) -> <init>
    21:21:void <init>(org.webrtc.PeerConnection$Observer,org.webrtc.SSLCertificateVerifier,org.webrtc.PeerConnectionDependencies$1) -> <init>
org.webrtc.PeerConnectionDependencies$1 -> org.webrtc.PeerConnectionDependencies$1:
org.webrtc.PeerConnectionDependencies$Builder -> org.webrtc.PeerConnectionDependencies$Builder:
    org.webrtc.PeerConnection$Observer observer -> observer
    org.webrtc.SSLCertificateVerifier sslCertificateVerifier -> sslCertificateVerifier
    32:34:void <init>(org.webrtc.PeerConnection$Observer) -> <init>
    37:38:org.webrtc.PeerConnectionDependencies$Builder setSSLCertificateVerifier(org.webrtc.SSLCertificateVerifier) -> setSSLCertificateVerifier
    43:43:org.webrtc.PeerConnectionDependencies createPeerConnectionDependencies() -> createPeerConnectionDependencies
    28:28:void <init>(org.webrtc.PeerConnection$Observer,org.webrtc.PeerConnectionDependencies$1) -> <init>
org.webrtc.PeerConnectionFactory -> org.webrtc.PeerConnectionFactory:
    java.lang.String TRIAL_ENABLED -> TRIAL_ENABLED
    java.lang.String VIDEO_FRAME_EMIT_TRIAL -> VIDEO_FRAME_EMIT_TRIAL
    java.lang.String TAG -> TAG
    java.lang.String VIDEO_CAPTURER_THREAD_NAME -> VIDEO_CAPTURER_THREAD_NAME
    int kRequiredResolutionAlignment -> kRequiredResolutionAlignment
    boolean internalTracerInitialized -> internalTracerInitialized
    org.webrtc.PeerConnectionFactory$ThreadInfo staticNetworkThread -> staticNetworkThread
    org.webrtc.PeerConnectionFactory$ThreadInfo staticWorkerThread -> staticWorkerThread
    org.webrtc.PeerConnectionFactory$ThreadInfo staticSignalingThread -> staticSignalingThread
    long nativeFactory -> nativeFactory
    org.webrtc.PeerConnectionFactory$ThreadInfo networkThread -> networkThread
    org.webrtc.PeerConnectionFactory$ThreadInfo workerThread -> workerThread
    org.webrtc.PeerConnectionFactory$ThreadInfo signalingThread -> signalingThread
    273:273:org.webrtc.PeerConnectionFactory$Builder builder() -> builder
    282:299:void initialize(org.webrtc.PeerConnectionFactory$InitializationOptions) -> initialize
    302:307:void checkInitializeHasBeenCalled() -> checkInitializeHasBeenCalled
    310:312:void initializeInternalTracer() -> initializeInternalTracer
    315:317:void shutdownInternalTracer() -> shutdownInternalTracer
    324:325:void initializeFieldTrials(java.lang.String) -> initializeFieldTrials
    335:335:java.lang.String fieldTrialsFindFullName(java.lang.String) -> fieldTrialsFindFullName
    339:339:boolean startInternalTracingCapture(java.lang.String) -> startInternalTracingCapture
    343:344:void stopInternalTracingCapture() -> stopInternalTracingCapture
    347:353:void <init>(long) -> <init>
    362:372:org.webrtc.PeerConnection createPeerConnectionInternal(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.MediaConstraints,org.webrtc.PeerConnection$Observer,org.webrtc.SSLCertificateVerifier) -> createPeerConnectionInternal
    383:383:org.webrtc.PeerConnection createPeerConnection(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.MediaConstraints,org.webrtc.PeerConnection$Observer) -> createPeerConnection
    395:396:org.webrtc.PeerConnection createPeerConnection(java.util.List,org.webrtc.MediaConstraints,org.webrtc.PeerConnection$Observer) -> createPeerConnection
    402:403:org.webrtc.PeerConnection createPeerConnection(java.util.List,org.webrtc.PeerConnection$Observer) -> createPeerConnection
    409:409:org.webrtc.PeerConnection createPeerConnection(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.PeerConnection$Observer) -> createPeerConnection
    415:416:org.webrtc.PeerConnection createPeerConnection(org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.PeerConnectionDependencies) -> createPeerConnection
    420:421:org.webrtc.MediaStream createLocalMediaStream(java.lang.String) -> createLocalMediaStream
    425:426:org.webrtc.VideoSource createVideoSource(boolean,boolean,int) -> createVideoSource
    437:438:org.webrtc.VideoSource createVideoSource(boolean,boolean) -> createVideoSource
    447:447:org.webrtc.VideoSource createVideoSource(boolean) -> createVideoSource
    451:453:org.webrtc.VideoTrack createVideoTrack(java.lang.String,org.webrtc.VideoSource) -> createVideoTrack
    457:458:org.webrtc.AudioSource createAudioSource(org.webrtc.MediaConstraints) -> createAudioSource
    462:463:org.webrtc.AudioTrack createAudioTrack(java.lang.String,org.webrtc.AudioSource) -> createAudioTrack
    470:471:boolean startAecDump(int,int) -> startAecDump
    477:479:void stopAecDump() -> stopAecDump
    482:490:void dispose() -> dispose
    494:495:long getNativePeerConnectionFactory() -> getNativePeerConnectionFactory
    500:501:long getNativeOwnedFactoryAndThreads() -> getNativeOwnedFactoryAndThreads
    505:508:void checkPeerConnectionFactoryExists() -> checkPeerConnectionFactoryExists
    512:533:void printStackTrace(org.webrtc.PeerConnectionFactory$ThreadInfo,boolean) -> printStackTrace
    538:541:void printStackTraces() -> printStackTraces
    549:555:void printInternalStackTraces(boolean) -> printInternalStackTraces
    559:562:void onNetworkThreadReady() -> onNetworkThreadReady
    566:569:void onWorkerThreadReady() -> onWorkerThreadReady
    573:576:void onSignalingThreadReady() -> onSignalingThreadReady
    void nativeInitializeAndroidGlobals() -> nativeInitializeAndroidGlobals
    void nativeInitializeFieldTrials(java.lang.String) -> nativeInitializeFieldTrials
    java.lang.String nativeFindFieldTrialsFullName(java.lang.String) -> nativeFindFieldTrialsFullName
    void nativeInitializeInternalTracer() -> nativeInitializeInternalTracer
    void nativeShutdownInternalTracer() -> nativeShutdownInternalTracer
    boolean nativeStartInternalTracingCapture(java.lang.String) -> nativeStartInternalTracingCapture
    void nativeStopInternalTracingCapture() -> nativeStopInternalTracingCapture
    org.webrtc.PeerConnectionFactory nativeCreatePeerConnectionFactory(android.content.Context,org.webrtc.PeerConnectionFactory$Options,long,long,long,org.webrtc.VideoEncoderFactory,org.webrtc.VideoDecoderFactory,long,long,long,long) -> nativeCreatePeerConnectionFactory
    long nativeCreatePeerConnection(long,org.webrtc.PeerConnection$RTCConfiguration,org.webrtc.MediaConstraints,long,org.webrtc.SSLCertificateVerifier) -> nativeCreatePeerConnection
    long nativeCreateLocalMediaStream(long,java.lang.String) -> nativeCreateLocalMediaStream
    long nativeCreateVideoSource(long,boolean,boolean,int) -> nativeCreateVideoSource
    long nativeCreateVideoTrack(long,java.lang.String,long) -> nativeCreateVideoTrack
    long nativeCreateAudioSource(long,org.webrtc.MediaConstraints) -> nativeCreateAudioSource
    long nativeCreateAudioTrack(long,java.lang.String,long) -> nativeCreateAudioTrack
    boolean nativeStartAecDump(long,int,int) -> nativeStartAecDump
    void nativeStopAecDump(long) -> nativeStopAecDump
    void nativeFreeFactory(long) -> nativeFreeFactory
    long nativeGetNativePeerConnectionFactory(long) -> nativeGetNativePeerConnectionFactory
    void nativeInjectLoggable(org.webrtc.JNILogging,int) -> nativeInjectLoggable
    void nativeDeleteLoggable() -> nativeDeleteLoggable
    void nativePrintStackTrace(int) -> nativePrintStackTrace
    void nativePrintStackTracesOfRegisteredThreads() -> nativePrintStackTracesOfRegisteredThreads
    26:26:void access$100() -> access$100
    26:26:org.webrtc.PeerConnectionFactory access$200(android.content.Context,org.webrtc.PeerConnectionFactory$Options,long,long,long,org.webrtc.VideoEncoderFactory,org.webrtc.VideoDecoderFactory,long,long,long,long) -> access$200
org.webrtc.PeerConnectionFactory$1 -> org.webrtc.PeerConnectionFactory$1:
org.webrtc.PeerConnectionFactory$Builder -> org.webrtc.PeerConnectionFactory$Builder:
    org.webrtc.PeerConnectionFactory$Options options -> options
    org.webrtc.audio.AudioDeviceModule audioDeviceModule -> audioDeviceModule
    org.webrtc.AudioEncoderFactoryFactory audioEncoderFactoryFactory -> audioEncoderFactoryFactory
    org.webrtc.AudioDecoderFactoryFactory audioDecoderFactoryFactory -> audioDecoderFactoryFactory
    org.webrtc.VideoEncoderFactory videoEncoderFactory -> videoEncoderFactory
    org.webrtc.VideoDecoderFactory videoDecoderFactory -> videoDecoderFactory
    org.webrtc.AudioProcessingFactory audioProcessingFactory -> audioProcessingFactory
    org.webrtc.FecControllerFactoryFactoryInterface fecControllerFactoryFactory -> fecControllerFactoryFactory
    org.webrtc.NetworkStatePredictorFactoryFactory networkStatePredictorFactoryFactory -> networkStatePredictorFactoryFactory
    org.webrtc.MediaTransportFactoryFactory mediaTransportFactoryFactory -> mediaTransportFactoryFactory
    169:180:void <init>() -> <init>
    183:184:org.webrtc.PeerConnectionFactory$Builder setOptions(org.webrtc.PeerConnectionFactory$Options) -> setOptions
    188:189:org.webrtc.PeerConnectionFactory$Builder setAudioDeviceModule(org.webrtc.audio.AudioDeviceModule) -> setAudioDeviceModule
    194:199:org.webrtc.PeerConnectionFactory$Builder setAudioEncoderFactoryFactory(org.webrtc.AudioEncoderFactoryFactory) -> setAudioEncoderFactoryFactory
    204:209:org.webrtc.PeerConnectionFactory$Builder setAudioDecoderFactoryFactory(org.webrtc.AudioDecoderFactoryFactory) -> setAudioDecoderFactoryFactory
    213:214:org.webrtc.PeerConnectionFactory$Builder setVideoEncoderFactory(org.webrtc.VideoEncoderFactory) -> setVideoEncoderFactory
    218:219:org.webrtc.PeerConnectionFactory$Builder setVideoDecoderFactory(org.webrtc.VideoDecoderFactory) -> setVideoDecoderFactory
    223:228:org.webrtc.PeerConnectionFactory$Builder setAudioProcessingFactory(org.webrtc.AudioProcessingFactory) -> setAudioProcessingFactory
    233:234:org.webrtc.PeerConnectionFactory$Builder setFecControllerFactoryFactoryInterface(org.webrtc.FecControllerFactoryFactoryInterface) -> setFecControllerFactoryFactoryInterface
    239:240:org.webrtc.PeerConnectionFactory$Builder setNetworkStatePredictorFactoryFactory(org.webrtc.NetworkStatePredictorFactoryFactory) -> setNetworkStatePredictorFactoryFactory
    246:247:org.webrtc.PeerConnectionFactory$Builder setMediaTransportFactoryFactory(org.webrtc.MediaTransportFactoryFactory) -> setMediaTransportFactoryFactory
    251:268:org.webrtc.PeerConnectionFactory createPeerConnectionFactory() -> createPeerConnectionFactory
    166:166:void <init>(org.webrtc.PeerConnectionFactory$1) -> <init>
org.webrtc.PeerConnectionFactory$InitializationOptions -> org.webrtc.PeerConnectionFactory$InitializationOptions:
    android.content.Context applicationContext -> applicationContext
    java.lang.String fieldTrials -> fieldTrials
    boolean enableInternalTracer -> enableInternalTracer
    org.webrtc.NativeLibraryLoader nativeLibraryLoader -> nativeLibraryLoader
    java.lang.String nativeLibraryName -> nativeLibraryName
    org.webrtc.Loggable loggable -> loggable
    org.webrtc.Logging$Severity loggableSeverity -> loggableSeverity
    73:81:void <init>(android.content.Context,java.lang.String,boolean,org.webrtc.NativeLibraryLoader,java.lang.String,org.webrtc.Loggable,org.webrtc.Logging$Severity) -> <init>
    84:84:org.webrtc.PeerConnectionFactory$InitializationOptions$Builder builder(android.content.Context) -> builder
    61:61:void <init>(android.content.Context,java.lang.String,boolean,org.webrtc.NativeLibraryLoader,java.lang.String,org.webrtc.Loggable,org.webrtc.Logging$Severity,org.webrtc.PeerConnectionFactory$1) -> <init>
org.webrtc.PeerConnectionFactory$InitializationOptions$Builder -> org.webrtc.PeerConnectionFactory$InitializationOptions$Builder:
    android.content.Context applicationContext -> applicationContext
    java.lang.String fieldTrials -> fieldTrials
    boolean enableInternalTracer -> enableInternalTracer
    org.webrtc.NativeLibraryLoader nativeLibraryLoader -> nativeLibraryLoader
    java.lang.String nativeLibraryName -> nativeLibraryName
    org.webrtc.Loggable loggable -> loggable
    org.webrtc.Logging$Severity loggableSeverity -> loggableSeverity
    89:98:void <init>(android.content.Context) -> <init>
    101:102:org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setFieldTrials(java.lang.String) -> setFieldTrials
    106:107:org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setEnableInternalTracer(boolean) -> setEnableInternalTracer
    111:112:org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setNativeLibraryLoader(org.webrtc.NativeLibraryLoader) -> setNativeLibraryLoader
    116:117:org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setNativeLibraryName(java.lang.String) -> setNativeLibraryName
    121:123:org.webrtc.PeerConnectionFactory$InitializationOptions$Builder setInjectableLogger(org.webrtc.Loggable,org.webrtc.Logging$Severity) -> setInjectableLogger
    127:127:org.webrtc.PeerConnectionFactory$InitializationOptions createInitializationOptions() -> createInitializationOptions
org.webrtc.PeerConnectionFactory$Options -> org.webrtc.PeerConnectionFactory$Options:
    int ADAPTER_TYPE_UNKNOWN -> ADAPTER_TYPE_UNKNOWN
    int ADAPTER_TYPE_ETHERNET -> ADAPTER_TYPE_ETHERNET
    int ADAPTER_TYPE_WIFI -> ADAPTER_TYPE_WIFI
    int ADAPTER_TYPE_CELLULAR -> ADAPTER_TYPE_CELLULAR
    int ADAPTER_TYPE_VPN -> ADAPTER_TYPE_VPN
    int ADAPTER_TYPE_LOOPBACK -> ADAPTER_TYPE_LOOPBACK
    int ADAPTER_TYPE_ANY -> ADAPTER_TYPE_ANY
    int networkIgnoreMask -> networkIgnoreMask
    boolean disableEncryption -> disableEncryption
    boolean disableNetworkMonitor -> disableNetworkMonitor
    134:134:void <init>() -> <init>
    152:152:int getNetworkIgnoreMask() -> getNetworkIgnoreMask
    157:157:boolean getDisableEncryption() -> getDisableEncryption
    162:162:boolean getDisableNetworkMonitor() -> getDisableNetworkMonitor
org.webrtc.PeerConnectionFactory$ThreadInfo -> org.webrtc.PeerConnectionFactory$ThreadInfo:
    java.lang.Thread thread -> thread
    int tid -> tid
    40:40:org.webrtc.PeerConnectionFactory$ThreadInfo getCurrent() -> getCurrent
    43:46:void <init>(java.lang.Thread,int) -> <init>
org.webrtc.PlatformSoftwareVideoDecoderFactory -> org.webrtc.PlatformSoftwareVideoDecoderFactory:
    org.webrtc.Predicate defaultAllowedPredicate -> defaultAllowedPredicate
    47:48:void <init>(org.webrtc.EglBase$Context) -> <init>
    18:18:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    18:18:org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo) -> createDecoder
    22:22:void <clinit>() -> <clinit>
org.webrtc.PlatformSoftwareVideoDecoderFactory$1 -> org.webrtc.PlatformSoftwareVideoDecoderFactory$1:
    java.lang.String[] prefixWhitelist -> prefixWhitelist
    23:25:void <init>() -> <init>
    30:36:boolean test(android.media.MediaCodecInfo) -> test
    23:23:boolean test(java.lang.Object) -> test
org.webrtc.Predicate -> org.webrtc.Predicate:
    boolean test(java.lang.Object) -> test
    35:35:org.webrtc.Predicate or(org.webrtc.Predicate) -> or
    52:52:org.webrtc.Predicate and(org.webrtc.Predicate) -> and
    66:66:org.webrtc.Predicate negate() -> negate
org.webrtc.Predicate$1 -> org.webrtc.Predicate$1:
    org.webrtc.Predicate val$other -> val$other
    org.webrtc.Predicate this$0 -> this$0
    35:35:void <init>(org.webrtc.Predicate,org.webrtc.Predicate) -> <init>
    38:38:boolean test(java.lang.Object) -> test
org.webrtc.Predicate$2 -> org.webrtc.Predicate$2:
    org.webrtc.Predicate val$other -> val$other
    org.webrtc.Predicate this$0 -> this$0
    52:52:void <init>(org.webrtc.Predicate,org.webrtc.Predicate) -> <init>
    55:55:boolean test(java.lang.Object) -> test
org.webrtc.Predicate$3 -> org.webrtc.Predicate$3:
    org.webrtc.Predicate this$0 -> this$0
    66:66:void <init>(org.webrtc.Predicate) -> <init>
    69:69:boolean test(java.lang.Object) -> test
org.webrtc.RTCStats -> org.webrtc.RTCStats:
    long timestampUs -> timestampUs
    java.lang.String type -> type
    java.lang.String id -> id
    java.util.Map members -> members
    29:34:void <init>(long,java.lang.String,java.lang.String,java.util.Map) -> <init>
    38:38:double getTimestampUs() -> getTimestampUs
    44:44:java.lang.String getType() -> getType
    50:50:java.lang.String getId() -> getId
    67:67:java.util.Map getMembers() -> getMembers
    72:85:java.lang.String toString() -> toString
    89:109:java.lang.String toJsonString() -> toJsonString
    113:129:void appendValue(java.lang.StringBuilder,java.lang.Object) -> appendValue
    135:135:org.webrtc.RTCStats create(long,java.lang.String,java.lang.String,java.util.Map) -> create
org.webrtc.RTCStatsCollectorCallback -> org.webrtc.RTCStatsCollectorCallback:
    void onStatsDelivered(org.webrtc.RTCStatsReport) -> onStatsDelivered
org.webrtc.RTCStatsReport -> org.webrtc.RTCStatsReport:
    long timestampUs -> timestampUs
    java.util.Map stats -> stats
    24:27:void <init>(long,java.util.Map) -> <init>
    31:31:double getTimestampUs() -> getTimestampUs
    37:37:java.util.Map getStatsMap() -> getStatsMap
    41:52:java.lang.String toJsonString() -> toJsonString
    57:68:java.lang.String toString() -> toString
    75:75:org.webrtc.RTCStatsReport create(long,java.util.Map) -> create
org.webrtc.RefCountDelegate -> org.webrtc.RefCountDelegate:
    java.util.concurrent.atomic.AtomicInteger refCount -> refCount
    java.lang.Runnable releaseCallback -> releaseCallback
    20:28:void <init>(java.lang.Runnable) -> <init>
    32:33:void retain() -> retain
    37:40:void release() -> release
org.webrtc.RefCounted -> org.webrtc.RefCounted:
    void retain() -> retain
    void release() -> release
org.webrtc.RendererCommon -> org.webrtc.RendererCommon:
    float BALANCED_VISIBLE_FRACTION -> BALANCED_VISIBLE_FRACTION
    20:20:void <init>() -> <init>
    128:144:float[] getLayoutMatrix(boolean,float,float) -> getLayoutMatrix
    150:159:android.graphics.Matrix convertMatrixToAndroidGraphicsMatrix(float[]) -> convertMatrixToAndroidGraphicsMatrix
    164:189:float[] convertMatrixFromAndroidGraphicsMatrix(android.graphics.Matrix) -> convertMatrixFromAndroidGraphicsMatrix
    197:197:android.graphics.Point getDisplaySize(org.webrtc.RendererCommon$ScalingType,float,int,int) -> getDisplaySize
    208:213:void adjustOrigin(float[]) -> adjustOrigin
    220:228:float convertScalingTypeToVisibleFraction(org.webrtc.RendererCommon$ScalingType) -> convertScalingTypeToVisibleFraction
    239:247:android.graphics.Point getDisplaySize(float,float,int,int) -> getDisplaySize
    120:120:void <clinit>() -> <clinit>
org.webrtc.RendererCommon$1 -> org.webrtc.RendererCommon$1:
    int[] $SwitchMap$org$webrtc$RendererCommon$ScalingType -> $SwitchMap$org$webrtc$RendererCommon$ScalingType
    220:220:void <clinit>() -> <clinit>
org.webrtc.RendererCommon$GlDrawer -> org.webrtc.RendererCommon$GlDrawer:
    void drawOes(int,float[],int,int,int,int,int,int) -> drawOes
    void drawRgb(int,float[],int,int,int,int,int,int) -> drawRgb
    void drawYuv(int[],float[],int,int,int,int,int,int) -> drawYuv
    void release() -> release
org.webrtc.RendererCommon$RendererEvents -> org.webrtc.RendererCommon$RendererEvents:
    void onFirstFrameRendered() -> onFirstFrameRendered
    void onFrameResolutionChanged(int,int,int) -> onFrameResolutionChanged
org.webrtc.RendererCommon$ScalingType -> org.webrtc.RendererCommon$ScalingType:
    org.webrtc.RendererCommon$ScalingType SCALE_ASPECT_FIT -> SCALE_ASPECT_FIT
    org.webrtc.RendererCommon$ScalingType SCALE_ASPECT_FILL -> SCALE_ASPECT_FILL
    org.webrtc.RendererCommon$ScalingType SCALE_ASPECT_BALANCED -> SCALE_ASPECT_BALANCED
    org.webrtc.RendererCommon$ScalingType[] $VALUES -> $VALUES
    117:117:org.webrtc.RendererCommon$ScalingType[] values() -> values
    117:117:org.webrtc.RendererCommon$ScalingType valueOf(java.lang.String) -> valueOf
    117:117:void <init>(java.lang.String,int) -> <init>
    117:117:void <clinit>() -> <clinit>
org.webrtc.RendererCommon$VideoLayoutMeasure -> org.webrtc.RendererCommon$VideoLayoutMeasure:
    org.webrtc.RendererCommon$ScalingType scalingTypeMatchOrientation -> scalingTypeMatchOrientation
    org.webrtc.RendererCommon$ScalingType scalingTypeMismatchOrientation -> scalingTypeMismatchOrientation
    63:68:void <init>() -> <init>
    71:73:void setScalingType(org.webrtc.RendererCommon$ScalingType) -> setScalingType
    77:79:void setScalingType(org.webrtc.RendererCommon$ScalingType,org.webrtc.RendererCommon$ScalingType) -> setScalingType
    83:104:android.graphics.Point measure(int,int,int,int) -> measure
org.webrtc.RtcCertificatePem -> org.webrtc.RtcCertificatePem:
    java.lang.String privateKey -> privateKey
    java.lang.String certificate -> certificate
    long DEFAULT_EXPIRY -> DEFAULT_EXPIRY
    28:31:void <init>(java.lang.String,java.lang.String) -> <init>
    35:35:java.lang.String getPrivateKey() -> getPrivateKey
    40:40:java.lang.String getCertificate() -> getCertificate
    48:48:org.webrtc.RtcCertificatePem generateCertificate() -> generateCertificate
    56:56:org.webrtc.RtcCertificatePem generateCertificate(org.webrtc.PeerConnection$KeyType) -> generateCertificate
    64:64:org.webrtc.RtcCertificatePem generateCertificate(long) -> generateCertificate
    70:70:org.webrtc.RtcCertificatePem generateCertificate(org.webrtc.PeerConnection$KeyType,long) -> generateCertificate
    org.webrtc.RtcCertificatePem nativeGenerateCertificate(org.webrtc.PeerConnection$KeyType,long) -> nativeGenerateCertificate
org.webrtc.RtpParameters -> org.webrtc.RtpParameters:
    java.lang.String transactionId -> transactionId
    org.webrtc.RtpParameters$Rtcp rtcp -> rtcp
    java.util.List headerExtensions -> headerExtensions
    java.util.List encodings -> encodings
    java.util.List codecs -> codecs
    262:268:void <init>(java.lang.String,org.webrtc.RtpParameters$Rtcp,java.util.List,java.util.List,java.util.List) -> <init>
    272:272:java.lang.String getTransactionId() -> getTransactionId
    277:277:org.webrtc.RtpParameters$Rtcp getRtcp() -> getRtcp
    282:282:java.util.List getHeaderExtensions() -> getHeaderExtensions
    287:287:java.util.List getEncodings() -> getEncodings
    292:292:java.util.List getCodecs() -> getCodecs
org.webrtc.RtpParameters$Codec -> org.webrtc.RtpParameters$Codec:
    int payloadType -> payloadType
    java.lang.String name -> name
    org.webrtc.MediaStreamTrack$MediaType kind -> kind
    java.lang.Integer clockRate -> clockRate
    java.lang.Integer numChannels -> numChannels
    java.util.Map parameters -> parameters
    154:161:void <init>(int,java.lang.String,org.webrtc.MediaStreamTrack$MediaType,java.lang.Integer,java.lang.Integer,java.util.Map) -> <init>
    165:165:int getPayloadType() -> getPayloadType
    170:170:java.lang.String getName() -> getName
    175:175:org.webrtc.MediaStreamTrack$MediaType getKind() -> getKind
    180:180:java.lang.Integer getClockRate() -> getClockRate
    185:185:java.lang.Integer getNumChannels() -> getNumChannels
    190:190:java.util.Map getParameters() -> getParameters
org.webrtc.RtpParameters$Encoding -> org.webrtc.RtpParameters$Encoding:
    java.lang.String rid -> rid
    boolean active -> active
    java.lang.Integer maxBitrateBps -> maxBitrateBps
    java.lang.Integer minBitrateBps -> minBitrateBps
    java.lang.Integer maxFramerate -> maxFramerate
    java.lang.Integer numTemporalLayers -> numTemporalLayers
    java.lang.Double scaleResolutionDownBy -> scaleResolutionDownBy
    java.lang.Long ssrc -> ssrc
    java.lang.Integer sei_times -> sei_times
    java.lang.String sei_content -> sei_content
    37:62:void <init>(java.lang.String,boolean,java.lang.Double) -> <init>
    37:78:void <init>(java.lang.String,boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Double,java.lang.Long,java.lang.Integer,java.lang.String) -> <init>
    83:83:java.lang.String getRid() -> getRid
    88:88:boolean getActive() -> getActive
    94:94:java.lang.Integer getMaxBitrateBps() -> getMaxBitrateBps
    100:100:java.lang.Integer getMinBitrateBps() -> getMinBitrateBps
    106:106:java.lang.Integer getMaxFramerate() -> getMaxFramerate
    112:112:java.lang.Integer getNumTemporalLayers() -> getNumTemporalLayers
    118:118:java.lang.Double getScaleResolutionDownBy() -> getScaleResolutionDownBy
    123:123:java.lang.Long getSsrc() -> getSsrc
    129:129:java.lang.Integer getSeiTimes() -> getSeiTimes
    134:134:java.lang.String getSeiContent() -> getSeiContent
org.webrtc.RtpParameters$HeaderExtension -> org.webrtc.RtpParameters$HeaderExtension:
    java.lang.String uri -> uri
    int id -> id
    boolean encrypted -> encrypted
    226:230:void <init>(java.lang.String,int,boolean) -> <init>
    234:234:java.lang.String getUri() -> getUri
    239:239:int getId() -> getId
    244:244:boolean getEncrypted() -> getEncrypted
org.webrtc.RtpParameters$Rtcp -> org.webrtc.RtpParameters$Rtcp:
    java.lang.String cname -> cname
    boolean reducedSize -> reducedSize
    201:204:void <init>(java.lang.String,boolean) -> <init>
    208:208:java.lang.String getCname() -> getCname
    213:213:boolean getReducedSize() -> getReducedSize
org.webrtc.RtpReceiver -> org.webrtc.RtpReceiver:
    long nativeRtpReceiver -> nativeRtpReceiver
    long nativeObserver -> nativeObserver
    org.webrtc.MediaStreamTrack cachedTrack -> cachedTrack
    32:36:void <init>(long) -> <init>
    40:40:org.webrtc.MediaStreamTrack track() -> track
    44:45:boolean setParameters(org.webrtc.RtpParameters) -> setParameters
    49:50:org.webrtc.RtpParameters getParameters() -> getParameters
    54:55:java.lang.String id() -> id
    60:68:void dispose() -> dispose
    71:77:void SetObserver(org.webrtc.RtpReceiver$Observer) -> SetObserver
    80:83:void setFrameDecryptor(org.webrtc.FrameDecryptorImpl) -> setFrameDecryptor
    86:89:void checkRtpReceiverExists() -> checkRtpReceiverExists
    long nativeGetTrack(long) -> nativeGetTrack
    boolean nativeSetParameters(long,org.webrtc.RtpParameters) -> nativeSetParameters
    org.webrtc.RtpParameters nativeGetParameters(long) -> nativeGetParameters
    java.lang.String nativeGetId(long) -> nativeGetId
    long nativeSetObserver(long,org.webrtc.RtpReceiver$Observer) -> nativeSetObserver
    void nativeUnsetObserver(long,long) -> nativeUnsetObserver
    long nativeWrapFrameDecryptor(org.webrtc.FrameDecryptorImpl$DecryptorObserver) -> nativeWrapFrameDecryptor
    void nativeSetFrameDecryptor(long,long) -> nativeSetFrameDecryptor
org.webrtc.RtpReceiver$Observer -> org.webrtc.RtpReceiver$Observer:
    void onFirstPacketReceived(org.webrtc.MediaStreamTrack$MediaType) -> onFirstPacketReceived
org.webrtc.RtpSender -> org.webrtc.RtpSender:
    long nativeRtpSender -> nativeRtpSender
    org.webrtc.MediaStreamTrack cachedTrack -> cachedTrack
    boolean ownsTrack -> ownsTrack
    org.webrtc.DtmfSender dtmfSender -> dtmfSender
    21:32:void <init>(long) -> <init>
    49:58:boolean setTrack(org.webrtc.MediaStreamTrack,boolean) -> setTrack
    63:63:org.webrtc.MediaStreamTrack track() -> track
    67:68:boolean setParameters(org.webrtc.RtpParameters) -> setParameters
    72:73:org.webrtc.RtpParameters getParameters() -> getParameters
    77:78:java.lang.String id() -> id
    83:83:org.webrtc.DtmfSender dtmf() -> dtmf
    87:90:void setFrameEncryptor(org.webrtc.FrameEncryptorImpl) -> setFrameEncryptor
    93:102:void dispose() -> dispose
    106:107:long getNativeRtpSender() -> getNativeRtpSender
    111:114:void checkRtpSenderExists() -> checkRtpSenderExists
    boolean nativeSetTrack(long,long) -> nativeSetTrack
    long nativeGetTrack(long) -> nativeGetTrack
    long nativeGetDtmfSender(long) -> nativeGetDtmfSender
    boolean nativeSetParameters(long,org.webrtc.RtpParameters) -> nativeSetParameters
    org.webrtc.RtpParameters nativeGetParameters(long) -> nativeGetParameters
    java.lang.String nativeGetId(long) -> nativeGetId
    void nativeSetFrameEncryptor(long,long) -> nativeSetFrameEncryptor
    long nativeWrapFrameEncryptor(org.webrtc.FrameEncryptorImpl$EncryptorObserver) -> nativeWrapFrameEncryptor
org.webrtc.RtpTransceiver -> org.webrtc.RtpTransceiver:
    long nativeRtpTransceiver -> nativeRtpTransceiver
    org.webrtc.RtpSender cachedSender -> cachedSender
    org.webrtc.RtpReceiver cachedReceiver -> cachedReceiver
    117:121:void <init>(long) -> <init>
    128:129:org.webrtc.MediaStreamTrack$MediaType getMediaType() -> getMediaType
    139:140:java.lang.String getMid() -> getMid
    150:150:org.webrtc.RtpSender getSender() -> getSender
    160:160:org.webrtc.RtpReceiver getReceiver() -> getReceiver
    171:172:boolean isStopped() -> isStopped
    181:182:org.webrtc.RtpTransceiver$RtpTransceiverDirection getDirection() -> getDirection
    192:193:org.webrtc.RtpTransceiver$RtpTransceiverDirection getCurrentDirection() -> getCurrentDirection
    204:206:void setDirection(org.webrtc.RtpTransceiver$RtpTransceiverDirection) -> setDirection
    214:216:void stop() -> stop
    220:225:void dispose() -> dispose
    228:231:void checkRtpTransceiverExists() -> checkRtpTransceiverExists
    org.webrtc.MediaStreamTrack$MediaType nativeGetMediaType(long) -> nativeGetMediaType
    java.lang.String nativeGetMid(long) -> nativeGetMid
    org.webrtc.RtpSender nativeGetSender(long) -> nativeGetSender
    org.webrtc.RtpReceiver nativeGetReceiver(long) -> nativeGetReceiver
    boolean nativeStopped(long) -> nativeStopped
    org.webrtc.RtpTransceiver$RtpTransceiverDirection nativeDirection(long) -> nativeDirection
    org.webrtc.RtpTransceiver$RtpTransceiverDirection nativeCurrentDirection(long) -> nativeCurrentDirection
    void nativeStop(long) -> nativeStop
    void nativeSetDirection(long,org.webrtc.RtpTransceiver$RtpTransceiverDirection) -> nativeSetDirection
org.webrtc.RtpTransceiver$RtpTransceiverDirection -> org.webrtc.RtpTransceiver$RtpTransceiverDirection:
    org.webrtc.RtpTransceiver$RtpTransceiverDirection SEND_RECV -> SEND_RECV
    org.webrtc.RtpTransceiver$RtpTransceiverDirection SEND_ONLY -> SEND_ONLY
    org.webrtc.RtpTransceiver$RtpTransceiverDirection RECV_ONLY -> RECV_ONLY
    org.webrtc.RtpTransceiver$RtpTransceiverDirection INACTIVE -> INACTIVE
    int nativeIndex -> nativeIndex
    org.webrtc.RtpTransceiver$RtpTransceiverDirection[] $VALUES -> $VALUES
    37:37:org.webrtc.RtpTransceiver$RtpTransceiverDirection[] values() -> values
    37:37:org.webrtc.RtpTransceiver$RtpTransceiverDirection valueOf(java.lang.String) -> valueOf
    45:47:void <init>(java.lang.String,int,int) -> <init>
    51:51:int getNativeIndex() -> getNativeIndex
    56:61:org.webrtc.RtpTransceiver$RtpTransceiverDirection fromNativeIndex(int) -> fromNativeIndex
    37:41:void <clinit>() -> <clinit>
org.webrtc.RtpTransceiver$RtpTransceiverInit -> org.webrtc.RtpTransceiver$RtpTransceiverInit:
    org.webrtc.RtpTransceiver$RtpTransceiverDirection direction -> direction
    java.util.List streamIds -> streamIds
    java.util.List sendEncodings -> sendEncodings
    78:79:void <init>() -> <init>
    82:83:void <init>(org.webrtc.RtpTransceiver$RtpTransceiverDirection) -> <init>
    86:87:void <init>(org.webrtc.RtpTransceiver$RtpTransceiverDirection,java.util.List) -> <init>
    90:94:void <init>(org.webrtc.RtpTransceiver$RtpTransceiverDirection,java.util.List,java.util.List) -> <init>
    98:98:int getDirectionNativeIndex() -> getDirectionNativeIndex
    103:103:java.util.List getStreamIds() -> getStreamIds
    108:108:java.util.List getSendEncodings() -> getSendEncodings
org.webrtc.SSLCertificateVerifier -> org.webrtc.SSLCertificateVerifier:
    boolean verify(byte[]) -> verify
org.webrtc.ScreenCapturerAndroid -> org.webrtc.ScreenCapturerAndroid:
    int DISPLAY_FLAGS -> DISPLAY_FLAGS
    int VIRTUAL_DISPLAY_DPI -> VIRTUAL_DISPLAY_DPI
    android.content.Intent mediaProjectionPermissionResultData -> mediaProjectionPermissionResultData
    android.media.projection.MediaProjection$Callback mediaProjectionCallback -> mediaProjectionCallback
    int width -> width
    int height -> height
    int frameRate -> frameRate
    android.hardware.display.VirtualDisplay virtualDisplay -> virtualDisplay
    org.webrtc.SurfaceTextureHelper surfaceTextureHelper -> surfaceTextureHelper
    org.webrtc.CapturerObserver capturerObserver -> capturerObserver
    long numCapturedFrames -> numCapturedFrames
    android.media.projection.MediaProjection mediaProjection -> mediaProjection
    boolean isDisposed -> isDisposed
    android.media.projection.MediaProjectionManager mediaProjectionManager -> mediaProjectionManager
    long frameRateIntervalMs -> frameRateIntervalMs
    java.util.Timer mUpdateFrameTimer -> mUpdateFrameTimer
    java.util.TimerTask mUpdateFrameTask -> mUpdateFrameTask
    61:83:void <init>(android.content.Intent,android.media.projection.MediaProjection$Callback) -> <init>
    86:89:void checkNotDisposed() -> checkNotDisposed
    96:111:void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver) -> initialize
    118:138:void startCapture(int,int,int) -> startCapture
    144:166:void stopCapture() -> stopCapture
    172:173:void dispose() -> dispose
    188:214:void changeCaptureFormat(int,int,int) -> changeCaptureFormat
    217:221:void createVirtualDisplay() -> createVirtualDisplay
    226:231:void onFrame(org.webrtc.VideoFrame) -> onFrame
    235:235:boolean isScreencast() -> isScreencast
    239:239:long getNumCapturedFrames() -> getNumCapturedFrames
    41:41:org.webrtc.SurfaceTextureHelper access$000(org.webrtc.ScreenCapturerAndroid) -> access$000
    41:41:java.util.Timer access$100(org.webrtc.ScreenCapturerAndroid) -> access$100
    41:41:org.webrtc.CapturerObserver access$200(org.webrtc.ScreenCapturerAndroid) -> access$200
    41:41:android.hardware.display.VirtualDisplay access$300(org.webrtc.ScreenCapturerAndroid) -> access$300
    41:41:android.hardware.display.VirtualDisplay access$302(org.webrtc.ScreenCapturerAndroid,android.hardware.display.VirtualDisplay) -> access$302
    41:41:android.media.projection.MediaProjection access$400(org.webrtc.ScreenCapturerAndroid) -> access$400
    41:41:android.media.projection.MediaProjection$Callback access$500(org.webrtc.ScreenCapturerAndroid) -> access$500
    41:41:android.media.projection.MediaProjection access$402(org.webrtc.ScreenCapturerAndroid,android.media.projection.MediaProjection) -> access$402
    41:41:java.util.TimerTask access$600(org.webrtc.ScreenCapturerAndroid) -> access$600
    41:41:long access$700(org.webrtc.ScreenCapturerAndroid) -> access$700
    41:41:void access$800(org.webrtc.ScreenCapturerAndroid) -> access$800
org.webrtc.ScreenCapturerAndroid$1 -> org.webrtc.ScreenCapturerAndroid$1:
    org.webrtc.ScreenCapturerAndroid this$0 -> this$0
    63:63:void <init>(org.webrtc.ScreenCapturerAndroid) -> <init>
    66:67:void run() -> run
org.webrtc.ScreenCapturerAndroid$2 -> org.webrtc.ScreenCapturerAndroid$2:
    org.webrtc.ScreenCapturerAndroid this$0 -> this$0
    145:145:void <init>(org.webrtc.ScreenCapturerAndroid) -> <init>
    148:164:void run() -> run
org.webrtc.ScreenCapturerAndroid$3 -> org.webrtc.ScreenCapturerAndroid$3:
    org.webrtc.ScreenCapturerAndroid this$0 -> this$0
    203:203:void <init>(org.webrtc.ScreenCapturerAndroid) -> <init>
    206:212:void run() -> run
org.webrtc.SdpObserver -> org.webrtc.SdpObserver:
    void onCreateSuccess(org.webrtc.SessionDescription) -> onCreateSuccess
    void onSetSuccess() -> onSetSuccess
    void onCreateFailure(java.lang.String) -> onCreateFailure
    void onSetFailure(java.lang.String) -> onSetFailure
org.webrtc.SessionDescription -> org.webrtc.SessionDescription:
    org.webrtc.SessionDescription$Type type -> type
    java.lang.String description -> description
    41:44:void <init>(org.webrtc.SessionDescription$Type,java.lang.String) -> <init>
    48:48:java.lang.String getDescription() -> getDescription
    53:53:java.lang.String getTypeInCanonicalForm() -> getTypeInCanonicalForm
org.webrtc.SessionDescription$Type -> org.webrtc.SessionDescription$Type:
    org.webrtc.SessionDescription$Type OFFER -> OFFER
    org.webrtc.SessionDescription$Type PRANSWER -> PRANSWER
    org.webrtc.SessionDescription$Type ANSWER -> ANSWER
    org.webrtc.SessionDescription$Type[] $VALUES -> $VALUES
    22:22:org.webrtc.SessionDescription$Type[] values() -> values
    22:22:org.webrtc.SessionDescription$Type valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    28:28:java.lang.String canonicalForm() -> canonicalForm
    33:33:org.webrtc.SessionDescription$Type fromCanonicalForm(java.lang.String) -> fromCanonicalForm
    22:25:void <clinit>() -> <clinit>
org.webrtc.Size -> org.webrtc.Size:
    int width -> width
    int height -> height
    21:24:void <init>(int,int) -> <init>
    28:28:java.lang.String toString() -> toString
    33:37:boolean equals(java.lang.Object) -> equals
    43:43:int hashCode() -> hashCode
org.webrtc.SoftwareVideoDecoderFactory -> org.webrtc.SoftwareVideoDecoderFactory:
    18:18:void <init>() -> <init>
    23:23:org.webrtc.VideoDecoder createDecoder(java.lang.String) -> createDecoder
    29:39:org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo) -> createDecoder
    44:44:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    48:58:org.webrtc.VideoCodecInfo[] supportedCodecs() -> supportedCodecs
org.webrtc.SoftwareVideoEncoderFactory -> org.webrtc.SoftwareVideoEncoderFactory:
    18:18:void <init>() -> <init>
    22:32:org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo) -> createEncoder
    37:37:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
    41:50:org.webrtc.VideoCodecInfo[] supportedCodecs() -> supportedCodecs
org.webrtc.StatsObserver -> org.webrtc.StatsObserver:
    void onComplete(org.webrtc.StatsReport[]) -> onComplete
org.webrtc.StatsReport -> org.webrtc.StatsReport:
    java.lang.String id -> id
    java.lang.String type -> type
    double timestamp -> timestamp
    org.webrtc.StatsReport$Value[] values -> values
    41:46:void <init>(java.lang.String,java.lang.String,double,org.webrtc.StatsReport$Value[]) -> <init>
    50:61:java.lang.String toString() -> toString
org.webrtc.StatsReport$Value -> org.webrtc.StatsReport$Value:
    java.lang.String name -> name
    java.lang.String value -> value
    21:24:void <init>(java.lang.String,java.lang.String) -> <init>
    28:30:java.lang.String toString() -> toString
org.webrtc.SurfaceEglRenderer -> org.webrtc.SurfaceEglRenderer:
    java.lang.String TAG -> TAG
    org.webrtc.RendererCommon$RendererEvents rendererEvents -> rendererEvents
    java.lang.Object layoutLock -> layoutLock
    boolean isRenderingPaused -> isRenderingPaused
    boolean isFirstFrameRendered -> isFirstFrameRendered
    int rotatedFrameWidth -> rotatedFrameWidth
    int rotatedFrameHeight -> rotatedFrameHeight
    int frameRotation -> frameRotation
    30:42:void <init>(java.lang.String) -> <init>
    53:62:void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents,int[],org.webrtc.RendererCommon$GlDrawer) -> init
    67:68:void init(org.webrtc.EglBase$Context,int[],org.webrtc.RendererCommon$GlDrawer) -> init
    78:82:void setFpsReduction(float) -> setFpsReduction
    86:90:void disableFpsReduction() -> disableFpsReduction
    94:98:void pauseVideo() -> pauseVideo
    103:105:void onFrame(org.webrtc.VideoFrame) -> onFrame
    110:112:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    116:120:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    124:126:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    130:155:void updateFrameDimensionsAndReportEvents(org.webrtc.VideoFrame) -> updateFrameDimensionsAndReportEvents
    158:159:void logD(java.lang.String) -> logD
org.webrtc.SurfaceTextureHelper -> org.webrtc.SurfaceTextureHelper:
    java.lang.String TAG -> TAG
    android.os.Handler handler -> handler
    org.webrtc.EglBase eglBase -> eglBase
    android.graphics.SurfaceTexture surfaceTexture -> surfaceTexture
    int oesTextureId -> oesTextureId
    org.webrtc.YuvConverter yuvConverter -> yuvConverter
    org.webrtc.TimestampAligner timestampAligner -> timestampAligner
    org.webrtc.VideoSink listener -> listener
    boolean hasPendingTexture -> hasPendingTexture
    boolean isTextureInUse -> isTextureInUse
    boolean isQuitting -> isQuitting
    int frameRotation -> frameRotation
    int textureWidth -> textureWidth
    int textureHeight -> textureHeight
    boolean isScreenCapture -> isScreenCapture
    org.webrtc.VideoSink pendingListener -> pendingListener
    java.lang.Runnable setListenerRunnable -> setListenerRunnable
    48:56:org.webrtc.SurfaceTextureHelper create(java.lang.String,org.webrtc.EglBase$Context,boolean,org.webrtc.YuvConverter) -> create
    77:77:org.webrtc.SurfaceTextureHelper create(java.lang.String,org.webrtc.EglBase$Context) -> create
    87:87:org.webrtc.SurfaceTextureHelper create(java.lang.String,org.webrtc.EglBase$Context,boolean) -> create
    110:154:void <init>(org.webrtc.EglBase$Context,android.os.Handler,boolean,org.webrtc.YuvConverter) -> <init>
    159:168:void setOnFrameAvailableListener(android.graphics.SurfaceTexture,android.graphics.SurfaceTexture$OnFrameAvailableListener,android.os.Handler) -> setOnFrameAvailableListener
    175:180:void startListening(org.webrtc.VideoSink) -> startListening
    187:193:void stopListening() -> stopListening
    200:212:void setTextureSize(int,int) -> setTextureSize
    216:217:void setFrameRotation(int) -> setFrameRotation
    224:224:android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
    229:229:android.os.Handler getHandler() -> getHandler
    236:237:void requestDeliverTextureFrame() -> requestDeliverTextureFrame
    244:254:void returnTextureFrame() -> returnTextureFrame
    257:257:boolean isTextureInUse() -> isTextureInUse
    266:267:void setScreenCapture(boolean) -> setScreenCapture
    275:282:void dispose() -> dispose
    291:291:org.webrtc.VideoFrame$I420Buffer textureToYuv(org.webrtc.VideoFrame$TextureBuffer) -> textureToYuv
    298:301:void updateTexImage() -> updateTexImage
    304:335:void tryDeliverTextureFrame() -> tryDeliverTextureFrame
    338:352:void release() -> release
    277:281:void lambda$dispose$5() -> lambda$dispose$5
    245:253:void lambda$returnTextureFrame$4() -> lambda$returnTextureFrame$4
    216:216:void lambda$setFrameRotation$3(int) -> lambda$setFrameRotation$3
    209:211:void lambda$setTextureSize$2(int,int) -> lambda$setTextureSize$2
    190:192:void lambda$stopListening$1() -> lambda$stopListening$1
    149:153:void lambda$new$0(android.graphics.SurfaceTexture) -> lambda$new$0
    34:34:void <init>(org.webrtc.EglBase$Context,android.os.Handler,boolean,org.webrtc.YuvConverter,org.webrtc.SurfaceTextureHelper$1) -> <init>
    34:34:org.webrtc.VideoSink access$100(org.webrtc.SurfaceTextureHelper) -> access$100
    34:34:org.webrtc.VideoSink access$202(org.webrtc.SurfaceTextureHelper,org.webrtc.VideoSink) -> access$202
    34:34:org.webrtc.VideoSink access$102(org.webrtc.SurfaceTextureHelper,org.webrtc.VideoSink) -> access$102
    34:34:boolean access$300(org.webrtc.SurfaceTextureHelper) -> access$300
    34:34:void access$400(org.webrtc.SurfaceTextureHelper) -> access$400
    34:34:boolean access$302(org.webrtc.SurfaceTextureHelper,boolean) -> access$302
org.webrtc.SurfaceTextureHelper$1 -> org.webrtc.SurfaceTextureHelper$1:
    org.webrtc.EglBase$Context val$sharedContext -> val$sharedContext
    android.os.Handler val$handler -> val$handler
    boolean val$alignTimestamps -> val$alignTimestamps
    org.webrtc.YuvConverter val$yuvConverter -> val$yuvConverter
    java.lang.String val$threadName -> val$threadName
    56:56:void <init>(org.webrtc.EglBase$Context,android.os.Handler,boolean,org.webrtc.YuvConverter,java.lang.String) -> <init>
    61:64:org.webrtc.SurfaceTextureHelper call() -> call
    56:56:java.lang.Object call() -> call
org.webrtc.SurfaceTextureHelper$2 -> org.webrtc.SurfaceTextureHelper$2:
    org.webrtc.SurfaceTextureHelper this$0 -> this$0
    110:110:void <init>(org.webrtc.SurfaceTextureHelper) -> <init>
    113:122:void run() -> run
org.webrtc.SurfaceViewRenderer -> org.webrtc.SurfaceViewRenderer:
    java.lang.String TAG -> TAG
    java.lang.String resourceName -> resourceName
    org.webrtc.RendererCommon$VideoLayoutMeasure videoLayoutMeasure -> videoLayoutMeasure
    org.webrtc.SurfaceEglRenderer eglRenderer -> eglRenderer
    org.webrtc.RendererCommon$RendererEvents rendererEvents -> rendererEvents
    int rotatedFrameWidth -> rotatedFrameWidth
    int rotatedFrameHeight -> rotatedFrameHeight
    boolean enableFixedSize -> enableFixedSize
    int surfaceWidth -> surfaceWidth
    int surfaceHeight -> surfaceHeight
    30:53:void <init>(android.content.Context) -> <init>
    30:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:72:void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents) -> init
    83:88:void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents,int[],org.webrtc.RendererCommon$GlDrawer) -> init
    97:98:void release() -> release
    101:102:void postToRenderThread(java.lang.Runnable) -> postToRenderThread
    115:116:void addFrameListener(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer) -> addFrameListener
    128:129:void addFrameListener(org.webrtc.EglRenderer$FrameListener,float) -> addFrameListener
    132:133:void removeFrameListener(org.webrtc.EglRenderer$FrameListener) -> removeFrameListener
    140:143:void setEnableHardwareScaler(boolean) -> setEnableHardwareScaler
    149:150:void setMirror(boolean) -> setMirror
    156:159:void setScalingType(org.webrtc.RendererCommon$ScalingType) -> setScalingType
    163:166:void setScalingType(org.webrtc.RendererCommon$ScalingType,org.webrtc.RendererCommon$ScalingType) -> setScalingType
    175:176:void setFpsReduction(float) -> setFpsReduction
    179:180:void disableFpsReduction() -> disableFpsReduction
    183:184:void pauseVideo() -> pauseVideo
    189:190:void onFrame(org.webrtc.VideoFrame) -> onFrame
    195:200:void onMeasure(int,int) -> onMeasure
    204:207:void onLayout(boolean,int,int,int,int) -> onLayout
    210:239:void updateSurfaceSize() -> updateSurfaceSize
    244:247:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    250:250:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    253:253:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    257:259:java.lang.String getResourceName() -> getResourceName
    267:268:void clearImage() -> clearImage
    272:275:void onFirstFrameRendered() -> onFirstFrameRendered
    279:291:void onFrameResolutionChanged(int,int,int) -> onFrameResolutionChanged
    294:299:void postOrRun(java.lang.Runnable) -> postOrRun
    302:303:void logD(java.lang.String) -> logD
    286:290:void lambda$onFrameResolutionChanged$0(int,int) -> lambda$onFrameResolutionChanged$0
org.webrtc.TextureBufferImpl -> org.webrtc.TextureBufferImpl:
    int unscaledWidth -> unscaledWidth
    int unscaledHeight -> unscaledHeight
    int width -> width
    int height -> height
    org.webrtc.VideoFrame$TextureBuffer$Type type -> type
    int id -> id
    android.graphics.Matrix transformMatrix -> transformMatrix
    android.os.Handler toI420Handler -> toI420Handler
    org.webrtc.YuvConverter yuvConverter -> yuvConverter
    org.webrtc.RefCountDelegate refCountDelegate -> refCountDelegate
    38:49:void <init>(int,int,org.webrtc.VideoFrame$TextureBuffer$Type,int,android.graphics.Matrix,android.os.Handler,org.webrtc.YuvConverter,java.lang.Runnable) -> <init>
    53:64:void <init>(int,int,int,int,org.webrtc.VideoFrame$TextureBuffer$Type,int,android.graphics.Matrix,android.os.Handler,org.webrtc.YuvConverter,java.lang.Runnable) -> <init>
    68:68:org.webrtc.VideoFrame$TextureBuffer$Type getType() -> getType
    73:73:int getTextureId() -> getTextureId
    78:79:void setTextureId(int) -> setTextureId
    83:84:void setType(org.webrtc.VideoFrame$TextureBuffer$Type) -> setType
    88:88:android.graphics.Matrix getTransformMatrix() -> getTransformMatrix
    93:93:int getWidth() -> getWidth
    98:98:int getHeight() -> getHeight
    103:103:org.webrtc.VideoFrame$I420Buffer toI420() -> toI420
    109:110:void retain() -> retain
    114:115:void release() -> release
    120:129:org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int) -> cropAndScale
    137:137:int getUnscaledWidth() -> getUnscaledWidth
    145:145:int getUnscaledHeight() -> getUnscaledHeight
    149:149:android.os.Handler getToI420Handler() -> getToI420Handler
    153:153:org.webrtc.YuvConverter getYuvConverter() -> getYuvConverter
    163:163:org.webrtc.TextureBufferImpl applyTransformMatrix(android.graphics.Matrix,int,int) -> applyTransformMatrix
    170:173:org.webrtc.TextureBufferImpl applyTransformMatrix(android.graphics.Matrix,int,int,int,int) -> applyTransformMatrix
    104:104:org.webrtc.VideoFrame$I420Buffer lambda$toI420$0() -> lambda$toI420$0
org.webrtc.TextureViewRenderer -> org.webrtc.TextureViewRenderer:
    java.lang.String TAG -> TAG
    java.lang.String resourceName -> resourceName
    org.webrtc.RendererCommon$VideoLayoutMeasure videoLayoutMeasure -> videoLayoutMeasure
    org.webrtc.EglRenderer eglRenderer -> eglRenderer
    org.webrtc.RendererCommon$RendererEvents rendererEvents -> rendererEvents
    int rotatedFrameWidth -> rotatedFrameWidth
    int rotatedFrameHeight -> rotatedFrameHeight
    int frameRotation -> frameRotation
    int surfaceWidth -> surfaceWidth
    int surfaceHeight -> surfaceHeight
    boolean isFirstFrameRendered -> isFirstFrameRendered
    java.lang.Object layoutLock -> layoutLock
    android.os.Handler uiThreadHandler -> uiThreadHandler
    23:49:void <init>(android.content.Context) -> <init>
    23:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:67:void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents) -> init
    78:83:void init(org.webrtc.EglBase$Context,org.webrtc.RendererCommon$RendererEvents,int[],org.webrtc.RendererCommon$GlDrawer) -> init
    93:94:void release() -> release
    97:98:void postToRenderThread(java.lang.Runnable) -> postToRenderThread
    111:112:void addFrameListener(org.webrtc.EglRenderer$FrameListener,float,org.webrtc.RendererCommon$GlDrawer) -> addFrameListener
    124:125:void addFrameListener(org.webrtc.EglRenderer$FrameListener,float) -> addFrameListener
    128:129:void removeFrameListener(org.webrtc.EglRenderer$FrameListener) -> removeFrameListener
    135:136:void setMirror(boolean) -> setMirror
    142:145:void setScalingType(org.webrtc.RendererCommon$ScalingType) -> setScalingType
    149:152:void setScalingType(org.webrtc.RendererCommon$ScalingType,org.webrtc.RendererCommon$ScalingType) -> setScalingType
    161:162:void setFpsReduction(float) -> setFpsReduction
    165:166:void disableFpsReduction() -> disableFpsReduction
    169:170:void pauseVideo() -> pauseVideo
    175:177:void onFrame(org.webrtc.VideoFrame) -> onFrame
    182:187:void onMeasure(int,int) -> onMeasure
    191:195:void onLayout(boolean,int,int,int,int) -> onLayout
    198:229:void updateSurfaceSize() -> updateSurfaceSize
    234:239:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    243:252:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    257:259:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    263:265:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    269:271:java.lang.String getResourceName() -> getResourceName
    279:280:void clearImage() -> clearImage
    283:288:void postOrRun(java.lang.Runnable) -> postOrRun
    292:322:void updateFrameDimensionsAndReportEvents(org.webrtc.VideoFrame) -> updateFrameDimensionsAndReportEvents
    325:326:void logD(java.lang.String) -> logD
    329:330:void logV(java.lang.String) -> logV
    17:17:void access$000(org.webrtc.TextureViewRenderer) -> access$000
org.webrtc.TextureViewRenderer$1 -> org.webrtc.TextureViewRenderer$1:
    java.util.concurrent.CountDownLatch val$completionLatch -> val$completionLatch
    org.webrtc.TextureViewRenderer this$0 -> this$0
    245:245:void <init>(org.webrtc.TextureViewRenderer,java.util.concurrent.CountDownLatch) -> <init>
    248:249:void run() -> run
org.webrtc.TextureViewRenderer$2 -> org.webrtc.TextureViewRenderer$2:
    org.webrtc.TextureViewRenderer this$0 -> this$0
    313:313:void <init>(org.webrtc.TextureViewRenderer) -> <init>
    316:318:void run() -> run
org.webrtc.ThreadUtils -> org.webrtc.ThreadUtils:
    21:21:void <init>() -> <init>
    46:49:void checkIsOnMainThread() -> checkIsOnMainThread
    65:80:void executeUninterruptibly(org.webrtc.ThreadUtils$BlockingOperation) -> executeUninterruptibly
    83:102:boolean joinUninterruptibly(java.lang.Thread,long) -> joinUninterruptibly
    106:112:void joinUninterruptibly(java.lang.Thread) -> joinUninterruptibly
    115:121:void awaitUninterruptibly(java.util.concurrent.CountDownLatch) -> awaitUninterruptibly
    124:144:boolean awaitUninterruptibly(java.util.concurrent.CountDownLatch,long) -> awaitUninterruptibly
    152:189:java.lang.Object invokeAtFrontUninterruptibly(android.os.Handler,java.util.concurrent.Callable) -> invokeAtFrontUninterruptibly
    196:203:void invokeAtFrontUninterruptibly(android.os.Handler,java.lang.Runnable) -> invokeAtFrontUninterruptibly
    207:210:java.lang.StackTraceElement[] concatStackTraces(java.lang.StackTraceElement[],java.lang.StackTraceElement[]) -> concatStackTraces
org.webrtc.ThreadUtils$1 -> org.webrtc.ThreadUtils$1:
    java.lang.Thread val$thread -> val$thread
    106:106:void <init>(java.lang.Thread) -> <init>
    109:110:void run() -> run
org.webrtc.ThreadUtils$1CaughtException -> org.webrtc.ThreadUtils$1CaughtException:
    java.lang.Exception e -> e
    160:160:void <init>() -> <init>
org.webrtc.ThreadUtils$1Result -> org.webrtc.ThreadUtils$1Result:
    java.lang.Object value -> value
    163:163:void <init>() -> <init>
org.webrtc.ThreadUtils$2 -> org.webrtc.ThreadUtils$2:
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    115:115:void <init>(java.util.concurrent.CountDownLatch) -> <init>
    118:119:void run() -> run
org.webrtc.ThreadUtils$3 -> org.webrtc.ThreadUtils$3:
    org.webrtc.ThreadUtils$1Result val$result -> val$result
    java.util.concurrent.Callable val$callable -> val$callable
    org.webrtc.ThreadUtils$1CaughtException val$caughtException -> val$caughtException
    java.util.concurrent.CountDownLatch val$barrier -> val$barrier
    169:169:void <init>(org.webrtc.ThreadUtils$1Result,java.util.concurrent.Callable,org.webrtc.ThreadUtils$1CaughtException,java.util.concurrent.CountDownLatch) -> <init>
    173:178:void run() -> run
org.webrtc.ThreadUtils$4 -> org.webrtc.ThreadUtils$4:
    java.lang.Runnable val$runner -> val$runner
    196:196:void <init>(java.lang.Runnable) -> <init>
    199:200:java.lang.Void call() -> call
    196:196:java.lang.Object call() -> call
org.webrtc.ThreadUtils$BlockingOperation -> org.webrtc.ThreadUtils$BlockingOperation:
    void run() -> run
org.webrtc.ThreadUtils$ThreadChecker -> org.webrtc.ThreadUtils$ThreadChecker:
    java.lang.Thread thread -> thread
    25:26:void <init>() -> <init>
    29:35:void checkIsOnValidThread() -> checkIsOnValidThread
    38:39:void detachThread() -> detachThread
org.webrtc.TimestampAligner -> org.webrtc.TimestampAligner:
    long nativeTimestampAligner -> nativeTimestampAligner
    21:30:void <init>() -> <init>
    27:27:long getRtcTimeNanos() -> getRtcTimeNanos
    38:39:long translateTimestamp(long) -> translateTimestamp
    44:47:void dispose() -> dispose
    50:53:void checkNativeAlignerExists() -> checkNativeAlignerExists
    long nativeRtcTimeNanos() -> nativeRtcTimeNanos
    long nativeCreateTimestampAligner() -> nativeCreateTimestampAligner
    void nativeReleaseTimestampAligner(long) -> nativeReleaseTimestampAligner
    long nativeTranslateTimestamp(long,long) -> nativeTranslateTimestamp
org.webrtc.TurnCustomizer -> org.webrtc.TurnCustomizer:
    long nativeTurnCustomizer -> nativeTurnCustomizer
    17:19:void <init>(long) -> <init>
    22:25:void dispose() -> dispose
    void nativeFreeTurnCustomizer(long) -> nativeFreeTurnCustomizer
    32:33:long getNativeTurnCustomizer() -> getNativeTurnCustomizer
    37:40:void checkTurnCustomizerExists() -> checkTurnCustomizerExists
org.webrtc.VideoCapturer -> org.webrtc.VideoCapturer:
    void initialize(org.webrtc.SurfaceTextureHelper,android.content.Context,org.webrtc.CapturerObserver) -> initialize
    void startCapture(int,int,int) -> startCapture
    void stopCapture() -> stopCapture
    void changeCaptureFormat(int,int,int) -> changeCaptureFormat
    void dispose() -> dispose
    boolean isScreencast() -> isScreencast
org.webrtc.VideoCodecInfo -> org.webrtc.VideoCodecInfo:
    java.lang.String H264_FMTP_PROFILE_LEVEL_ID -> H264_FMTP_PROFILE_LEVEL_ID
    java.lang.String H264_FMTP_LEVEL_ASYMMETRY_ALLOWED -> H264_FMTP_LEVEL_ASYMMETRY_ALLOWED
    java.lang.String H264_FMTP_PACKETIZATION_MODE -> H264_FMTP_PACKETIZATION_MODE
    java.lang.String H264_PROFILE_CONSTRAINED_BASELINE -> H264_PROFILE_CONSTRAINED_BASELINE
    java.lang.String H264_PROFILE_CONSTRAINED_HIGH -> H264_PROFILE_CONSTRAINED_HIGH
    java.lang.String H264_LEVEL_3_1 -> H264_LEVEL_3_1
    java.lang.String H264_CONSTRAINED_HIGH_3_1 -> H264_CONSTRAINED_HIGH_3_1
    java.lang.String H264_CONSTRAINED_BASELINE_3_1 -> H264_CONSTRAINED_BASELINE_3_1
    java.lang.String name -> name
    java.util.Map params -> params
    int payload -> payload
    40:44:void <init>(java.lang.String,java.util.Map) -> <init>
    47:51:void <init>(int,java.lang.String,java.util.Map) -> <init>
    55:63:boolean equals(java.lang.Object) -> equals
    68:69:int hashCode() -> hashCode
    74:74:java.lang.String getName() -> getName
    79:79:java.util.Map getParams() -> getParams
org.webrtc.VideoCodecStatus -> org.webrtc.VideoCodecStatus:
    org.webrtc.VideoCodecStatus REQUEST_SLI -> REQUEST_SLI
    org.webrtc.VideoCodecStatus NO_OUTPUT -> NO_OUTPUT
    org.webrtc.VideoCodecStatus OK -> OK
    org.webrtc.VideoCodecStatus ERROR -> ERROR
    org.webrtc.VideoCodecStatus LEVEL_EXCEEDED -> LEVEL_EXCEEDED
    org.webrtc.VideoCodecStatus MEMORY -> MEMORY
    org.webrtc.VideoCodecStatus ERR_PARAMETER -> ERR_PARAMETER
    org.webrtc.VideoCodecStatus ERR_SIZE -> ERR_SIZE
    org.webrtc.VideoCodecStatus TIMEOUT -> TIMEOUT
    org.webrtc.VideoCodecStatus UNINITIALIZED -> UNINITIALIZED
    org.webrtc.VideoCodecStatus ERR_REQUEST_SLI -> ERR_REQUEST_SLI
    org.webrtc.VideoCodecStatus FALLBACK_SOFTWARE -> FALLBACK_SOFTWARE
    org.webrtc.VideoCodecStatus TARGET_BITRATE_OVERSHOOT -> TARGET_BITRATE_OVERSHOOT
    int number -> number
    org.webrtc.VideoCodecStatus[] $VALUES -> $VALUES
    17:17:org.webrtc.VideoCodecStatus[] values() -> values
    17:17:org.webrtc.VideoCodecStatus valueOf(java.lang.String) -> valueOf
    34:36:void <init>(java.lang.String,int,int) -> <init>
    40:40:int getNumber() -> getNumber
    17:30:void <clinit>() -> <clinit>
org.webrtc.VideoCodecType -> org.webrtc.VideoCodecType:
    org.webrtc.VideoCodecType VP8 -> VP8
    org.webrtc.VideoCodecType VP9 -> VP9
    org.webrtc.VideoCodecType H264 -> H264
    java.lang.String mimeType -> mimeType
    org.webrtc.VideoCodecType[] $VALUES -> $VALUES
    14:14:org.webrtc.VideoCodecType[] values() -> values
    14:14:org.webrtc.VideoCodecType valueOf(java.lang.String) -> valueOf
    21:23:void <init>(java.lang.String,int,java.lang.String) -> <init>
    26:26:java.lang.String mimeType() -> mimeType
    14:17:void <clinit>() -> <clinit>
org.webrtc.VideoDecoder -> org.webrtc.VideoDecoder:
    73:73:long createNativeVideoDecoder() -> createNativeVideoDecoder
    org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback) -> initDecode
    org.webrtc.VideoCodecStatus release() -> release
    org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo) -> decode
    boolean getPrefersLateDecoding() -> getPrefersLateDecoding
    java.lang.String getImplementationName() -> getImplementationName
org.webrtc.VideoDecoder$Callback -> org.webrtc.VideoDecoder$Callback:
    void onDecodedFrame(org.webrtc.VideoFrame,java.lang.Integer,java.lang.Integer) -> onDecodedFrame
org.webrtc.VideoDecoder$DecodeInfo -> org.webrtc.VideoDecoder$DecodeInfo:
    boolean isMissingFrames -> isMissingFrames
    long renderTimeMs -> renderTimeMs
    37:40:void <init>(boolean,long) -> <init>
org.webrtc.VideoDecoder$Settings -> org.webrtc.VideoDecoder$Settings:
    int numberOfCores -> numberOfCores
    int width -> width
    int height -> height
    25:29:void <init>(int,int,int) -> <init>
org.webrtc.VideoDecoderFactory -> org.webrtc.VideoDecoderFactory:
    24:24:org.webrtc.VideoDecoder createDecoder(java.lang.String) -> createDecoder
    31:31:org.webrtc.VideoDecoder createDecoder(org.webrtc.VideoCodecInfo) -> createDecoder
    39:39:org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
org.webrtc.VideoDecoderFallback -> org.webrtc.VideoDecoderFallback:
    org.webrtc.VideoDecoder fallback -> fallback
    org.webrtc.VideoDecoder primary -> primary
    20:23:void <init>(org.webrtc.VideoDecoder,org.webrtc.VideoDecoder) -> <init>
    27:27:long createNativeVideoDecoder() -> createNativeVideoDecoder
    long nativeCreateDecoder(org.webrtc.VideoDecoder,org.webrtc.VideoDecoder) -> nativeCreateDecoder
    16:16:java.lang.String getImplementationName() -> getImplementationName
    16:16:boolean getPrefersLateDecoding() -> getPrefersLateDecoding
    16:16:org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo) -> decode
    16:16:org.webrtc.VideoCodecStatus release() -> release
    16:16:org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback) -> initDecode
org.webrtc.VideoDecoderWrapper -> org.webrtc.VideoDecoderWrapper:
    18:18:void <init>() -> <init>
    21:21:org.webrtc.VideoDecoder$Callback createDecoderCallback(long) -> createDecoderCallback
    void nativeOnDecodedFrame(long,org.webrtc.VideoFrame,java.lang.Integer,java.lang.Integer) -> nativeOnDecodedFrame
    22:22:void lambda$createDecoderCallback$0(long,org.webrtc.VideoFrame,java.lang.Integer,java.lang.Integer) -> lambda$createDecoderCallback$0
org.webrtc.VideoEncoder -> org.webrtc.VideoEncoder:
    228:228:long createNativeVideoEncoder() -> createNativeVideoEncoder
    236:236:boolean isHardwareEncoder() -> isHardwareEncoder
    org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback) -> initEncode
    org.webrtc.VideoCodecStatus release() -> release
    org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo) -> encode
    org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int) -> setRateAllocation
    org.webrtc.VideoEncoder$ScalingSettings getScalingSettings() -> getScalingSettings
    java.lang.String getImplementationName() -> getImplementationName
org.webrtc.VideoEncoder$BitrateAllocation -> org.webrtc.VideoEncoder$BitrateAllocation:
    int[][] bitratesBbs -> bitratesBbs
    108:110:void <init>(int[][]) -> <init>
    116:120:int getSpatialLayerSum(int) -> getSpatialLayerSum
    127:133:int getSum() -> getSum
org.webrtc.VideoEncoder$Callback -> org.webrtc.VideoEncoder$Callback:
    void onEncodedFrame(org.webrtc.EncodedImage,org.webrtc.VideoEncoder$CodecSpecificInfo) -> onEncodedFrame
org.webrtc.VideoEncoder$CodecSpecificInfo -> org.webrtc.VideoEncoder$CodecSpecificInfo:
    87:87:void <init>() -> <init>
org.webrtc.VideoEncoder$CodecSpecificInfoH264 -> org.webrtc.VideoEncoder$CodecSpecificInfoH264:
    93:93:void <init>() -> <init>
org.webrtc.VideoEncoder$CodecSpecificInfoVP8 -> org.webrtc.VideoEncoder$CodecSpecificInfoVP8:
    89:89:void <init>() -> <init>
org.webrtc.VideoEncoder$CodecSpecificInfoVP9 -> org.webrtc.VideoEncoder$CodecSpecificInfoVP9:
    91:91:void <init>() -> <init>
org.webrtc.VideoEncoder$EncodeInfo -> org.webrtc.VideoEncoder$EncodeInfo:
    org.webrtc.EncodedImage$FrameType[] frameTypes -> frameTypes
    80:82:void <init>(org.webrtc.EncodedImage$FrameType[]) -> <init>
org.webrtc.VideoEncoder$ScalingSettings -> org.webrtc.VideoEncoder$ScalingSettings:
    boolean on -> on
    java.lang.Integer low -> low
    java.lang.Integer high -> high
    org.webrtc.VideoEncoder$ScalingSettings OFF -> OFF
    154:158:void <init>(int,int) -> <init>
    160:164:void <init>() -> <init>
    175:179:void <init>(boolean) -> <init>
    189:193:void <init>(boolean,int,int) -> <init>
    197:197:java.lang.String toString() -> toString
    146:146:void <clinit>() -> <clinit>
org.webrtc.VideoEncoder$Settings -> org.webrtc.VideoEncoder$Settings:
    int numberOfCores -> numberOfCores
    int width -> width
    int height -> height
    int startBitrate -> startBitrate
    int maxFramerate -> maxFramerate
    int numberOfSimulcastStreams -> numberOfSimulcastStreams
    boolean automaticResizeOn -> automaticResizeOn
    java.util.List simulcastStreams -> simulcastStreams
    63:72:void <init>(int,int,int,int,int,int,boolean,java.util.List) -> <init>
org.webrtc.VideoEncoder$SimulcastStream -> org.webrtc.VideoEncoder$SimulcastStream:
    int width -> width
    int height -> height
    int maxFramerate -> maxFramerate
    int numberOfTemporalLayers -> numberOfTemporalLayers
    int maxBitrate -> maxBitrate
    int targetBitrate -> targetBitrate
    int minBitrate -> minBitrate
    int qpMax -> qpMax
    boolean active -> active
    37:47:void <init>(int,int,int,int,int,int,int,int,boolean) -> <init>
org.webrtc.VideoEncoderFactory -> org.webrtc.VideoEncoderFactory:
    org.webrtc.VideoEncoder createEncoder(org.webrtc.VideoCodecInfo) -> createEncoder
    org.webrtc.VideoCodecInfo[] getSupportedCodecs() -> getSupportedCodecs
org.webrtc.VideoEncoderFallback -> org.webrtc.VideoEncoderFallback:
    org.webrtc.VideoEncoder fallback -> fallback
    org.webrtc.VideoEncoder primary -> primary
    20:23:void <init>(org.webrtc.VideoEncoder,org.webrtc.VideoEncoder) -> <init>
    27:27:long createNativeVideoEncoder() -> createNativeVideoEncoder
    32:32:boolean isHardwareEncoder() -> isHardwareEncoder
    long nativeCreateEncoder(org.webrtc.VideoEncoder,org.webrtc.VideoEncoder) -> nativeCreateEncoder
    16:16:java.lang.String getImplementationName() -> getImplementationName
    16:16:org.webrtc.VideoEncoder$ScalingSettings getScalingSettings() -> getScalingSettings
    16:16:org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int) -> setRateAllocation
    16:16:org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo) -> encode
    16:16:org.webrtc.VideoCodecStatus release() -> release
    16:16:org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback) -> initEncode
org.webrtc.VideoEncoderWrapper -> org.webrtc.VideoEncoderWrapper:
    21:21:void <init>() -> <init>
    24:24:boolean getScalingSettingsOn(org.webrtc.VideoEncoder$ScalingSettings) -> getScalingSettingsOn
    30:30:java.lang.Integer getScalingSettingsLow(org.webrtc.VideoEncoder$ScalingSettings) -> getScalingSettingsLow
    36:36:java.lang.Integer getScalingSettingsHigh(org.webrtc.VideoEncoder$ScalingSettings) -> getScalingSettingsHigh
    41:41:org.webrtc.VideoEncoder$Callback createEncoderCallback(long) -> createEncoderCallback
    void nativeOnEncodedFrame(long,java.nio.ByteBuffer,int,int,long,int,int,boolean,java.lang.Integer,int) -> nativeOnEncodedFrame
    42:43:void lambda$createEncoderCallback$0(long,org.webrtc.EncodedImage,org.webrtc.VideoEncoder$CodecSpecificInfo) -> lambda$createEncoderCallback$0
org.webrtc.VideoFileRenderer -> org.webrtc.VideoFileRenderer:
    java.lang.String TAG -> TAG
    android.os.HandlerThread renderThread -> renderThread
    android.os.Handler renderThreadHandler -> renderThreadHandler
    android.os.HandlerThread fileThread -> fileThread
    android.os.Handler fileThreadHandler -> fileThreadHandler
    java.io.FileOutputStream videoOutFile -> videoOutFile
    java.lang.String outputFileName -> outputFileName
    int outputFileWidth -> outputFileWidth
    int outputFileHeight -> outputFileHeight
    int outputFrameSize -> outputFrameSize
    java.nio.ByteBuffer outputFrameBuffer -> outputFrameBuffer
    org.webrtc.EglBase eglBase -> eglBase
    org.webrtc.YuvConverter yuvConverter -> yuvConverter
    int frameCount -> frameCount
    45:79:void <init>(java.lang.String,int,int,org.webrtc.EglBase$Context) -> <init>
    83:85:void onFrame(org.webrtc.VideoFrame) -> onFrame
    88:132:void renderFrameOnRenderThread(org.webrtc.VideoFrame) -> renderFrameOnRenderThread
    138:164:void release() -> release
    148:157:void lambda$release$3() -> lambda$release$3
    140:144:void lambda$release$2(java.util.concurrent.CountDownLatch) -> lambda$release$2
    118:131:void lambda$renderFrameOnRenderThread$1(org.webrtc.VideoFrame$I420Buffer,org.webrtc.VideoFrame) -> lambda$renderFrameOnRenderThread$1
    84:84:void lambda$onFrame$0(org.webrtc.VideoFrame) -> lambda$onFrame$0
    27:27:org.webrtc.EglBase access$002(org.webrtc.VideoFileRenderer,org.webrtc.EglBase) -> access$002
    27:27:org.webrtc.EglBase access$000(org.webrtc.VideoFileRenderer) -> access$000
    27:27:org.webrtc.YuvConverter access$102(org.webrtc.VideoFileRenderer,org.webrtc.YuvConverter) -> access$102
org.webrtc.VideoFileRenderer$1 -> org.webrtc.VideoFileRenderer$1:
    org.webrtc.EglBase$Context val$sharedContext -> val$sharedContext
    org.webrtc.VideoFileRenderer this$0 -> this$0
    70:70:void <init>(org.webrtc.VideoFileRenderer,org.webrtc.EglBase$Context) -> <init>
    73:77:void run() -> run
org.webrtc.VideoFrame -> org.webrtc.VideoFrame:
    org.webrtc.VideoFrame$Buffer buffer -> buffer
    int rotation -> rotation
    long timestampNs -> timestampNs
    boolean isForCallback -> isForCallback
    137:147:void <init>(org.webrtc.VideoFrame$Buffer,int,long) -> <init>
    151:151:org.webrtc.VideoFrame$Buffer getBuffer() -> getBuffer
    159:159:int getRotation() -> getRotation
    167:167:long getTimestampNs() -> getTimestampNs
    171:174:int getRotatedWidth() -> getRotatedWidth
    178:181:int getRotatedHeight() -> getRotatedHeight
    188:188:boolean isForCallback() -> isForCallback
    195:196:void setIsForCallback(boolean) -> setIsForCallback
    200:201:void retain() -> retain
    206:207:void release() -> release
org.webrtc.VideoFrame$Buffer -> org.webrtc.VideoFrame$Buffer:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    org.webrtc.VideoFrame$I420Buffer toI420() -> toI420
    void retain() -> retain
    void release() -> release
    org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int) -> cropAndScale
org.webrtc.VideoFrame$I420Buffer -> org.webrtc.VideoFrame$I420Buffer:
    java.nio.ByteBuffer getDataY() -> getDataY
    java.nio.ByteBuffer getDataU() -> getDataU
    java.nio.ByteBuffer getDataV() -> getDataV
    int getStrideY() -> getStrideY
    int getStrideU() -> getStrideU
    int getStrideV() -> getStrideV
org.webrtc.VideoFrame$TextureBuffer -> org.webrtc.VideoFrame$TextureBuffer:
    org.webrtc.VideoFrame$TextureBuffer$Type getType() -> getType
    int getTextureId() -> getTextureId
    void setTextureId(int) -> setTextureId
    void setType(org.webrtc.VideoFrame$TextureBuffer$Type) -> setType
    android.graphics.Matrix getTransformMatrix() -> getTransformMatrix
org.webrtc.VideoFrame$TextureBuffer$Type -> org.webrtc.VideoFrame$TextureBuffer$Type:
    org.webrtc.VideoFrame$TextureBuffer$Type OES -> OES
    org.webrtc.VideoFrame$TextureBuffer$Type RGB -> RGB
    int glTarget -> glTarget
    org.webrtc.VideoFrame$TextureBuffer$Type[] $VALUES -> $VALUES
    98:98:org.webrtc.VideoFrame$TextureBuffer$Type[] values() -> values
    98:98:org.webrtc.VideoFrame$TextureBuffer$Type valueOf(java.lang.String) -> valueOf
    104:106:void <init>(java.lang.String,int,int) -> <init>
    109:109:int getGlTarget() -> getGlTarget
    98:100:void <clinit>() -> <clinit>
org.webrtc.VideoFrameDrawer -> org.webrtc.VideoFrameDrawer:
    java.lang.String TAG -> TAG
    float[] srcPoints -> srcPoints
    float[] dstPoints -> dstPoints
    android.graphics.Point renderSize -> renderSize
    int renderWidth -> renderWidth
    int renderHeight -> renderHeight
    org.webrtc.VideoFrameDrawer$YuvUploader yuvUploader -> yuvUploader
    org.webrtc.VideoFrame lastI420Frame -> lastI420Frame
    android.graphics.Matrix renderMatrix -> renderMatrix
    24:176:void <init>() -> <init>
    35:50:void drawTexture(org.webrtc.RendererCommon$GlDrawer,org.webrtc.VideoFrame$TextureBuffer,android.graphics.Matrix,int,int,int,int,int,int) -> drawTexture
    137:137:int distance(float,float,float,float) -> distance
    153:170:void calculateTransformedRenderSize(int,int,android.graphics.Matrix) -> calculateTransformedRenderSize
    179:180:void drawFrame(org.webrtc.VideoFrame,org.webrtc.RendererCommon$GlDrawer) -> drawFrame
    184:186:void drawFrame(org.webrtc.VideoFrame,org.webrtc.RendererCommon$GlDrawer,android.graphics.Matrix) -> drawFrame
    191:229:void drawFrame(org.webrtc.VideoFrame,org.webrtc.RendererCommon$GlDrawer,android.graphics.Matrix,int,int,int,int) -> drawFrame
    233:234:org.webrtc.VideoFrame$Buffer prepareBufferForViewportSize(org.webrtc.VideoFrame$Buffer,int,int) -> prepareBufferForViewportSize
    238:240:void release() -> release
    141:141:void <clinit>() -> <clinit>
org.webrtc.VideoFrameDrawer$1 -> org.webrtc.VideoFrameDrawer$1:
    int[] $SwitchMap$org$webrtc$VideoFrame$TextureBuffer$Type -> $SwitchMap$org$webrtc$VideoFrame$TextureBuffer$Type
    38:38:void <clinit>() -> <clinit>
org.webrtc.VideoFrameDrawer$YuvUploader -> org.webrtc.VideoFrameDrawer$YuvUploader:
    java.nio.ByteBuffer copyBuffer -> copyBuffer
    int[] yuvTextures -> yuvTextures
    56:56:void <init>() -> <init>
    70:108:int[] uploadYuvData(int,int,int[],java.nio.ByteBuffer[]) -> uploadYuvData
    113:115:int[] uploadFromBuffer(org.webrtc.VideoFrame$I420Buffer) -> uploadFromBuffer
    120:120:int[] getYuvTextures() -> getYuvTextures
    128:133:void release() -> release
    56:56:void <init>(org.webrtc.VideoFrameDrawer$1) -> <init>
org.webrtc.VideoProcessor -> org.webrtc.VideoProcessor:
    48:53:void onFrameCaptured(org.webrtc.VideoFrame,org.webrtc.VideoProcessor$FrameAdaptationParameters) -> onFrameCaptured
    void setSink(org.webrtc.VideoSink) -> setSink
    67:74:org.webrtc.VideoFrame applyFrameAdaptationParameters(org.webrtc.VideoFrame,org.webrtc.VideoProcessor$FrameAdaptationParameters) -> applyFrameAdaptationParameters
org.webrtc.VideoProcessor$FrameAdaptationParameters -> org.webrtc.VideoProcessor$FrameAdaptationParameters:
    int cropX -> cropX
    int cropY -> cropY
    int cropWidth -> cropWidth
    int cropHeight -> cropHeight
    int scaleWidth -> scaleWidth
    int scaleHeight -> scaleHeight
    long timestampNs -> timestampNs
    boolean drop -> drop
    31:40:void <init>(int,int,int,int,int,int,long,boolean) -> <init>
org.webrtc.VideoSink -> org.webrtc.VideoSink:
    void onFrame(org.webrtc.VideoFrame) -> onFrame
org.webrtc.VideoSource -> org.webrtc.VideoSource:
    org.webrtc.NativeAndroidVideoTrackSource nativeAndroidVideoTrackSource -> nativeAndroidVideoTrackSource
    java.lang.Object videoProcessorLock -> videoProcessorLock
    org.webrtc.VideoProcessor videoProcessor -> videoProcessor
    boolean isCapturerRunning -> isCapturerRunning
    org.webrtc.CapturerObserver capturerObserver -> capturerObserver
    33:86:void <init>(long) -> <init>
    95:98:void adaptOutputFormat(int,int,int) -> adaptOutputFormat
    107:111:void adaptOutputFormat(int,int,int,int,int) -> adaptOutputFormat
    117:119:void adaptOutputFormat(org.webrtc.VideoSource$AspectRatio,java.lang.Integer,org.webrtc.VideoSource$AspectRatio,java.lang.Integer,java.lang.Integer) -> adaptOutputFormat
    129:144:void setVideoProcessor(org.webrtc.VideoProcessor) -> setVideoProcessor
    147:147:org.webrtc.CapturerObserver getCapturerObserver() -> getCapturerObserver
    152:152:long getNativeVideoTrackSource() -> getNativeVideoTrackSource
    157:159:void dispose() -> dispose
    18:18:org.webrtc.NativeAndroidVideoTrackSource access$000(org.webrtc.VideoSource) -> access$000
    18:18:java.lang.Object access$100(org.webrtc.VideoSource) -> access$100
    18:18:boolean access$202(org.webrtc.VideoSource,boolean) -> access$202
    18:18:org.webrtc.VideoProcessor access$300(org.webrtc.VideoSource) -> access$300
org.webrtc.VideoSource$1 -> org.webrtc.VideoSource$1:
    org.webrtc.VideoSource this$0 -> this$0
    37:37:void <init>(org.webrtc.VideoSource) -> <init>
    40:47:void onCapturerStarted(boolean) -> onCapturerStarted
    51:51:void onCapturerStoppedInCapturerThread() -> onCapturerStoppedInCapturerThread
    55:62:void onCapturerStopped() -> onCapturerStopped
    66:80:void onFrameCaptured(org.webrtc.VideoFrame) -> onFrameCaptured
org.webrtc.VideoSource$AspectRatio -> org.webrtc.VideoSource$AspectRatio:
    org.webrtc.VideoSource$AspectRatio UNDEFINED -> UNDEFINED
    int width -> width
    int height -> height
    26:29:void <init>(int,int) -> <init>
    21:21:void <clinit>() -> <clinit>
org.webrtc.VideoTrack -> org.webrtc.VideoTrack:
    java.util.IdentityHashMap sinks -> sinks
    19:23:void <init>(long) -> <init>
    34:44:void addSink(org.webrtc.VideoSink) -> addSink
    52:57:void removeSink(org.webrtc.VideoSink) -> removeSink
    61:67:void dispose() -> dispose
    71:71:long getNativeVideoTrack() -> getNativeVideoTrack
    void nativeAddSink(long,long) -> nativeAddSink
    void nativeRemoveSink(long,long) -> nativeRemoveSink
    long nativeWrapSink(org.webrtc.VideoSink) -> nativeWrapSink
    void nativeFreeSink(long) -> nativeFreeSink
org.webrtc.WebRtcClassLoader -> org.webrtc.WebRtcClassLoader:
    18:18:void <init>() -> <init>
    21:21:java.lang.Object getClassLoader() -> getClassLoader
org.webrtc.WrappedNativeI420Buffer -> org.webrtc.WrappedNativeI420Buffer:
    int width -> width
    int height -> height
    java.nio.ByteBuffer dataY -> dataY
    int strideY -> strideY
    java.nio.ByteBuffer dataU -> dataU
    int strideU -> strideU
    java.nio.ByteBuffer dataV -> dataV
    int strideV -> strideV
    long nativeBuffer -> nativeBuffer
    31:43:void <init>(int,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,long) -> <init>
    47:47:int getWidth() -> getWidth
    52:52:int getHeight() -> getHeight
    58:58:java.nio.ByteBuffer getDataY() -> getDataY
    64:64:java.nio.ByteBuffer getDataU() -> getDataU
    70:70:java.nio.ByteBuffer getDataV() -> getDataV
    75:75:int getStrideY() -> getStrideY
    80:80:int getStrideU() -> getStrideU
    85:85:int getStrideV() -> getStrideV
    90:91:org.webrtc.VideoFrame$I420Buffer toI420() -> toI420
    96:97:void retain() -> retain
    101:102:void release() -> release
    107:107:org.webrtc.VideoFrame$Buffer cropAndScale(int,int,int,int,int,int) -> cropAndScale
org.webrtc.WrappedNativeVideoDecoder -> org.webrtc.WrappedNativeVideoDecoder:
    16:16:void <init>() -> <init>
    long createNativeVideoDecoder() -> createNativeVideoDecoder
    21:21:org.webrtc.VideoCodecStatus initDecode(org.webrtc.VideoDecoder$Settings,org.webrtc.VideoDecoder$Callback) -> initDecode
    26:26:org.webrtc.VideoCodecStatus release() -> release
    31:31:org.webrtc.VideoCodecStatus decode(org.webrtc.EncodedImage,org.webrtc.VideoDecoder$DecodeInfo) -> decode
    36:36:boolean getPrefersLateDecoding() -> getPrefersLateDecoding
    41:41:java.lang.String getImplementationName() -> getImplementationName
org.webrtc.WrappedNativeVideoEncoder -> org.webrtc.WrappedNativeVideoEncoder:
    16:16:void <init>() -> <init>
    long createNativeVideoEncoder() -> createNativeVideoEncoder
    boolean isHardwareEncoder() -> isHardwareEncoder
    22:22:org.webrtc.VideoCodecStatus initEncode(org.webrtc.VideoEncoder$Settings,org.webrtc.VideoEncoder$Callback) -> initEncode
    27:27:org.webrtc.VideoCodecStatus release() -> release
    32:32:org.webrtc.VideoCodecStatus encode(org.webrtc.VideoFrame,org.webrtc.VideoEncoder$EncodeInfo) -> encode
    37:37:org.webrtc.VideoCodecStatus setRateAllocation(org.webrtc.VideoEncoder$BitrateAllocation,int) -> setRateAllocation
    42:42:org.webrtc.VideoEncoder$ScalingSettings getScalingSettings() -> getScalingSettings
    47:47:java.lang.String getImplementationName() -> getImplementationName
org.webrtc.YuvConverter -> org.webrtc.YuvConverter:
    java.lang.String FRAGMENT_SHADER -> FRAGMENT_SHADER
    org.webrtc.ThreadUtils$ThreadChecker threadChecker -> threadChecker
    org.webrtc.GlTextureFrameBuffer i420TextureFrameBuffer -> i420TextureFrameBuffer
    org.webrtc.YuvConverter$ShaderCallbacks shaderCallbacks -> shaderCallbacks
    org.webrtc.GlGenericDrawer drawer -> drawer
    org.webrtc.VideoFrameDrawer videoFrameDrawer -> videoFrameDrawer
    116:117:void <init>() -> <init>
    105:122:void <init>(org.webrtc.VideoFrameDrawer) -> <init>
    126:230:org.webrtc.VideoFrame$I420Buffer convert(org.webrtc.VideoFrame$TextureBuffer) -> convert
    235:241:void release() -> release
    231:231:void lambda$convert$0(java.nio.ByteBuffer) -> lambda$convert$0
org.webrtc.YuvConverter$1 -> org.webrtc.YuvConverter$1:
org.webrtc.YuvConverter$ShaderCallbacks -> org.webrtc.YuvConverter$ShaderCallbacks:
    float[] yCoeffs -> yCoeffs
    float[] uCoeffs -> uCoeffs
    float[] vCoeffs -> vCoeffs
    int xUnitLoc -> xUnitLoc
    int coeffsLoc -> coeffsLoc
    float[] coeffs -> coeffs
    float stepSize -> stepSize
    48:48:void <init>() -> <init>
    75:77:void setPlaneY() -> setPlaneY
    80:82:void setPlaneU() -> setPlaneU
    85:87:void setPlaneV() -> setPlaneV
    91:93:void onNewShader(org.webrtc.GlShader) -> onNewShader
    98:102:void onPrepareShader(org.webrtc.GlShader,float[],int,int,int,int) -> onPrepareShader
    48:48:void <init>(org.webrtc.YuvConverter$1) -> <init>
    61:65:void <clinit>() -> <clinit>
org.webrtc.YuvHelper -> org.webrtc.YuvHelper:
    16:16:void <init>() -> <init>
    20:42:void I420Copy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int) -> I420Copy
    47:66:void I420ToNV12(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int) -> I420ToNV12
    72:97:void I420Rotate(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> I420Rotate
    102:103:void copyPlane(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> copyPlane
    108:110:void I420Copy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> I420Copy
    115:117:void I420ToNV12(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> I420ToNV12
    123:125:void I420Rotate(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> I420Rotate
    void nativeCopyPlane(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> nativeCopyPlane
    void nativeI420Copy(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> nativeI420Copy
    void nativeI420ToNV12(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int) -> nativeI420ToNV12
    void nativeI420Rotate(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> nativeI420Rotate
org.webrtc.audio.AudioDeviceModule -> org.webrtc.audio.AudioDeviceModule:
    long getNativeAudioDeviceModulePointer() -> getNativeAudioDeviceModulePointer
    void release() -> release
    void setSpeakerMute(boolean) -> setSpeakerMute
    void setMicrophoneMute(boolean) -> setMicrophoneMute
org.webrtc.audio.JavaAudioDeviceModule -> org.webrtc.audio.JavaAudioDeviceModule:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    android.media.AudioManager audioManager -> audioManager
    org.webrtc.audio.WebRtcAudioRecord audioInput -> audioInput
    org.webrtc.audio.WebRtcAudioTrack audioOutput -> audioOutput
    int inputSampleRate -> inputSampleRate
    int outputSampleRate -> outputSampleRate
    boolean useStereoInput -> useStereoInput
    boolean useStereoOutput -> useStereoOutput
    java.lang.Object nativeLock -> nativeLock
    long nativeAudioDeviceModule -> nativeAudioDeviceModule
    27:27:org.webrtc.audio.JavaAudioDeviceModule$Builder builder(android.content.Context) -> builder
    287:287:boolean isBuiltInAcousticEchoCancelerSupported() -> isBuiltInAcousticEchoCancelerSupported
    295:295:boolean isBuiltInNoiseSuppressorSupported() -> isBuiltInNoiseSuppressorSupported
    307:321:void <init>(android.content.Context,android.media.AudioManager,org.webrtc.audio.WebRtcAudioRecord,org.webrtc.audio.WebRtcAudioTrack,int,int,boolean,boolean) -> <init>
    325:331:long getNativeAudioDeviceModulePointer() -> getNativeAudioDeviceModulePointer
    336:342:void release() -> release
    346:348:void setSpeakerMute(boolean) -> setSpeakerMute
    351:351:int getInputSamplerate() -> getInputSamplerate
    355:355:int getOutputSamplerate() -> getOutputSamplerate
    359:359:boolean isUseInputStereo() -> isUseInputStereo
    363:363:boolean isUseOutputStereo() -> isUseOutputStereo
    367:367:int getAudioFormat() -> getAudioFormat
    371:372:void setAudioSourceCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback) -> setAudioSourceCallback
    375:376:void setMicrophoneAudioSourceCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback) -> setMicrophoneAudioSourceCallback
    379:382:void enableExternalAudioRecord(boolean) -> enableExternalAudioRecord
    385:388:void inputExternalAudioFrame(byte[]) -> inputExternalAudioFrame
    392:394:void setMicrophoneMute(boolean) -> setMicrophoneMute
    long nativeCreateAudioDeviceModule(android.content.Context,android.media.AudioManager,org.webrtc.audio.WebRtcAudioRecord,org.webrtc.audio.WebRtcAudioTrack,int,int,boolean,boolean) -> nativeCreateAudioDeviceModule
    23:23:void <init>(android.content.Context,android.media.AudioManager,org.webrtc.audio.WebRtcAudioRecord,org.webrtc.audio.WebRtcAudioTrack,int,int,boolean,boolean,org.webrtc.audio.JavaAudioDeviceModule$1) -> <init>
org.webrtc.audio.JavaAudioDeviceModule$1 -> org.webrtc.audio.JavaAudioDeviceModule$1:
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback -> org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback:
    void onWebRtcAudioRecordInitError(java.lang.String) -> onWebRtcAudioRecordInitError
    void onWebRtcAudioRecordStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode,java.lang.String) -> onWebRtcAudioRecordStartError
    void onWebRtcAudioRecordError(java.lang.String) -> onWebRtcAudioRecordError
org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode -> org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode:
    org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode AUDIO_RECORD_START_EXCEPTION -> AUDIO_RECORD_START_EXCEPTION
    org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode AUDIO_RECORD_START_STATE_MISMATCH -> AUDIO_RECORD_START_STATE_MISMATCH
    org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode[] $VALUES -> $VALUES
    212:212:org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode[] values() -> values
    212:212:org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode valueOf(java.lang.String) -> valueOf
    212:212:void <init>(java.lang.String,int) -> <init>
    212:214:void <clinit>() -> <clinit>
org.webrtc.audio.JavaAudioDeviceModule$AudioSamples -> org.webrtc.audio.JavaAudioDeviceModule$AudioSamples:
    int audioFormat -> audioFormat
    int channelCount -> channelCount
    int sampleRate -> sampleRate
    byte[] data -> data
    236:241:void <init>(int,int,int,byte[]) -> <init>
    244:244:int getAudioFormat() -> getAudioFormat
    248:248:int getChannelCount() -> getChannelCount
    252:252:int getSampleRate() -> getSampleRate
    256:256:byte[] getData() -> getData
org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback -> org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback:
    void onAudioSourceAvailable(java.nio.ByteBuffer,int,long) -> onAudioSourceAvailable
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback -> org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback:
    void onWebRtcAudioTrackInitError(java.lang.String) -> onWebRtcAudioTrackInitError
    void onWebRtcAudioTrackStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode,java.lang.String) -> onWebRtcAudioTrackStartError
    void onWebRtcAudioTrackError(java.lang.String) -> onWebRtcAudioTrackError
org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode -> org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode:
    org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode AUDIO_TRACK_START_EXCEPTION -> AUDIO_TRACK_START_EXCEPTION
    org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode AUDIO_TRACK_START_STATE_MISMATCH -> AUDIO_TRACK_START_STATE_MISMATCH
    org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode[] $VALUES -> $VALUES
    271:271:org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode[] values() -> values
    271:271:org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode valueOf(java.lang.String) -> valueOf
    271:271:void <init>(java.lang.String,int) -> <init>
    271:273:void <clinit>() -> <clinit>
org.webrtc.audio.JavaAudioDeviceModule$Builder -> org.webrtc.audio.JavaAudioDeviceModule$Builder:
    android.content.Context context -> context
    android.media.AudioManager audioManager -> audioManager
    int inputSampleRate -> inputSampleRate
    int outputSampleRate -> outputSampleRate
    int audioSource -> audioSource
    int audioFormat -> audioFormat
    org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback audioTrackErrorCallback -> audioTrackErrorCallback
    org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback audioRecordErrorCallback -> audioRecordErrorCallback
    org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback samplesReadyCallback -> samplesReadyCallback
    boolean useHardwareAcousticEchoCanceler -> useHardwareAcousticEchoCanceler
    boolean useHardwareNoiseSuppressor -> useHardwareNoiseSuppressor
    boolean useStereoInput -> useStereoInput
    boolean useStereoOutput -> useStereoOutput
    boolean useCommunicationMode -> useCommunicationMode
    35:51:void <init>(android.content.Context) -> <init>
    59:62:org.webrtc.audio.JavaAudioDeviceModule$Builder setSampleRate(int) -> setSampleRate
    69:71:org.webrtc.audio.JavaAudioDeviceModule$Builder setInputSampleRate(int) -> setInputSampleRate
    78:80:org.webrtc.audio.JavaAudioDeviceModule$Builder setOutputSampleRate(int) -> setOutputSampleRate
    88:89:org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioSource(int) -> setAudioSource
    99:100:org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioFormat(int) -> setAudioFormat
    107:108:org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioTrackErrorCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback) -> setAudioTrackErrorCallback
    115:116:org.webrtc.audio.JavaAudioDeviceModule$Builder setAudioRecordErrorCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback) -> setAudioRecordErrorCallback
    123:124:org.webrtc.audio.JavaAudioDeviceModule$Builder setSamplesReadyCallback(org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback) -> setSamplesReadyCallback
    132:137:org.webrtc.audio.JavaAudioDeviceModule$Builder setUseHardwareNoiseSuppressor(boolean) -> setUseHardwareNoiseSuppressor
    146:151:org.webrtc.audio.JavaAudioDeviceModule$Builder setUseHardwareAcousticEchoCanceler(boolean) -> setUseHardwareAcousticEchoCanceler
    158:159:org.webrtc.audio.JavaAudioDeviceModule$Builder setUseStereoInput(boolean) -> setUseStereoInput
    166:167:org.webrtc.audio.JavaAudioDeviceModule$Builder setUseCommunicationMode(boolean) -> setUseCommunicationMode
    174:175:org.webrtc.audio.JavaAudioDeviceModule$Builder setUseStereoOutput(boolean) -> setUseStereoOutput
    183:205:org.webrtc.audio.AudioDeviceModule createAudioDeviceModule() -> createAudioDeviceModule
    30:30:void <init>(android.content.Context,org.webrtc.audio.JavaAudioDeviceModule$1) -> <init>
org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback -> org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback:
    void onWebRtcAudioRecordSamplesReady(org.webrtc.audio.JavaAudioDeviceModule$AudioSamples) -> onWebRtcAudioRecordSamplesReady
org.webrtc.audio.VolumeLogger -> org.webrtc.audio.VolumeLogger:
    java.lang.String TAG -> TAG
    java.lang.String THREAD_NAME -> THREAD_NAME
    int TIMER_PERIOD_IN_SECONDS -> TIMER_PERIOD_IN_SECONDS
    android.media.AudioManager audioManager -> audioManager
    java.util.Timer timer -> timer
    34:36:void <init>(android.media.AudioManager) -> <init>
    39:49:void start() -> start
    77:82:void stop() -> stop
    26:26:android.media.AudioManager access$000(org.webrtc.audio.VolumeLogger) -> access$000
org.webrtc.audio.VolumeLogger$LogVolumeTask -> org.webrtc.audio.VolumeLogger$LogVolumeTask:
    int maxRingVolume -> maxRingVolume
    int maxVoiceCallVolume -> maxVoiceCallVolume
    org.webrtc.audio.VolumeLogger this$0 -> this$0
    55:58:void <init>(org.webrtc.audio.VolumeLogger,int,int) -> <init>
    62:73:void run() -> run
org.webrtc.audio.WebRtcAudioEffects -> org.webrtc.audio.WebRtcAudioEffects:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    java.util.UUID AOSP_ACOUSTIC_ECHO_CANCELER -> AOSP_ACOUSTIC_ECHO_CANCELER
    java.util.UUID AOSP_NOISE_SUPPRESSOR -> AOSP_NOISE_SUPPRESSOR
    android.media.audiofx.AudioEffect$Descriptor[] cachedEffects -> cachedEffects
    android.media.audiofx.AcousticEchoCanceler aec -> aec
    android.media.audiofx.NoiseSuppressor ns -> ns
    boolean shouldEnableAec -> shouldEnableAec
    boolean shouldEnableNs -> shouldEnableNs
    59:61:boolean isAcousticEchoCancelerSupported() -> isAcousticEchoCancelerSupported
    66:68:boolean isNoiseSuppressorSupported() -> isNoiseSuppressorSupported
    71:73:void <init>() -> <init>
    80:91:boolean setAEC(boolean) -> setAEC
    99:110:boolean setNS(boolean) -> setNS
    114:168:void enable(int) -> enable
    174:183:void release() -> release
    193:197:boolean effectTypeIsVoIP(java.util.UUID) -> effectTypeIsVoIP
    202:205:void assertTrue(boolean) -> assertTrue
    210:218:android.media.audiofx.AudioEffect$Descriptor[] getAvailableEffects() -> getAvailableEffects
    225:234:boolean isEffectTypeAvailable(java.util.UUID,java.util.UUID) -> isEffectTypeAvailable
    35:38:void <clinit>() -> <clinit>
org.webrtc.audio.WebRtcAudioManager -> org.webrtc.audio.WebRtcAudioManager:
    java.lang.String TAG -> TAG
    int DEFAULT_SAMPLE_RATE_HZ -> DEFAULT_SAMPLE_RATE_HZ
    int BITS_PER_SAMPLE -> BITS_PER_SAMPLE
    int DEFAULT_FRAME_PER_BUFFER -> DEFAULT_FRAME_PER_BUFFER
    26:26:void <init>() -> <init>
    39:39:android.media.AudioManager getAudioManager(android.content.Context) -> getAudioManager
    45:47:int getOutputBufferSize(android.content.Context,android.media.AudioManager,int,int) -> getOutputBufferSize
    53:55:int getInputBufferSize(android.content.Context,android.media.AudioManager,int,int) -> getInputBufferSize
    59:59:boolean isLowLatencyOutputSupported(android.content.Context) -> isLowLatencyOutputSupported
    67:67:boolean isLowLatencyInputSupported(android.content.Context) -> isLowLatencyInputSupported
    77:84:int getSampleRate(android.media.AudioManager) -> getSampleRate
    88:92:int getSampleRateForApiLevel(android.media.AudioManager) -> getSampleRateForApiLevel
    97:102:int getLowLatencyFramesPerBuffer(android.media.AudioManager) -> getLowLatencyFramesPerBuffer
    109:112:int getMinOutputFrameSize(int,int) -> getMinOutputFrameSize
    121:124:int getMinInputFrameSize(int,int) -> getMinInputFrameSize
org.webrtc.audio.WebRtcAudioRecord -> org.webrtc.audio.WebRtcAudioRecord:
    java.lang.String TAG -> TAG
    int CALLBACK_BUFFER_SIZE_MS -> CALLBACK_BUFFER_SIZE_MS
    int BUFFERS_PER_SECOND -> BUFFERS_PER_SECOND
    int BUFFER_SIZE_FACTOR -> BUFFER_SIZE_FACTOR
    long AUDIO_RECORD_THREAD_JOIN_TIMEOUT_MS -> AUDIO_RECORD_THREAD_JOIN_TIMEOUT_MS
    int DEFAULT_AUDIO_SOURCE -> DEFAULT_AUDIO_SOURCE
    int DEFAULT_AUDIO_FORMAT -> DEFAULT_AUDIO_FORMAT
    android.content.Context context -> context
    android.media.AudioManager audioManager -> audioManager
    int audioSource -> audioSource
    int audioFormat -> audioFormat
    long nativeAudioRecord -> nativeAudioRecord
    org.webrtc.audio.WebRtcAudioEffects effects -> effects
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    android.media.AudioRecord audioRecord -> audioRecord
    org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread audioThread -> audioThread
    boolean microphoneMute -> microphoneMute
    byte[] emptyBytes -> emptyBytes
    boolean mExternalAudioInputEnabled -> mExternalAudioInputEnabled
    boolean mExternalCanInput -> mExternalCanInput
    java.nio.ByteBuffer mInputByteBuffer -> mInputByteBuffer
    org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback errorCallback -> errorCallback
    org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback mAudioSourceCallback -> mAudioSourceCallback
    org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback mMicrophoneAudioSourceCallback -> mMicrophoneAudioSourceCallback
    org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback audioSamplesReadyCallback -> audioSamplesReadyCallback
    boolean isAcousticEchoCancelerSupported -> isAcousticEchoCancelerSupported
    boolean isNoiseSuppressorSupported -> isNoiseSuppressorSupported
    86:87:void setExternalAudioInputEnabled(boolean) -> setExternalAudioInputEnabled
    90:90:boolean isExternalAudioInputEnabled() -> isExternalAudioInputEnabled
    94:130:void inputExternalAudioFrame(byte[]) -> inputExternalAudioFrame
    133:135:void setAudioSourceCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback) -> setAudioSourceCallback
    138:140:void setMicrophoneAudioSourceCallback(org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback) -> setMicrophoneAudioSourceCallback
    219:223:void <init>(android.content.Context,android.media.AudioManager) -> <init>
    64:243:void <init>(android.content.Context,android.media.AudioManager,int,int,org.webrtc.audio.JavaAudioDeviceModule$AudioRecordErrorCallback,org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback,boolean,boolean) -> <init>
    247:248:void setNativeAudioRecord(long) -> setNativeAudioRecord
    252:252:boolean isAcousticEchoCancelerSupported() -> isAcousticEchoCancelerSupported
    257:257:boolean isNoiseSuppressorSupported() -> isNoiseSuppressorSupported
    262:263:boolean enableBuiltInAEC(boolean) -> enableBuiltInAEC
    268:269:boolean enableBuiltInNS(boolean) -> enableBuiltInNS
    274:328:int initRecording(int,int) -> initRecording
    333:357:boolean startRecording() -> startRecording
    362:378:boolean stopRecording() -> stopRecording
    382:387:void logMainParameters() -> logMainParameters
    390:396:void logMainParametersExtended() -> logMainParametersExtended
    400:403:void assertTrue(boolean) -> assertTrue
    406:406:int channelCountToConfiguration(int) -> channelCountToConfiguration
    void nativeCacheDirectBufferAddress(long,java.nio.ByteBuffer) -> nativeCacheDirectBufferAddress
    void nativeDataIsRecorded(long,int) -> nativeDataIsRecorded
    416:418:void setMicrophoneMute(boolean) -> setMicrophoneMute
    422:427:void releaseAudioResources() -> releaseAudioResources
    430:435:void reportWebRtcAudioRecordInitError(java.lang.String) -> reportWebRtcAudioRecordInitError
    439:444:void reportWebRtcAudioRecordStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioRecordStartErrorCode,java.lang.String) -> reportWebRtcAudioRecordStartError
    447:452:void reportWebRtcAudioRecordError(java.lang.String) -> reportWebRtcAudioRecordError
    458:469:int getBytesPerSample(int) -> getBytesPerSample
    33:33:android.media.AudioRecord access$000(org.webrtc.audio.WebRtcAudioRecord) -> access$000
    33:33:void access$100(boolean) -> access$100
    33:33:java.nio.ByteBuffer access$200(org.webrtc.audio.WebRtcAudioRecord) -> access$200
    33:33:boolean access$300(org.webrtc.audio.WebRtcAudioRecord) -> access$300
    33:33:byte[] access$400(org.webrtc.audio.WebRtcAudioRecord) -> access$400
    33:33:org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback access$500(org.webrtc.audio.WebRtcAudioRecord) -> access$500
    33:33:org.webrtc.audio.JavaAudioDeviceModule$AudioSourceCallback access$600(org.webrtc.audio.WebRtcAudioRecord) -> access$600
    33:33:long access$700(org.webrtc.audio.WebRtcAudioRecord) -> access$700
    33:33:void access$800(org.webrtc.audio.WebRtcAudioRecord,long,int) -> access$800
    33:33:org.webrtc.audio.JavaAudioDeviceModule$SamplesReadyCallback access$900(org.webrtc.audio.WebRtcAudioRecord) -> access$900
    33:33:void access$1000(org.webrtc.audio.WebRtcAudioRecord,java.lang.String) -> access$1000
org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread -> org.webrtc.audio.WebRtcAudioRecord$AudioRecordThread:
    boolean keepAlive -> keepAlive
    org.webrtc.audio.WebRtcAudioRecord this$0 -> this$0
    149:153:void <init>(org.webrtc.audio.WebRtcAudioRecord,java.lang.String) -> <init>
    157:207:void run() -> run
    212:214:void stopThread() -> stopThread
org.webrtc.audio.WebRtcAudioTrack -> org.webrtc.audio.WebRtcAudioTrack:
    java.lang.String TAG -> TAG
    int BITS_PER_SAMPLE -> BITS_PER_SAMPLE
    int CALLBACK_BUFFER_SIZE_MS -> CALLBACK_BUFFER_SIZE_MS
    int BUFFERS_PER_SECOND -> BUFFERS_PER_SECOND
    long AUDIO_TRACK_THREAD_JOIN_TIMEOUT_MS -> AUDIO_TRACK_THREAD_JOIN_TIMEOUT_MS
    int DEFAULT_USAGE -> DEFAULT_USAGE
    long nativeAudioTrack -> nativeAudioTrack
    android.content.Context context -> context
    android.media.AudioManager audioManager -> audioManager
    org.webrtc.ThreadUtils$ThreadChecker threadChecker -> threadChecker
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    android.media.AudioTrack audioTrack -> audioTrack
    org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread audioThread -> audioThread
    org.webrtc.audio.VolumeLogger volumeLogger -> volumeLogger
    boolean speakerMute -> speakerMute
    byte[] emptyBytes -> emptyBytes
    org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback errorCallback -> errorCallback
    boolean useCommunicationMode -> useCommunicationMode
    52:56:int getDefaultUsageAttribute() -> getDefaultUsageAttribute
    169:170:void <init>(android.content.Context,android.media.AudioManager) -> <init>
    174:175:void <init>(android.content.Context,android.media.AudioManager,org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback) -> <init>
    63:185:void <init>(android.content.Context,android.media.AudioManager,boolean,org.webrtc.audio.JavaAudioDeviceModule$AudioTrackErrorCallback) -> <init>
    189:190:void setNativeAudioTrack(long) -> setNativeAudioTrack
    194:262:boolean initPlayout(int,int) -> initPlayout
    267:294:boolean startPlayout() -> startPlayout
    299:315:boolean stopPlayout() -> stopPlayout
    321:323:int getStreamMaxVolume() -> getStreamMaxVolume
    329:336:boolean setStreamVolume(int) -> setStreamVolume
    340:342:boolean isVolumeFixed() -> isVolumeFixed
    348:350:int getStreamVolume() -> getStreamVolume
    354:362:void logMainParameters() -> logMainParameters
    370:388:android.media.AudioTrack createAudioTrackOnLollipopOrHigher(int,int,int,boolean) -> createAudioTrackOnLollipopOrHigher
    395:395:android.media.AudioTrack createAudioTrackOnLowerThanLollipop(int,int,int,boolean) -> createAudioTrackOnLowerThanLollipop
    400:406:void logBufferSizeInFrames() -> logBufferSizeInFrames
    409:415:void logBufferCapacityInFrames() -> logBufferCapacityInFrames
    418:420:void logMainParametersExtended() -> logMainParametersExtended
    429:432:void logUnderrunCount() -> logUnderrunCount
    436:439:void assertTrue(boolean) -> assertTrue
    442:442:int channelCountToConfiguration(int) -> channelCountToConfiguration
    void nativeCacheDirectBufferAddress(long,java.nio.ByteBuffer) -> nativeCacheDirectBufferAddress
    void nativeGetPlayoutData(long,int) -> nativeGetPlayoutData
    452:454:void setSpeakerMute(boolean) -> setSpeakerMute
    458:463:void releaseAudioResources() -> releaseAudioResources
    466:471:void reportWebRtcAudioTrackInitError(java.lang.String) -> reportWebRtcAudioTrackInitError
    475:480:void reportWebRtcAudioTrackStartError(org.webrtc.audio.JavaAudioDeviceModule$AudioTrackStartErrorCode,java.lang.String) -> reportWebRtcAudioTrackStartError
    483:488:void reportWebRtcAudioTrackError(java.lang.String) -> reportWebRtcAudioTrackError
    30:30:android.media.AudioTrack access$000(org.webrtc.audio.WebRtcAudioTrack) -> access$000
    30:30:void access$100(boolean) -> access$100
    30:30:java.nio.ByteBuffer access$200(org.webrtc.audio.WebRtcAudioTrack) -> access$200
    30:30:long access$300(org.webrtc.audio.WebRtcAudioTrack) -> access$300
    30:30:void access$400(long,int) -> access$400
    30:30:boolean access$500(org.webrtc.audio.WebRtcAudioTrack) -> access$500
    30:30:byte[] access$600(org.webrtc.audio.WebRtcAudioTrack) -> access$600
    30:30:void access$700(org.webrtc.audio.WebRtcAudioTrack,java.lang.String) -> access$700
    49:49:void <clinit>() -> <clinit>
org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread -> org.webrtc.audio.WebRtcAudioTrack$AudioTrackThread:
    boolean keepAlive -> keepAlive
    org.webrtc.audio.WebRtcAudioTrack this$0 -> this$0
    87:91:void <init>(org.webrtc.audio.WebRtcAudioTrack,java.lang.String) -> <init>
    95:149:void run() -> run
    152:155:int writeBytes(android.media.AudioTrack,java.nio.ByteBuffer,int) -> writeBytes
    162:164:void stopThread() -> stopThread
org.webrtc.audio.WebRtcAudioUtils -> org.webrtc.audio.WebRtcAudioUtils:
    java.lang.String TAG -> TAG
    32:32:void <init>() -> <init>
    37:37:java.lang.String getThreadInfo() -> getThreadInfo
    43:43:boolean runningOnEmulator() -> runningOnEmulator
    48:58:void logDeviceInfo(java.lang.String) -> logDeviceInfo
    64:68:void logAudioState(java.lang.String,android.content.Context,android.media.AudioManager) -> logAudioState
    72:80:void logAudioStateBasic(java.lang.String,android.content.Context,android.media.AudioManager) -> logAudioStateBasic
    83:86:boolean isVolumeFixed(android.media.AudioManager) -> isVolumeFixed
    91:108:void logAudioStateVolume(java.lang.String,android.media.AudioManager) -> logAudioStateVolume
    112:115:void logIsStreamMute(java.lang.String,android.media.AudioManager,int,java.lang.StringBuilder) -> logIsStreamMute
    118:147:void logAudioDeviceInfo(java.lang.String,android.media.AudioManager) -> logAudioDeviceInfo
    151:161:java.lang.String modeToString(int) -> modeToString
    166:180:java.lang.String streamTypeToString(int) -> streamTypeToString
    186:234:java.lang.String deviceTypeToString(int) -> deviceTypeToString
    240:240:boolean hasMicrophone(android.content.Context) -> hasMicrophone
org.webrtc.voiceengine.BuildInfo -> org.webrtc.voiceengine.BuildInfo:
    15:15:void <init>() -> <init>
    17:17:java.lang.String getDevice() -> getDevice
    21:21:java.lang.String getDeviceModel() -> getDeviceModel
    25:25:java.lang.String getProduct() -> getProduct
    29:29:java.lang.String getBrand() -> getBrand
    33:33:java.lang.String getDeviceManufacturer() -> getDeviceManufacturer
    37:37:java.lang.String getAndroidBuildId() -> getAndroidBuildId
    41:41:java.lang.String getBuildType() -> getBuildType
    45:45:java.lang.String getBuildRelease() -> getBuildRelease
    49:49:int getSdkVersion() -> getSdkVersion
org.webrtc.voiceengine.WebRtcAudioEffects -> org.webrtc.voiceengine.WebRtcAudioEffects:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    java.util.UUID AOSP_ACOUSTIC_ECHO_CANCELER -> AOSP_ACOUSTIC_ECHO_CANCELER
    java.util.UUID AOSP_NOISE_SUPPRESSOR -> AOSP_NOISE_SUPPRESSOR
    android.media.audiofx.AudioEffect$Descriptor[] cachedEffects -> cachedEffects
    android.media.audiofx.AcousticEchoCanceler aec -> aec
    android.media.audiofx.NoiseSuppressor ns -> ns
    boolean shouldEnableAec -> shouldEnableAec
    boolean shouldEnableNs -> shouldEnableNs
    64:64:boolean isAcousticEchoCancelerSupported() -> isAcousticEchoCancelerSupported
    73:73:boolean isNoiseSuppressorSupported() -> isNoiseSuppressorSupported
    78:83:boolean isAcousticEchoCancelerBlacklisted() -> isAcousticEchoCancelerBlacklisted
    88:93:boolean isNoiseSuppressorBlacklisted() -> isNoiseSuppressorBlacklisted
    99:107:boolean isAcousticEchoCancelerExcludedByUUID() -> isAcousticEchoCancelerExcludedByUUID
    113:120:boolean isNoiseSuppressorExcludedByUUID() -> isNoiseSuppressorExcludedByUUID
    125:127:boolean isAcousticEchoCancelerEffectAvailable() -> isAcousticEchoCancelerEffectAvailable
    132:134:boolean isNoiseSuppressorEffectAvailable() -> isNoiseSuppressorEffectAvailable
    140:144:boolean canUseAcousticEchoCanceler() -> canUseAcousticEchoCanceler
    150:154:boolean canUseNoiseSuppressor() -> canUseNoiseSuppressor
    158:158:org.webrtc.voiceengine.WebRtcAudioEffects create() -> create
    161:163:void <init>() -> <init>
    170:181:boolean setAEC(boolean) -> setAEC
    189:200:boolean setNS(boolean) -> setNS
    204:256:void enable(int) -> enable
    262:271:void release() -> release
    281:285:boolean effectTypeIsVoIP(java.util.UUID) -> effectTypeIsVoIP
    290:293:void assertTrue(boolean) -> assertTrue
    298:306:android.media.audiofx.AudioEffect$Descriptor[] getAvailableEffects() -> getAvailableEffects
    313:322:boolean isEffectTypeAvailable(java.util.UUID) -> isEffectTypeAvailable
    35:38:void <clinit>() -> <clinit>
org.webrtc.voiceengine.WebRtcAudioManager -> org.webrtc.voiceengine.WebRtcAudioManager:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean blacklistDeviceForAAudioUsage -> blacklistDeviceForAAudioUsage
    boolean useStereoOutput -> useStereoOutput
    boolean useStereoInput -> useStereoInput
    boolean blacklistDeviceForOpenSLESUsage -> blacklistDeviceForOpenSLESUsage
    boolean blacklistDeviceForOpenSLESUsageIsOverridden -> blacklistDeviceForOpenSLESUsageIsOverridden
    int BITS_PER_SAMPLE -> BITS_PER_SAMPLE
    int DEFAULT_FRAME_PER_BUFFER -> DEFAULT_FRAME_PER_BUFFER
    long nativeAudioManager -> nativeAudioManager
    android.media.AudioManager audioManager -> audioManager
    boolean initialized -> initialized
    int nativeSampleRate -> nativeSampleRate
    int nativeChannels -> nativeChannels
    boolean hardwareAEC -> hardwareAEC
    boolean hardwareAGC -> hardwareAGC
    boolean hardwareNS -> hardwareNS
    boolean lowLatencyOutput -> lowLatencyOutput
    boolean lowLatencyInput -> lowLatencyInput
    boolean proAudio -> proAudio
    boolean aAudio -> aAudio
    int sampleRate -> sampleRate
    int outputChannels -> outputChannels
    int inputChannels -> inputChannels
    int outputBufferSize -> outputBufferSize
    int inputBufferSize -> inputBufferSize
    org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger volumeLogger -> volumeLogger
    58:60:void setBlacklistDeviceForOpenSLESUsage(boolean) -> setBlacklistDeviceForOpenSLESUsage
    67:69:void setStereoOutput(boolean) -> setStereoOutput
    74:76:void setStereoInput(boolean) -> setStereoInput
    81:81:boolean getStereoOutput() -> getStereoOutput
    87:87:boolean getStereoInput() -> getStereoInput
    172:186:void <init>(long) -> <init>
    189:197:boolean init() -> init
    201:206:void dispose() -> dispose
    209:209:boolean isCommunicationModeEnabled() -> isCommunicationModeEnabled
    213:219:boolean isDeviceBlacklistedForOpenSLESUsage() -> isDeviceBlacklistedForOpenSLESUsage
    223:239:void storeAudioParameters() -> storeAudioParameters
    243:243:boolean hasEarpiece() -> hasEarpiece
    249:249:boolean isLowLatencyOutputSupported() -> isLowLatencyOutputSupported
    261:261:boolean isLowLatencyInputSupported() -> isLowLatencyInputSupported
    267:268:boolean isProAudioSupported() -> isProAudioSupported
    276:278:boolean isAAudioSupported() -> isAAudioSupported
    285:300:int getNativeOutputSampleRate() -> getNativeOutputSampleRate
    304:309:int getSampleRateForApiLevel() -> getSampleRateForApiLevel
    314:320:int getLowLatencyOutputFramesPerBuffer() -> getLowLatencyOutputFramesPerBuffer
    330:330:boolean isAcousticEchoCancelerSupported() -> isAcousticEchoCancelerSupported
    333:333:boolean isNoiseSuppressorSupported() -> isNoiseSuppressorSupported
    340:343:int getMinOutputFrameSize(int,int) -> getMinOutputFrameSize
    350:351:int getLowLatencyInputFramesPerBuffer() -> getLowLatencyInputFramesPerBuffer
    358:361:int getMinInputFrameSize(int,int) -> getMinInputFrameSize
    368:371:void assertTrue(boolean) -> assertTrue
    void nativeCacheAudioParameters(int,int,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int,long) -> nativeCacheAudioParameters
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger -> org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger:
    java.lang.String THREAD_NAME -> THREAD_NAME
    int TIMER_PERIOD_IN_SECONDS -> TIMER_PERIOD_IN_SECONDS
    android.media.AudioManager audioManager -> audioManager
    java.util.Timer timer -> timer
    107:109:void <init>(android.media.AudioManager) -> <init>
    112:116:void start() -> start
    143:147:void stop() -> stop
    100:100:android.media.AudioManager access$000(org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger) -> access$000
    100:100:void access$100(org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger) -> access$100
org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask -> org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger$LogVolumeTask:
    int maxRingVolume -> maxRingVolume
    int maxVoiceCallVolume -> maxVoiceCallVolume
    org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger this$0 -> this$0
    122:125:void <init>(org.webrtc.voiceengine.WebRtcAudioManager$VolumeLogger,int,int) -> <init>
    129:139:void run() -> run
org.webrtc.voiceengine.WebRtcAudioRecord -> org.webrtc.voiceengine.WebRtcAudioRecord:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BITS_PER_SAMPLE -> BITS_PER_SAMPLE
    int CALLBACK_BUFFER_SIZE_MS -> CALLBACK_BUFFER_SIZE_MS
    int BUFFERS_PER_SECOND -> BUFFERS_PER_SECOND
    int BUFFER_SIZE_FACTOR -> BUFFER_SIZE_FACTOR
    long AUDIO_RECORD_THREAD_JOIN_TIMEOUT_MS -> AUDIO_RECORD_THREAD_JOIN_TIMEOUT_MS
    int DEFAULT_AUDIO_SOURCE -> DEFAULT_AUDIO_SOURCE
    int audioSource -> audioSource
    long nativeAudioRecord -> nativeAudioRecord
    org.webrtc.voiceengine.WebRtcAudioEffects effects -> effects
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    android.media.AudioRecord audioRecord -> audioRecord
    org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread audioThread -> audioThread
    boolean microphoneMute -> microphoneMute
    byte[] emptyBytes -> emptyBytes
    org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback errorCallback -> errorCallback
    org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback audioSamplesReadyCallback -> audioSamplesReadyCallback
    80:82:void setErrorCallback(org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback) -> setErrorCallback
    130:131:void setOnAudioSamplesReady(org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback) -> setOnAudioSamplesReady
    208:215:void <init>(long) -> <init>
    218:223:boolean enableBuiltInAEC(boolean) -> enableBuiltInAEC
    227:232:boolean enableBuiltInNS(boolean) -> enableBuiltInNS
    236:286:int initRecording(int,int) -> initRecording
    290:309:boolean startRecording() -> startRecording
    313:325:boolean stopRecording() -> stopRecording
    329:333:void logMainParameters() -> logMainParameters
    336:341:void logMainParametersExtended() -> logMainParametersExtended
    345:348:void assertTrue(boolean) -> assertTrue
    351:351:int channelCountToConfiguration(int) -> channelCountToConfiguration
    void nativeCacheDirectBufferAddress(java.nio.ByteBuffer,long) -> nativeCacheDirectBufferAddress
    void nativeDataIsRecorded(int,long) -> nativeDataIsRecorded
    360:363:void setAudioSource(int) -> setAudioSource
    366:366:int getDefaultAudioSource() -> getDefaultAudioSource
    372:374:void setMicrophoneMute(boolean) -> setMicrophoneMute
    378:383:void releaseAudioResources() -> releaseAudioResources
    386:391:void reportWebRtcAudioRecordInitError(java.lang.String) -> reportWebRtcAudioRecordInitError
    395:400:void reportWebRtcAudioRecordStartError(org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode,java.lang.String) -> reportWebRtcAudioRecordStartError
    403:408:void reportWebRtcAudioRecordError(java.lang.String) -> reportWebRtcAudioRecordError
    26:26:android.media.AudioRecord access$000(org.webrtc.voiceengine.WebRtcAudioRecord) -> access$000
    26:26:void access$100(boolean) -> access$100
    26:26:java.nio.ByteBuffer access$200(org.webrtc.voiceengine.WebRtcAudioRecord) -> access$200
    26:26:boolean access$300() -> access$300
    26:26:byte[] access$400(org.webrtc.voiceengine.WebRtcAudioRecord) -> access$400
    26:26:long access$500(org.webrtc.voiceengine.WebRtcAudioRecord) -> access$500
    26:26:void access$600(org.webrtc.voiceengine.WebRtcAudioRecord,int,long) -> access$600
    26:26:org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback access$700() -> access$700
    26:26:void access$900(org.webrtc.voiceengine.WebRtcAudioRecord,java.lang.String) -> access$900
    50:51:void <clinit>() -> <clinit>
org.webrtc.voiceengine.WebRtcAudioRecord$1 -> org.webrtc.voiceengine.WebRtcAudioRecord$1:
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode -> org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode:
    org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode AUDIO_RECORD_START_EXCEPTION -> AUDIO_RECORD_START_EXCEPTION
    org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode AUDIO_RECORD_START_STATE_MISMATCH -> AUDIO_RECORD_START_STATE_MISMATCH
    org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode[] $VALUES -> $VALUES
    66:66:org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode[] values() -> values
    66:66:org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode valueOf(java.lang.String) -> valueOf
    66:66:void <init>(java.lang.String,int) -> <init>
    66:68:void <clinit>() -> <clinit>
org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread -> org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordThread:
    boolean keepAlive -> keepAlive
    org.webrtc.voiceengine.WebRtcAudioRecord this$0 -> this$0
    140:144:void <init>(org.webrtc.voiceengine.WebRtcAudioRecord,java.lang.String) -> <init>
    150:198:void run() -> run
    203:205:void stopThread() -> stopThread
org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples -> org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples:
    int audioFormat -> audioFormat
    int channelCount -> channelCount
    int sampleRate -> sampleRate
    byte[] data -> data
    98:103:void <init>(android.media.AudioRecord,byte[]) -> <init>
    106:106:int getAudioFormat() -> getAudioFormat
    110:110:int getChannelCount() -> getChannelCount
    114:114:int getSampleRate() -> getSampleRate
    118:118:byte[] getData() -> getData
    88:88:void <init>(android.media.AudioRecord,byte[],org.webrtc.voiceengine.WebRtcAudioRecord$1) -> <init>
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback -> org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordErrorCallback:
    void onWebRtcAudioRecordInitError(java.lang.String) -> onWebRtcAudioRecordInitError
    void onWebRtcAudioRecordStartError(org.webrtc.voiceengine.WebRtcAudioRecord$AudioRecordStartErrorCode,java.lang.String) -> onWebRtcAudioRecordStartError
    void onWebRtcAudioRecordError(java.lang.String) -> onWebRtcAudioRecordError
org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback -> org.webrtc.voiceengine.WebRtcAudioRecord$WebRtcAudioRecordSamplesReadyCallback:
    void onWebRtcAudioRecordSamplesReady(org.webrtc.voiceengine.WebRtcAudioRecord$AudioSamples) -> onWebRtcAudioRecordSamplesReady
org.webrtc.voiceengine.WebRtcAudioTrack -> org.webrtc.voiceengine.WebRtcAudioTrack:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BITS_PER_SAMPLE -> BITS_PER_SAMPLE
    int CALLBACK_BUFFER_SIZE_MS -> CALLBACK_BUFFER_SIZE_MS
    int BUFFERS_PER_SECOND -> BUFFERS_PER_SECOND
    long AUDIO_TRACK_THREAD_JOIN_TIMEOUT_MS -> AUDIO_TRACK_THREAD_JOIN_TIMEOUT_MS
    int DEFAULT_USAGE -> DEFAULT_USAGE
    int usageAttribute -> usageAttribute
    long nativeAudioTrack -> nativeAudioTrack
    android.media.AudioManager audioManager -> audioManager
    org.webrtc.ThreadUtils$ThreadChecker threadChecker -> threadChecker
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    android.media.AudioTrack audioTrack -> audioTrack
    org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread audioThread -> audioThread
    boolean speakerMute -> speakerMute
    byte[] emptyBytes -> emptyBytes
    org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback errorCallbackOld -> errorCallbackOld
    org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback errorCallback -> errorCallback
    org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcRemoteAudioCallback remoteAudioCallback -> remoteAudioCallback
    58:61:void setAudioTrackUsageAttribute(int) -> setAudioTrackUsageAttribute
    64:68:int getDefaultUsageAttribute() -> getDefaultUsageAttribute
    117:119:void setErrorCallback(org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback) -> setErrorCallback
    122:124:void setErrorCallback(org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback) -> setErrorCallback
    127:129:void setRemoteAudioCallback(org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcRemoteAudioCallback) -> setRemoteAudioCallback
    74:230:void <init>(long) -> <init>
    233:301:boolean initPlayout(int,int) -> initPlayout
    305:333:boolean startPlayout() -> startPlayout
    337:352:boolean stopPlayout() -> stopPlayout
    357:360:int getStreamMaxVolume() -> getStreamMaxVolume
    365:373:boolean setStreamVolume(int) -> setStreamVolume
    377:379:boolean isVolumeFixed() -> isVolumeFixed
    384:387:int getStreamVolume() -> getStreamVolume
    391:397:void logMainParameters() -> logMainParameters
    405:427:android.media.AudioTrack createAudioTrackOnLollipopOrHigher(int,int,int) -> createAudioTrackOnLollipopOrHigher
    436:436:android.media.AudioTrack createAudioTrackOnLowerThanLollipop(int,int,int) -> createAudioTrackOnLowerThanLollipop
    441:446:void logBufferSizeInFrames() -> logBufferSizeInFrames
    449:455:void logBufferCapacityInFrames() -> logBufferCapacityInFrames
    458:460:void logMainParametersExtended() -> logMainParametersExtended
    469:472:void logUnderrunCount() -> logUnderrunCount
    476:479:void assertTrue(boolean) -> assertTrue
    482:482:int channelCountToConfiguration(int) -> channelCountToConfiguration
    void nativeCacheDirectBufferAddress(java.nio.ByteBuffer,long) -> nativeCacheDirectBufferAddress
    void nativeGetPlayoutData(int,long) -> nativeGetPlayoutData
    492:494:void setSpeakerMute(boolean) -> setSpeakerMute
    498:503:void releaseAudioResources() -> releaseAudioResources
    506:514:void reportWebRtcAudioTrackInitError(java.lang.String) -> reportWebRtcAudioTrackInitError
    518:526:void reportWebRtcAudioTrackStartError(org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode,java.lang.String) -> reportWebRtcAudioTrackStartError
    529:537:void reportWebRtcAudioTrackError(java.lang.String) -> reportWebRtcAudioTrackError
    28:28:android.media.AudioTrack access$000(org.webrtc.voiceengine.WebRtcAudioTrack) -> access$000
    28:28:void access$100(boolean) -> access$100
    28:28:java.nio.ByteBuffer access$200(org.webrtc.voiceengine.WebRtcAudioTrack) -> access$200
    28:28:long access$300(org.webrtc.voiceengine.WebRtcAudioTrack) -> access$300
    28:28:void access$400(org.webrtc.voiceengine.WebRtcAudioTrack,int,long) -> access$400
    28:28:boolean access$500() -> access$500
    28:28:byte[] access$600(org.webrtc.voiceengine.WebRtcAudioTrack) -> access$600
    28:28:org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcRemoteAudioCallback access$700() -> access$700
    28:28:void access$800(org.webrtc.voiceengine.WebRtcAudioTrack,java.lang.String) -> access$800
    49:50:void <clinit>() -> <clinit>
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode -> org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode:
    org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode AUDIO_TRACK_START_EXCEPTION -> AUDIO_TRACK_START_EXCEPTION
    org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode AUDIO_TRACK_START_STATE_MISMATCH -> AUDIO_TRACK_START_STATE_MISMATCH
    org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode[] $VALUES -> $VALUES
    87:87:org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode[] values() -> values
    87:87:org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode valueOf(java.lang.String) -> valueOf
    87:87:void <init>(java.lang.String,int) -> <init>
    87:89:void <clinit>() -> <clinit>
org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread -> org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackThread:
    boolean keepAlive -> keepAlive
    org.webrtc.voiceengine.WebRtcAudioTrack this$0 -> this$0
    138:142:void <init>(org.webrtc.voiceengine.WebRtcAudioTrack,java.lang.String) -> <init>
    146:203:void run() -> run
    206:209:int writeBytes(android.media.AudioTrack,java.nio.ByteBuffer,int) -> writeBytes
    216:218:void stopThread() -> stopThread
org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback -> org.webrtc.voiceengine.WebRtcAudioTrack$ErrorCallback:
    void onWebRtcAudioTrackInitError(java.lang.String) -> onWebRtcAudioTrackInitError
    void onWebRtcAudioTrackStartError(org.webrtc.voiceengine.WebRtcAudioTrack$AudioTrackStartErrorCode,java.lang.String) -> onWebRtcAudioTrackStartError
    void onWebRtcAudioTrackError(java.lang.String) -> onWebRtcAudioTrackError
org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback -> org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcAudioTrackErrorCallback:
    void onWebRtcAudioTrackInitError(java.lang.String) -> onWebRtcAudioTrackInitError
    void onWebRtcAudioTrackStartError(java.lang.String) -> onWebRtcAudioTrackStartError
    void onWebRtcAudioTrackError(java.lang.String) -> onWebRtcAudioTrackError
org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcRemoteAudioCallback -> org.webrtc.voiceengine.WebRtcAudioTrack$WebRtcRemoteAudioCallback:
    void onRemoteAudioAvailable(java.nio.ByteBuffer,int,long) -> onRemoteAudioAvailable
org.webrtc.voiceengine.WebRtcAudioUtils -> org.webrtc.voiceengine.WebRtcAudioUtils:
    java.lang.String TAG -> TAG
    java.lang.String[] BLACKLISTED_OPEN_SL_ES_MODELS -> BLACKLISTED_OPEN_SL_ES_MODELS
    java.lang.String[] BLACKLISTED_AEC_MODELS -> BLACKLISTED_AEC_MODELS
    java.lang.String[] BLACKLISTED_NS_MODELS -> BLACKLISTED_NS_MODELS
    int DEFAULT_SAMPLE_RATE_HZ -> DEFAULT_SAMPLE_RATE_HZ
    int defaultSampleRateHz -> defaultSampleRateHz
    boolean isDefaultSampleRateOverridden -> isDefaultSampleRateOverridden
    boolean useWebRtcBasedAcousticEchoCanceler -> useWebRtcBasedAcousticEchoCanceler
    boolean useWebRtcBasedNoiseSuppressor -> useWebRtcBasedNoiseSuppressor
    33:33:void <init>() -> <init>
    77:78:void setWebRtcBasedAcousticEchoCanceler(boolean) -> setWebRtcBasedAcousticEchoCanceler
    83:84:void setWebRtcBasedNoiseSuppressor(boolean) -> setWebRtcBasedNoiseSuppressor
    90:91:void setWebRtcBasedAutomaticGainControl(boolean) -> setWebRtcBasedAutomaticGainControl
    96:99:boolean useWebRtcBasedAcousticEchoCanceler() -> useWebRtcBasedAcousticEchoCanceler
    105:108:boolean useWebRtcBasedNoiseSuppressor() -> useWebRtcBasedNoiseSuppressor
    116:116:boolean useWebRtcBasedAutomaticGainControl() -> useWebRtcBasedAutomaticGainControl
    126:126:boolean isAcousticEchoCancelerSupported() -> isAcousticEchoCancelerSupported
    129:129:boolean isNoiseSuppressorSupported() -> isNoiseSuppressorSupported
    134:134:boolean isAutomaticGainControlSupported() -> isAutomaticGainControlSupported
    143:145:void setDefaultSampleRateHz(int) -> setDefaultSampleRateHz
    150:150:boolean isDefaultSampleRateOverridden() -> isDefaultSampleRateOverridden
    156:156:int getDefaultSampleRateHz() -> getDefaultSampleRateHz
    160:160:java.util.List getBlackListedModelsForAecUsage() -> getBlackListedModelsForAecUsage
    164:164:java.util.List getBlackListedModelsForNsUsage() -> getBlackListedModelsForNsUsage
    169:169:java.lang.String getThreadInfo() -> getThreadInfo
    175:175:boolean runningOnEmulator() -> runningOnEmulator
    180:181:boolean deviceIsBlacklistedForOpenSLESUsage() -> deviceIsBlacklistedForOpenSLESUsage
    186:195:void logDeviceInfo(java.lang.String) -> logDeviceInfo
    201:208:void logAudioState(java.lang.String) -> logAudioState
    212:219:void logAudioStateBasic(java.lang.String,android.media.AudioManager) -> logAudioStateBasic
    222:225:boolean isVolumeFixed(android.media.AudioManager) -> isVolumeFixed
    230:252:void logAudioStateVolume(java.lang.String,android.media.AudioManager) -> logAudioStateVolume
    256:259:void logIsStreamMute(java.lang.String,android.media.AudioManager,int,java.lang.StringBuilder) -> logIsStreamMute
    262:292:void logAudioDeviceInfo(java.lang.String,android.media.AudioManager) -> logAudioDeviceInfo
    296:306:java.lang.String modeToString(int) -> modeToString
    311:325:java.lang.String streamTypeToString(int) -> streamTypeToString
    331:379:java.lang.String deviceTypeToString(int) -> deviceTypeToString
    385:385:boolean hasMicrophone() -> hasMicrophone
    39:63:void <clinit>() -> <clinit>
